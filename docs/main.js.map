{"version":3,"sources":["./src/app/board/components/client/client.component.ts","./src/app/board/components/client/client.component.html","./src/app/board/components/textfield/textfield.component.ts","./src/app/board/components/textfield/textfield.component.html","./src/app/pages/header/header.component.html","./src/app/pages/header/header.component.ts","./src/models/Options.ts","./src/models/APIGateway.ts","./src/app/simulation.service.ts","./src/app/pages/footer/footer.component.ts","./src/app/pages/footer/footer.component.html","./src/app/export.service.ts","./src/shared/DelayedHoverDirective.ts","./src/models/EndpointOperator.ts","./src/app/pages/pages.component.ts","./src/app/pages/pages.component.html","./src/app/board/tutorials/tutorial-controls/tutorial-controls.component.ts","./src/app/board/tutorials/tutorial-controls/tutorial-controls.component.html","./src/app/pages/getting-started/getting-started.component.ts","./src/app/pages/getting-started/getting-started.component.html","./src/shared/resizable-textarea.ts","./src/app/board/components/cdn/cdn.component.ts","./src/app/board/components/cdn/cdn.component.html","./src/app/board/components/apigateway/apigateway.component.ts","./src/app/board/components/apigateway/apigateway.component.html","./src/environments/environment.ts","./src/models/enums/BalancingAlgorithm.ts","./src/models/Endpoint.ts","./src/shared/vue-event-modifiers.plugin.ts","./src/models/enums/ReplacementPolicy.ts","./src/models/Database.ts","./src/models/enums/APIType.ts","./src/models/Shared/EventDispatcher.ts","./src/models/Client.ts","./src/app/board/components/port/port.component.ts","./src/app/board/components/port/port.component.html","./src/models/enums/Technology.ts","./src/models/PubSub.ts","./src/app/pages/landing-page/landing-page.component.ts","./src/app/pages/landing-page/landing-page.component.html","./src/app/board/components/database/database.component.ts","./src/app/board/components/database/database.component.html","./src/app/create/create.component.ts","./src/app/create/create.component.html","./src/models/enums/gRPCMode.ts","./src/models/RequestData.ts","./src/app/board/board.component.ts","./src/app/board/board.component.html","./src/models/ClientCluster.ts","./src/app/board/components/api/api.component.ts","./src/app/board/components/api/api.component.html","./src/app/board/components/cache/cache.component.ts","./src/app/board/components/cache/cache.component.html","./src/app/board/components/Shared/simulation-card/simulation-card.component.html","./src/app/board/components/Shared/simulation-card/simulation-card.component.ts","./src/app/board/components/Shared/title/title.component.html","./src/app/board/components/Shared/title/title.component.ts","./src/app/board/components/connection/connection.component.ts","./src/app/board/components/connection/connection.component.html","./src/models/MessageQueue.ts","./src/app/board/optionsmenu/optionsmenu.component.ts","./src/app/board/optionsmenu/optionsmenu.component.html","./src/app/board/components/Shared/OperatorComponent.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/board/components/pubsub/pubsub.component.ts","./src/app/board/components/pubsub/pubsub.component.html","./src/models/enums/HTTPStatus.ts","./src/app/saving.service.ts","./src/models/Port.ts","./src/models/enums/WritePolicy.ts","./src/models/enums/LoadBalancerType.ts","./src/app/changes.service.ts","./src/app/board/boardUI/boardUI.component.ts","./src/app/board/boardUI/boardUI.component.html","./src/models/enums/DatabaseType.ts","./src/app/app.module.ts","./src/app/board/components/proxy/proxy.component.ts","./src/app/board/components/proxy/proxy.component.html","./src/app/board/components/Shared/endpoint-select/endpoint-select.component.ts","./src/app/board/components/Shared/endpoint-select/endpoint-select.component.html","./src/models/enums/HTTPMethod.ts","./src/app/board/components/loadbalancer/loadbalancer.component.ts","./src/app/board/components/loadbalancer/loadbalancer.component.html","./src/models/LogicComponent.ts","./src/app/placing.service.ts","./src/shared/ExtensionMethods.ts","./src/models/Proxy.ts","./src/models/API.ts","./src/models/Cache.ts","./src/app/board/components/Shared/slider-described/slider-described.component.ts","./src/app/board/components/Shared/slider-described/slider-described.component.html","./src/app/board/components/clientcluster/clientcluster.component.ts","./src/app/board/components/clientcluster/clientcluster.component.html","./src/models/LoadBalancer.ts","./src/app/selection.service.ts","./src/models/TextField.ts","./src/app/viewing.service.ts","./src/app/board/components/cloudstorage/cloudstorage.component.ts","./src/app/board/components/cloudstorage/cloudstorage.component.html","./src/app/info-tooltip/info-tooltip.component.html","./src/app/info-tooltip/info-tooltip.component.ts","./src/models/enums/Protocol.ts","./src/models/Connection.ts","./src/models/CloudStorage.ts","./src/app/app-routing.module.ts","./src/models/CDN.ts","./src/app/board/components/messagequeue/messagequeue.component.ts","./src/app/board/components/messagequeue/messagequeue.component.html","./src/models/WebServer.ts","./src/app/board/componentmenu/componentmenu.component.ts","./src/app/board/componentmenu/componentmenu.component.html","./src/app/board/components/webserver/webserver.component.ts","./src/app/board/components/webserver/webserver.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC2C;AAEU;AAEA;AACmB;AACsB;AAC9B;;;;;;;;;;;;;ICO5D,6EAA0D;IAArC,+TAAoB;IACrC,qEAA6B;IACjC,4DAAS;;;;IACT,6EAAsE;IAAhC,0UAA+B;IACjE,qEAAS;IAAA,gEAAI;IAAA,sEACjB;IAAA,4DAAS;;;;IACT,6EAAyE;IAA1B,oUAAyB;IACpE,+DAAG;IAAA,gEAAI;IAAA,sEACX;IAAA,4DAAS;;;IAXb,0EAEkE;IAC9D,wHAES;IACT,wHAES;IACT,wHAES;IACb,4DAAM;;;IAXN,qGAAwC;IAEO,0DAAa;IAAb,gFAAa;IAG/C,0DAA4B;IAA5B,+FAA4B;IAGb,0DAAsB;IAAtB,yFAAsB;;;IAgB5B,iFAA2E;IAAA,uDAAgB;IAAA,4DAAa;;;IAAhD,+EAAkB;IAAC,0DAAgB;IAAhB,iFAAgB;;;IAGzF,iFAA+B;IAC3B,iFAAsB;IAAA,4DAAC;IAAA,4DAAa;IACxC,4DAAa;;;IAKf,iFAAqE;IAAA,uDAAwE;IAAA,4DAAa;;;;IAAtG,6EAAgB;IAAC,0DAAwE;IAAxE,qKAAwE;;;IAG3I,iFAAiC;IAC7B,iFAAwB;IAAA,8DAAG;IAAA,4DAAa;IAC5C,4DAAa;;;;IAgBrB,6EACiC;IAAhC,oUAA+B;IAAC,+EAAoB;IAAA,4DAAS;;;;IAC9D,6EAC2B;IAA1B,8TAAyB;IAAC,yEAAc;IAAA,4DAAS;;ADxD3D,MAAM,eAAiB,SAAQ,2EAAiB;IALvD;;QAOQ,gBAAW,GAAY,IAAI,wDAAM,EAAE,CAAC;QAE3C,uBAAkB,GAAe,EAAE,CAAC;QACpC,qBAAgB,GAAiB,EAAE,CAAC;QAEpC,gBAAW,GAAY,IAAI,CAAC;QAE5B,YAAO,GAAY,KAAK,CAAC;QACzB,2BAAsB,GAAY,KAAK,CAAC;QACxC,qBAAgB,GAAY,KAAK,CAAC;QAKlC,uBAAkB,GAAG,KAAK,CAAC;KA6L3B;IA3LA,eAAe;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACf,CAAC;IAEH,oBAAoB;QACnB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAChH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,gBAAgB,CAAC;QACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvE,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED,eAAe;QACd,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QAClC,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAiB,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC;QACnE,IAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAC;YACtC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO;SACP;QACD,IAAG,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,EAAC;YACrC,IAAI,GAAG,GAAG,KAAK,CAAC;YAChB,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAC,EAAE,6DAA6D;gBACnG,IAAG,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,+EAAW,CAAC,CAAC,CAAC,gBAAgB,EAAC,OAAO,CAAC,gBAAgB,CAAC,EAAC;oBACnF,GAAG,GAAG,IAAI,CAAC;oBACX,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC;oBAClD,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC9B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,gBAAgB,CAAC;iBAC3C;aACD;YACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC;YACtD,IAAG,CAAC,GAAG,EAAC;gBACP,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC3E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC;gBACvF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;aACvE;SACD;aACG;YACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC;YACvF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAG,IAAI,CAAC,UAAU;YACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAEM,WAAW,CAAC,KAAiB;QACnC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAEK,mBAAmB;;YACxB,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;YACnD,IAAG,IAAI,CAAC,kBAAkB,EAAC;gBAC1B,IAAG,IAAI,CAAC,WAAW,EAAC;oBACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;iBACvC;aACD;YACD,IAAG,IAAI,CAAC,UAAU;gBACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC;KAAA;IAED,iBAAiB;QAChB,IAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO;SACP;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,kBAAkB,CAAC;YACpG,IAAI,CAAC,WAAW,CAAC,qBAAqB;YACtC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,UAAU,CAAC;QAC3J,IAAG,IAAI,CAAC,UAAU;YACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAED,wBAAwB;QACvB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI;YACnF,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,KAAK;gBACzE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,UAAU,CAAC;YAC9E,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB;QACvC,IAAG,IAAI,CAAC,UAAU;YACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAED,kBAAkB;QACjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI;YAC7E,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,KAAK;gBACzE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,UAAU,CAAC;YAC9E,IAAI,CAAC,WAAW,CAAC,qBAAqB;QACtC,IAAG,IAAI,CAAC,UAAU;YACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAEK,MAAM;;YACX,MAAM,yEAAK,CAAE,CAAC,CAAC,GAAG,yFAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACtF,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAG,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,OAAO;gBAC3C,OAAO,IAAI,CAAC;YACb,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAG,IAAI,CAAC,UAAU;gBACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAC5B,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;QAC5B,CAAC;KAAA;IAEK,QAAQ;;YACb,IAAI,OAAO,GAAG,IAAI,kEAAW,EAAE,CAAC;YAEhC,OAAO,CAAC,MAAM,GAAG,IAAI,wEAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC/G,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5D,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAC7C,IAAG,IAAI,CAAC,WAAW,CAAC,WAAW,IAAI,IAAI,EAAE;gBACxC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBACjD,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;aAC7B;;gBAEA,OAAO,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;YAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC7C,IAAG,IAAI,CAAC,UAAU;gBACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAG,CAAE,CAAC,MAAM,GAAG,CAAC,EAAC;gBAChB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAG,IAAI,CAAC,UAAU;oBACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;aAC5B;QACF,CAAC;KAAA;IAED,mBAAmB;QAClB,IAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB;YACxC,OAAO;QACR,IAAI,CAAC,WAAW,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAE9C,IAAI,EAAE,GAAG,wEAAI,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,IAAI,kEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,GAAG,IAAI,wEAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtH,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC7C,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAG,IAAI,CAAC,UAAU;YACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAEK,aAAa;;YAClB,IAAG,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB;gBACzC,OAAO;YAER,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YACtC,IAAG,EAAE,IAAI,IAAI;gBACZ,OAAO;YACR,IAAI,OAAO,GAAG,IAAI,kEAAW,EAAE,CAAC;YAChC,OAAO,CAAC,MAAM,GAAG,IAAI,wEAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACvH,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5D,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAC7C,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;YACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,CAAC,qBAAqB,GAAG,KAAK,CAAC;YAE/C,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAG,IAAI,CAAC,UAAU;gBACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC;KAAA;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,wDAAM,EAAE,CAAC;QACrB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;sGA5MW,eAAe;+FAAf,eAAe;;;;;;;;QCf5B,+EAKC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,kJAAa,2BAAyB,IAAC,4FAAe,2BAAuB,IAAtC,kFACzD,uBAAmB,IADsC;QAE9D,oEAA+B;QACnC,4DAAM;QACV,4DAAM;QACN,2GAYM;QACN,yEAA0B;QACtB,+EAAc;QACV,uEAAK;QACD,0EAA8B;QAC1B,2EAA2C;QAAA,6EAAiB;QAAA,8EAAyG;QAAA,4DAAO;QAC5K,2EAA+B;QAC3B,wEAAM;QAAA,wDAAwB;QAAA,4DAAO;QACzC,4DAAM;QACV,4DAAM;QACN,0EAA8B;QAC1B,sFAAuD;QACnD,sFAA8H;QAAlG,gKAAmB,0BAAsB,IAAC;QACpE,4HAAwG;QAC1G,4DAAa;QACb,0MAIc;QAClB,4DAAiB;QACjB,sFAAiF;QAC7E,sFAAiH;QAArG,gKAAmB,iBAAa,IAAC;QAC3C,4HAA0J;QAC5J,4DAAa;QACb,0MAIc;QAClB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,mFAMoB;QACxB,4DAAM;QACN,iFAAc;QACV,2EAA6B;QACzB,2EAA+B;QAC3B,oHAC8D;QAC9D,oHACkD;QAClD,uEAAK;QACD,8EACqB;QAArB,wIAAS,cAAU,IAAC;QAAC,qEAAS;QAAA,4DAAS;QACvC,4EAA4L;QAA/E,sIAAS,yBAAqB,IAAC;QAAgD,oEAA+B;QAAA,4DAAO;QACtO,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA7EN,kGAAwC;QADxC,sFAA8B;QAUxB,0DAAgB;QAAhB,gFAAgB;QAiBoE,0DAA2E;QAA3E,oIAA2E;QAE3I,0DAAwB;QAAxB,2FAAwB;QAKyC,0DAAsD;QAAtD,iHAAsD;QAC1F,0DAAqB;QAArB,2FAAqB;QASV,0DAAoD;QAApD,+GAAoD;QACjE,0DAAmB;QAAnB,yFAAmB;QAWhE,0DAAqB;QAArB,kFAAqB;QAUJ,0DAA4B;QAA5B,4FAA4B;QAE5B,0DAAsB;QAAtB,sFAAsB;QAGnB,0DAAqB;QAArB,kFAAqB;QAEvB,0DAAmC;QAAnC,2FAAmC;;uHD5DhD,eAAe;;;;;;;;;;;;;AEd5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACe;;;;;;;;;;IC6BxC,iFAA+B;IAC3B,iFAAsB;IAAA,4DAAC;IAAA,4DAAa;IACxC,4DAAa;;ADxB9B,MAAM,kBAAmB,SAAQ,2EAAiB;IALzD;;QAOQ,mBAAc,GAAe,IAAI,8DAAS,EAAE,CAAC;KA2CpD;IAvCA,eAAe;QACd,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAS,CAAC;YAC9D,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE;gBACnB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;gBAChC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;gBAE5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC;oBAC1C,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAElC,IAAI,CAAC,cAAc;oBAClB,IAAI,CAAC,YAAY,GAAG,KAAK,GAAG,CAAC,CAAC;aAC/B;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEM,eAAe,CAAC,KAAK;QAC3B,IAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7D,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B,CAAC;IAED,UAAU;QACT,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC;IAC1E,CAAC;IAED,YAAY;QACX,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC;IAC9E,CAAC;IAED,MAAM,CAAC,CAAC;QACP,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IAC/C,CAAC;;+GA5CW,kBAAkB;kGAAlB,kBAAkB;;;;;;QCT/B,4EAOC;QALD,qJAAa,2BAAyB,IAAC,+FACzB,2BAAuB,IADE,qFAE9B,uBAAmB,IAFW;QAMnC,iFAK0B;QAH1B,+MAA0C,4FAGhC,kBAAc,IAHkB;QAGhB,4DAAW;QACzC,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,sEAAK;QACD,0EAA4B;QAAA,qEAAU;QAAA,4DAAO;QAC7C,0EAAmC;QAC/B,qFAAuD;QACnD,iFAA4F;QAAhF,mKAAmB,iBAAa,IAAC;QACzC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC9C,4DAAa;QACb,6MAIc;QAClB,4DAAiB;QACjB,4EAAyK;QAAnK,kIAAS,gBAAY,SAAE,iBAAa,IAAC;QACvC,oEAA2B;QAC/B,4DAAO;QACP,4EAA+K;QAAzK,kIAAS,kBAAc,SAAE,iBAAa,IAAC;QACzC,oEAA6B;QACjC,4DAAO;QACX,4DAAM;QACN,2EAA4B;QAAA,kEAAM;QAAA,4DAAO;QACzC,2EAAmC;QAC/B,6EAG0B;QADtB,qNAA8C;QAFlD,4DAG0B;QAE9B,4DAAM;QACN,2EAA4B;QAAA,6EAAiB;QAAA,4DAAO;QACpD,2EAAmC;QAC/B,6EAG0B;QADtB,+NAAwD;QAF5D,4DAG0B;QAE9B,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAxDN,qGAA2C;QAIvC,0DAA0D;QAA1D,kHAA0D;QADhD,oGAA4C;QAEtD,qGAA0C;QAWoB,2DAA6C;QAA7C,wGAA6C;QAC3E,0DAAW;QAAX,oEAAW;QACX,0DAAY;QAAZ,qEAAY;QACZ,0DAAY;QAAZ,qEAAY;QACZ,0DAAY;QAAZ,qEAAY;QACZ,0DAAY;QAAZ,qEAAY;QACZ,0DAAY;QAAZ,qEAAY;QACZ,0DAAY;QAAZ,qEAAY;QAQY,0DAAiD;QAAjD,yGAAiD;QAG/C,0DAAmD;QAAnD,2GAAmD;QAM1F,0DAAsC;QAAtC,mGAAsC;QAQtC,0DAAgD;QAAhD,6GAAgD;;0HD5C1D,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;IEAnB,2EAAwE;IAAA,mEAA2B;IAAA,4DAAO;;;IAEtG,2EAAmB;IAAA,mEAA0B;IAAA,4DAAO;;ACH7D,MAAM,oBAAoB;IAE/B,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEtD,QAAQ;IACR,CAAC;;wFALU,oBAAoB;oGAApB,oBAAoB;QDRjC,yEAAQ;QACJ,sEAAK;QACD,uEAAoC;QAChC,oEAA8B;QAC9B,uEAA2B;QAAA,qEAAU;QAAA,4DAAI;QAC7C,4DAAI;QACR,4DAAM;QACN,yEAAuB;QACnB,yEAA4I;QAAxE,yIAAS,gCAA4B,+BAAgC,CAAC,IAAC;QACvI,kHAA0G;QAC1G,4MAEc;QAClB,4DAAM;QACN,wEAAyF;QACrF,2EAAmB;QACf,2EACJ;QAAA,4DAAO;QACP,2EAAmB;QACf,oEAA6B;QACjC,4DAAO;QACX,4DAAI;QACJ,yEAAwC;QAAA,uEAAW;QAAA,4DAAI;QAC3D,4DAAM;QACV,4DAAS;;;QAhBwB,0DAA0C;QAA1C,kGAA0C;QACxD,0DAAmC;QAAnC,iGAAmC;;;;;;;;;;;;;;AEPtD;AAAA;AAAO,MAAM,OAAO;IAApB;QACI,UAAK,GAAW,WAAW,CAAC;QAC5B,MAAC,GAAW,CAAC,CAAC;QACd,MAAC,GAAW,CAAC,CAAC;IAElB,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsE;AAEA;AACpB;AACP;AAC8B;AAC9B;AACd;AACiC;AAExD,MAAM,UAAW,SAAQ,kEAAgB;IAO5C;QACI,KAAK,EAAE;QALX,oBAAe,GAA6B,EAAE,CAAC;QAE/C,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC;IACvC,CAAC;IAEK,WAAW,CAAC,IAAiB,EAAE,UAAkB;;YACnD,IAAG,UAAU,EAAC;gBACV,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC5D,IAAG,gBAAgB,IAAI,IAAI,EAAE,sDAAsD;oBAC/E,OAAO;gBACX,wDAAwD;gBACxD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC;oBAClB,IAAI,SAAS,GAAG,KAAK,CAAC;oBAEtB,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBACnC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;4BAC9B,IAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG;gCAC5D,+EAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAC;gCAC1F,SAAS,GAAG,IAAI,CAAC;6BACpB;wBACL,CAAC,CAAC;oBACN,CAAC,CAAC;oBACF,IAAG,CAAC,SAAS,EAAC,EAAE,2DAA2D;wBACvE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;wBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;wBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC;wBACvD,IAAG,MAAM;4BACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBACjD,OAAO;qBACV;oBACD,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACxF,IAAG,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,sDAAsD;wBACrF,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;wBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;wBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC;wBACpD,IAAG,GAAG;4BACF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;qBACpD;iBACJ;qBACG;oBACA,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC;wBACvN,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;iBAClF;aACJ;iBACG;gBACA,IAAG,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI;oBAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBACjG,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI;oBAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;gBAE5E,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAG,cAAc,IAAI,IAAI;oBACrB,OAAO;gBAEX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,IAAI,YAAY,GAAG,KAAK,CAAC;gBACzB,IAAI,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC9F,IAAI,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC9F,IAAI,uBAAuB,GAAG,CAAC,oBAAoB,IAAI,mBAAmB,CAAC,CAAC;gBAE5E,IAAG,CAAC,OAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAC;oBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,OAAO;iBACV;gBAED,6BAA6B;gBAC7B,KAAI,IAAI,MAAM,IAAI,cAAc,CAAC,OAAO,EAAC;oBACrC,0CAA0C;oBAC1C,IAAG,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI;wBACrD,SAAS;oBACb,IAAI,gBAA4B,CAAC;oBACjC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;wBAC9C,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;wBACxF,IAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,+EAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,EAAE;4BACnJ,gBAAgB,GAAG,UAAU,CAAC;4BAC9B,MAAM;yBACT;qBACJ;oBACD,IAAG,gBAAgB,IAAI,IAAI;wBACvB,SAAS;oBAEb,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,CAAC;oBAC7G,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC;2BAC1F,CAAC,uBAAuB,IAAI,uBAAuB,IAAI,CAAC,QAAQ,EAAE;wBACjE,SAAS;qBACZ;oBAED,IAAI,SAAS,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,wEAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;oBACpG,IAAI,OAAO,GAAG,IAAI,wDAAW,EAAE,CAAC;oBAChC,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;oBAC9B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;oBACjC,KAAK,CAAC,MAAM,GAAG,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,4DAAU,CAAC,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAEvJ,OAAO,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAE5F,OAAO,CAAC,MAAM,GAAG,gBAAgB,CAAC;oBAClC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACjC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;oBAE9B,IAAG,QAAQ;wBACP,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;yBACpD;wBACA,IAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;4BAClB,YAAY,GAAG,IAAI,CAAC;wBACxB,IAAG,MAAM,CAAC,YAAY,EAAC;4BACnB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;yBACvD;6BACG;4BACA,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;4BAC1D,IAAG,IAAI,CAAC,YAAY;gCAChB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;yBACrD;qBACJ;iBACJ;gBAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAG,oBAAoB;oBACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBACvD,IAAG,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,EAAE;oBACxD,IAAG,oBAAoB,EAAC;wBACpB,0BAA0B;wBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,cAAc,CAAC,CAAC;qBAC7D;oBACD,IAAG,mBAAmB;wBAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;iBACnD;gBACD,IAAG,CAAC,YAAY,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,EAAC;oBAChG,qBAAqB;oBACrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;oBACnD,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC/C;aACJ;QACL,CAAC;KAAA;IAEK,QAAQ,CAAC,QAAqB;;YAChC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChE,IAAG,gBAAgB,IAAI,IAAI;gBACvB,OAAO;YACX,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YACvE,IAAG,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC;gBACjC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC/B,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACzC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAC,QAAQ,CAAC,MAAM,CAAC;gBAC5D,IAAG,GAAG,EAAC;oBACH,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;iBACpD;aACJ;iBACG;gBACA,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;aACpD;QACL,CAAC;KAAA;IAEK,YAAY,CAAC,IAAiB,EAAE,iBAA2B;;YAC7D,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC;YACjB,IAAG,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,CACpK,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,CAAC;gBAC3D,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAAE,OAAO;YAEjE,KAAI,IAAI,MAAM,IAAI,iBAAiB,CAAC,OAAO,EAAC;gBACxC,0CAA0C;gBAC1C,IAAG,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU;oBACtJ,SAAS;gBAEb,IAAI,gBAA4B,CAAC;gBACjC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;oBAC9C,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;oBACxF,IAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,+EAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,EAAE;wBACnJ,gBAAgB,GAAG,UAAU,CAAC;wBAC9B,MAAM;qBACT;iBACJ;gBACD,IAAG,gBAAgB,IAAI,IAAI;oBACvB,SAAS;gBAEb,IAAI,QAAQ,GAAG,wEAAI,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM;gBAC5C,IAAI,OAAO,GAAG,IAAI,wDAAW,EAAE,CAAC;gBAChC,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;gBAC9B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACjC,KAAK,CAAC,MAAM,GAAG,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,4DAAU,CAAC,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAEvJ,OAAO,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACxE,OAAO,CAAC,MAAM,GAAG,gBAAgB,CAAC;gBAClC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACjC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC7B,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;aAC7D;YAED,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QACrD,CAAC;KAAA;IAED,YAAY;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa;aAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aACjC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;aAClC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;aACrC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAClD,CAAC;CACJ;AAEM,MAAM,iBAAkB,SAAQ,iEAAe;IAAtD;;QACI,kBAAa,GAAe,EAAE,CAAC;QAC/B,iBAAY,GAAe,EAAE,CAAC;QAC9B,qBAAgB,GAAe,EAAE,CAAC;QAClC,kBAAa,GAAe,EAAE,CAAC;QAC/B,wBAAmB,GAAe,EAAE,CAAC;IACzC,CAAC;CAAA;;;;;;;;;;;;;;;;;AClOM,MAAM,iBAAiB;IAM7B;QAJO,uBAAkB,GAAY,KAAK,CAAC;QACpC,yBAAoB,GAAY,KAAK,CAAC;IAG7B,CAAC;IAEjB,mBAAmB;QAClB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,kBAAkB;QACjB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC5B,CAAC;IAED,mBAAmB;QAClB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,kBAAkB,CAAC,KAAoB;QACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;IAClC,CAAC;;kFAzBW,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;ACGd,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEAAQ;QACJ,yEAAmB;QACf,oEAA0C;QAC1C,oEAAG;QAAA,kJAAuF;QAAA,4DAAI;QAClG,4DAAM;QACN,yEAAmB;QACf,sEAAK;QACD,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACb,qEAAI;QACA,sEAAI;QAAA,wEAAgC;QAAA,2EAAe;QAAA,4DAAI;QAAA,4DAAK;QAC5D,sEAAI;QAAA,wEAAqE;QAAA,6EAAiB;QAAA,4DAAI;QAAA,4DAAK;QACvG,4DAAK;QACT,4DAAM;QACN,uEAAK;QACD,yEAAoB;QAChB,yEAAsB;QAAA,mEAA+B;QAAA,wEAA4E;QAAA,sEAAU;QAAA,4DAAI;QAAA,4DAAK;QACpJ,yEAAsB;QAAA,mEAA0B;QAAA,yEAAuE;QAAA,wEAAY;QAAA,4DAAI;QAAA,4DAAK;QAChJ,4DAAK;QACT,4DAAM;QACN,2EAAyB;QACrB,yEAAgE;QAAA,oEAA6B;QAAC,uEAAU;QAAA,4DAAI;QAChH,4DAAM;QACV,4DAAM;QACV,4DAAS;;QAbkC,2DAA6C;QAA7C,8IAA6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRrC;AACM;AACA;AACF;AAEN;AACqB;;;;AAO/D,MAAM,aAAa;IAIvB,YAAoB,cAA8B,EAAU,aAA4B;QAApE,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAFlF,UAAK,GAAG,4BAA4B,CAAC;IAEiD,CAAC;IAExF,gBAAgB,CAAC,SAAwB;QAC/C,IAAG,SAAS,YAAY,8DAAS;YAChC,OAAO,EAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,MAAM,EAAC,CAAC;QAC3E,OAAO,EAAC,KAAK,EAAE,SAAS,YAAY,oEAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS,YAAY,gEAAU,IAAI,SAAS,YAAY,sEAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC;IACrJ,CAAC;IAED,iBAAiB,CAAC,IAAgB;QACjC,OAAO,sEAAU,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/E,CAAC;IAEO,SAAS,CAAC,UAA2B,EAAE,OAAyB;;YACvE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;YAC9C,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;YAChD,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAG,OAAO,CAAC,WAAW,EAAC,EAAE,iBAAiB;gBACzC,IAAI,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;gBAChE,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;gBAC7E,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;aAC/E;YACD,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,IAAG,CAAC,OAAO,CAAC,qBAAqB,EAAC;gBACjC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;gBACvD,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;aAChD;YACD,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC;gBAC/B,mBAAmB;gBACnB,GAAG,CAAC,SAAS,EAAE;gBACf,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;gBAChC,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAEvD,eAAe;gBACf,IAAG,SAAS,YAAY,8DAAS,EAAC;oBACjC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC;oBAClD,GAAG,CAAC,WAAW,GAAG,oBAAoB,CAAC;oBACvC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;oBAClB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC1H,GAAG,CAAC,IAAI,EAAE,CAAC;oBACX,GAAG,CAAC,MAAM,EAAE,CAAC;oBACb,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC;oBACxC,GAAG,CAAC,IAAI,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,UAAU,CAAC;oBAC5I,GAAG,CAAC,SAAS,GAAG,MAAM;oBACtB,GAAG,CAAC,YAAY,GAAG,YAAY;oBAC/B,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAG,SAAS,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAC,CAAC,CAAC;iBAC9O;qBACG;oBACH,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBAC1F,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;oBACtB,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,GAAE,GAAG,CAAC,MAAM,GAAC,CAAC,CAAE,CAAC,GAAG,CAAC,GAAG,GAAC,YAAY,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,MAAM,GAAC,CAAC,CAAC;oBAChI,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM,GAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;oBAChI,IAAG,OAAO,CAAC,UAAU;wBACpB,IAAI,CAAC,4BAA4B,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;iBAC/I;gBACD,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;gBACtD,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;gBAClB,IAAG,SAAS,CAAC,WAAW,CAAC,EAAC;oBACzB,qBAAqB;oBACrB,IAAI,CAAC,yBAAyB,CAAC,GAAG,EAAE,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;iBAC3I;aACD;YACD,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC;gBAC/B,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAG,SAAS,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,IAAI,SAAS,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC,gBAAgB,EAAC;oBACxG,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;oBACtB,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,GAAE,GAAG,CAAC,MAAM,GAAC,CAAC,CAAE,CAAC,GAAG,CAAC,GAAG,GAAC,yBAAyB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC;oBACrI,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAG,EAAE,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;iBAC3G;aACD;YACD,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YAC5D,OAAO,MAAM,CAAC;QACf,CAAC;KAAA;IAEO,cAAc,CAAC,OAAiC,EAAE,IAAY,EAAE,CAAS,EAAE,CAAS,EAAE,QAAgB,EAAE,SAAiB,EAAE,UAAkB;QAC9I,IAAI,IAAI,GAAG,EAAE,CAAC;QACpB,IAAI,MAAM,GAAG,UAAU,CAAC;QACxB,KAAI,IAAI,MAAM,IAAI,IAAI,EAAC;YACtB,IAAI,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC;YAC5B,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;YAC7B,IAAG,QAAQ,GAAG,QAAQ,EAAC;gBACtB,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,MAAM,CAAC;gBACd,CAAC,IAAI,UAAU,CAAC;gBAChB,MAAM,IAAI,UAAU,CAAC;gBACrB,IAAG,MAAM,IAAI,SAAS,EAAC;oBACtB,OAAO;iBACP;aACD;iBACI;gBACJ,IAAI,GAAG,OAAO,CAAC;aACf;SACD;QACK,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAEO,mBAAmB,CAAC,GAA6B,EAAE,UAA2B,EAAE,OAAe,EAAE,OAAe;QACvH,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC,EAAE,8CAA8C;YAC/E,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC;YAClC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;YAClB,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACvD,IAAG,SAAS,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC,EAAE,oBAAoB;gBAChG,GAAG,CAAC,SAAS,EAAE;gBACf,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM,GAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;gBAClH,GAAG,CAAC,IAAI,EAAE,CAAC;gBACX,GAAG,CAAC,MAAM,EAAE,CAAC;aACb;YACD,IAAG,SAAS,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC,EAAE,qBAAqB;gBACnG,GAAG,CAAC,SAAS,EAAE;gBACf,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAG,EAAE,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM,GAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;gBAC1H,GAAG,CAAC,IAAI,EAAE,CAAC;gBACX,GAAG,CAAC,MAAM,EAAE,CAAC;aACb;SACD;IACF,CAAC;IAEO,yBAAyB,CAAC,GAA6B,EAAE,SAAkB,EAAE,SAAwB,EAAE,OAAe,EAAE,OAAe;QAC9I,KAAI,IAAI,UAAU,IAAK,SAAS,CAAC,WAAW,CAAU,CAAC,WAAW,EAAC;YAClE,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,UAAU,GAAG,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;YACxE,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAI,IAAI,GAAE,GAAG,CAAC,oBAAoB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,EAC7F,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/F,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YACvC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;YACvB,IAAI,KAAK,GAAG,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;YACnE,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC;YACjC,IAAI,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;YACnC,IAAG,UAAU,CAAC,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAC;gBACrE,GAAG,CAAC,SAAS,EAAE,CAAC;gBAChB,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM,GAAC,CAAC,CAAC,CAAC;gBACzF,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,UAAU,GAAG,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,WAAW,GAAC,CAAC,CAAC,CAAC;gBACnG,GAAG,CAAC,MAAM,EAAE;gBACZ,GAAG,CAAC,SAAS,EAAE;aACf;iBACG;gBACH,GAAG,CAAC,SAAS,EAAE,CAAC;gBAChB,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;gBACvF,GAAG,CAAC,SAAS,EAAE;gBACf,KAAI,IAAI,SAAS,IAAI,UAAU,CAAC,UAAU,EAAC;oBAC1C,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,OAAO,EAAE,SAAS,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;oBACzD,GAAG,CAAC,MAAM,EAAE;iBACZ;aACD;YAED,IAAG,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,EAAC;gBAC5C,2BAA2B;gBAC3B,GAAG,CAAC,IAAI,GAAC,YAAY,CAAC;gBACtB,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC5B,GAAG,CAAC,WAAW,GAAG,aAAa,CAAC;gBAChC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;gBAClD,IAAI,UAAU,GAAG,EAAE,CAAC;gBACpB,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,GAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;gBAC5F,GAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE,EAAE,UAAU,CAAC,CAAC;aAC1D;SACD;IACF,CAAC;IAEO,4BAA4B,CAAC,GAA6B,EAAE,SAAwB,EAAE,SAAkB,EAAE,OAAe,EAAE,OAAe;QACjJ,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACvD,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;QAClD,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,GAAG,CAAC,IAAI,GAAG,mBAAmB;QAC9B,GAAG,CAAC,SAAS,GAAG,QAAQ;QACxB,GAAG,CAAC,YAAY,GAAG,YAAY;QAC/B,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAC,KAAK,GAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;IAEjH,CAAC;IAEO,WAAW,CAAC,GAAe,EAAE,IAAY,EAAE,KAAa,EAAE,CAAS,EAAE,CAAS,EAAE,QAAgB,EAAE,SAAiB,EAAE,UAAkB,EAAE,QAAgB,EAAE,MAAM,GAAG,KAAK,EAAE,QAAQ,GAAG,KAAK;QAC5L,IAAI,IAAI,GAAG,EAAE,CAAC;QACpB,IAAI,MAAM,GAAG,UAAU,CAAC;QAExB,KAAI,IAAI,MAAM,IAAI,IAAI,EAAC;YACtB,IAAI,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC;YAC5B,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACtF,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAC5B,IAAI,QAAQ,GAAG,UAAU,CAAC,qBAAqB,EAAE;YACjD,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAC5B,IAAG,QAAQ,GAAG,QAAQ,EAAC;gBACtB,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;gBAChF,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACzB,IAAI,GAAG,MAAM,CAAC;gBACd,CAAC,IAAI,UAAU,CAAC;gBAChB,MAAM,IAAI,UAAU,CAAC;gBACrB,IAAG,MAAM,IAAI,SAAS,EAAC;oBACtB,OAAO;iBACP;aACD;iBACI;gBACJ,IAAI,GAAG,OAAO,CAAC;aACf;SACD;QACD,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAChF,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAEO,aAAa,CAAC,IAAI,EAAE,KAAa,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,GAAG,KAAK,EAAE,QAAQ,GAAG,KAAK;QAC1F,IAAI,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAC;QAC7E,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChD,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChD,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,WAAW,EAAC,GAAG,QAAQ,IAAI,CAAC,CAAC;QACzD,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,aAAa,EAAC,OAAO,CAAC,CAAC;QACnD,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,aAAa,EAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3E,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,YAAY,EAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC9E,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC3C,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;QAC3B,OAAO,OAAO,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,UAA2B;QAClD,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC;YAC/B,IAAI,KAAa,CAAC;YAClB,IAAI,MAAc,CAAC;YACnB,IAAG,SAAS,YAAY,8DAAS,EAAC;gBACjC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC;gBAChC,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;aAClC;iBACG;gBACH,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC7C,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBACpB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;aACtB;YAED,IAAI,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC;YACxC,IAAG,UAAU,EAAC;gBACb,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;gBACzC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;oBAChC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;wBACzC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;wBACnC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;wBACnC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;wBACnC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC,CAAC;gBACH,CAAC,CAAC;aACF;YAED,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YACnD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;SACpD;QACD,OAAO,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;IACjC,CAAC;IAEK,MAAM,CAAC,UAA2B,EAAE,OAAyB;;YAClE,IAAG,UAAU,CAAC,MAAM,IAAI,CAAC;gBACxB,OAAO,IAAI,CAAC;YACb,IAAI,GAAG,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAe,CAAC;YACpE,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC1D,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,iBAAiB;YACjB,IAAI,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAChE,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;YACjC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;YACjC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,GAAG,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;YAC9F,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,GAAG,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;YAChG,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC;gBAC/B,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAEvD,eAAe;gBACf,IAAG,SAAS,YAAY,8DAAS,EAAC;oBACjC,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACxD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC3E,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC3E,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACvE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACzE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;oBACrE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC;oBAC/C,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,oBAAoB,CAAC,CAAC;oBAC1D,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACtB,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;iBACpV;qBACG;oBACH,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACxD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC3E,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC3E,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACrD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAG,SAAS,CAAC,KAAK,CAAC,CAAC;oBACpD,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACtB,IAAI,GAAG,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAoB,CAAC;oBAC1E,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;oBACvC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,OAAO,EAAC,IAAI,CAAC,CAAC;oBACtC,GAAG,CAAC,cAAc,CAAC,8BAA8B,EAAC,MAAM,EAAE,+CAA+C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;oBAC7K,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC5F,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM,GAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC7F,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;oBAElD,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBACrB,IAAG,OAAO,CAAC,UAAU;wBACpB,IAAI,CAAC,yBAAyB,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;iBACvF;gBAED,IAAG,SAAS,CAAC,WAAW,CAAC,EAAC;oBACzB,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;iBACnF;aACD;YACD,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC;gBAC/B,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAG,SAAS,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,IAAI,SAAS,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC,gBAAgB,EAAC;oBACxG,IAAI,GAAG,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,OAAO,CAAoB,CAAC;oBAC1E,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;oBACvC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,OAAO,EAAC,IAAI,CAAC,CAAC;oBACtC,GAAG,CAAC,cAAc,CAAC,8BAA8B,EAAC,MAAM,EAAE,4DAA4D,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAClL,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACrF,GAAG,CAAC,cAAc,CAAC,IAAI,EAAC,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC9E,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;oBAElD,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACrB;aACD;YACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YAC9E,OAAO,GAAG,CAAC;QACZ,CAAC;KAAA;IAEO,gBAAgB,CAAC,GAAe,EAAE,UAA2B,EAAE,SAAkB,EAAE,OAAe,EAAE,OAAe;QAC1H,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC,EAAE,8CAA8C;YAC/E,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACvD,IAAG,SAAS,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC,EAAE,oBAAoB;gBAChG,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACzE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC/E,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;gBACvC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACtB;YACD,IAAG,SAAS,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC,EAAE,qBAAqB;gBACnG,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACjF,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,MAAM,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC/E,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;gBACvC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACtB;SACD;IACF,CAAC;IAEO,sBAAsB,CAAC,GAAe,EAAE,SAAwB,EAAE,SAAkB,EAAE,OAAe,EAAE,OAAe;QAC7H,qBAAqB;QACrB,KAAI,IAAI,UAAU,IAAK,SAAS,CAAC,WAAW,CAAU,CAAC,WAAW,EAAC;YAClE,IAAI,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC;YAC1D,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;YAClE,IAAI,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACzD,IAAI,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACzD,IAAI,EAAE,GAAG,wEAAI,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,OAAO,CAAC,EAAE,GAAG,OAAO,EAAE,EAAE,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC7B,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACnC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACrC,KAAK,CAAC,YAAY,CAAC,YAAY,EAAE,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/F,KAAK,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YAClD,IAAI,IAAI,GAAG,qFAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAE,OAAO,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,OAAO,EAAC,GAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;YAC1H,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAChC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;YAC9C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;YAC5C,OAAO,CAAC,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACtB,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAEzB,IAAG,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,EAAC;gBAC5C,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBACxD,IAAI,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;gBAChE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC5D,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;gBACvC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;gBAC1C,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAC5C,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAC5C,QAAQ,CAAC,YAAY,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;gBAC9D,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC;gBACxC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC3B,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACtB;SACD;IACF,CAAC;IAEO,yBAAyB,CAAC,GAAe,EAAE,SAAwB,EAAE,SAAkB,EAAE,OAAe,EAAE,OAAe;QAChI,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAC,KAAK,GAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QACtK,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,aAAa,EAAC,QAAQ,CAAC,CAAC;QACpD,OAAO,CAAC,cAAc,CAAC,IAAI,EAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACvE,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;;0EA9ZW,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFX,MAAM;AAmad,MAAM,gBAAgB;IAA7B;QACC;;WAEG;QACH,gBAAW,GAAY,KAAK,CAAC;QAC7B,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAY,IAAI,CAAC;QAC3B,qBAAgB,GAAY,IAAI,CAAC;QACjC,gBAAW,GAAY,IAAI,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;IAC5B,CAAC;CAAA;AAEM,MAAM,gBAAgB;IAA7B;QACC,eAAU,GAAY,IAAI,CAAC;QAC3B,qBAAgB,GAAY,IAAI,CAAC;QACjC,gBAAW,GAAY,IAAI,CAAC;IAC7B,CAAC;CAAA;AAEM,MAAM,kBAAkB;IAA/B;QACC,eAAU,GAAY,IAAI,CAAC;QAC3B,aAAQ,GAAY,KAAK,CAAC;IAC3B,CAAC;CAAA;;;;;;;;;;;;;ACrcD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsG;AAC9C;AACZ;AACW;;AAMhD,MAAM,qBAAqB;IAMjC,YAA6B,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QAJhD,UAAK,GAAG,MAAM,CAAC;QAEU,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEN,CAAC;IAEpD,QAAQ;QACP,MAAM,KAAK,GAAG,sDAAS,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QACxF,MAAM,KAAK,GAAG,sDAAS,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAEvF,kDAAK,CAAC,KAAK,EAAE,KAAK,CAAC;aACjB,IAAI,CACJ,6EAAc,CAAC,IAAI,CAAC,EACpB,gEAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;aACjB;YACD,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CACF;aACA,SAAS,CAAC,IAAI,CAAC,EAAE;YACjB,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;aACvB;QACF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,KAAI,CAAC;;0FA7BJ,qBAAqB;qGAArB,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;ACTwB;AAEV;AACE;AACd;AAE2B;AACK;AAE7D,MAAM,eAAe;IAA5B;QACI,iBAAY,GAAW,CAAC,CAAC;QACzB,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;QACzB,oBAAe,GAAW,CAAC,CAAC;QAC5B,WAAM,GAAW,GAAG,CAAC;QACrB,cAAS,GAAW,CAAC,CAAC;IAC1B,CAAC;CAAA;AAEM,MAAM,gBAAiB,SAAQ,8DAAc;IAChD;QACI,KAAK,EAAE,CAAC;QAMZ,iBAAY,GAAW,CAAC,CAAC;QACzB,oBAAe,GAAoB,IAAI,eAAe,EAAE,CAAC;QAoJ/C,qCAAgC,GAAG,IAAI,uEAAe,EAAmB,CAAC;IA1JpF,CAAC;IASD,uBAAuB;QACnB,IAAI,oBAAoB,GAAe,EAAE,CAAC;QAC1C,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;YAC9C,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACvF,IAAI,SAAS,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;gBAClF,IAAG,CAAC,SAAS;oBACT,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;SACN;QACD,OAAO,oBAAoB,CAAC;IAChC,CAAC;IAED,iBAAiB,CAAC,IAAiB;QAC/B,2BAA2B;QAC3B,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,cAAwB,CAAC;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;QAElD,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAClC,QAAQ,CAAC,GAAG,IAAI,SAAS,CAC5B,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACjB,WAAW,GAAG,IAAI,CAAC;YACnB,IAAG,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnE,UAAU,GAAG,IAAI,CAAC;iBAClB;gBACA,wBAAwB;gBACxB,UAAU,GAAG,KAAK,CAAC;gBACnB,cAAc,GAAG,QAAQ,CAAC;gBAC1B,OAAO;aACV;QACL,CAAC,CAAC;QAEF,IAAG,CAAC,WAAW,EAAC;YACZ,IAAI,CAAC,kBAAkB,CAAC,4DAAU,CAAC,WAAW,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC;SACf;QACD,IAAG,UAAU,EAAC;YACV,IAAI,CAAC,kBAAkB,CAAC,4DAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC;SACf;QACD,OAAO,cAAc,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,OAAoB;QAC5B,IAAI,QAAQ,GAAG,IAAI,wDAAW,EAAE,CAAC;QACjC,QAAQ,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjH,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QACjC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAClC,QAAQ,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;QAC5B,QAAQ,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;QACxC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,YAAY;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;IAClC,CAAC;IAED,qBAAqB;QACjB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC/B,CAAC;IAED;;;MAGE;IACI,kBAAkB,CAAC,eAAuB,CAAC,CAAC;;YAC9C,IAAG,CAAC,IAAI,CAAC,kBAAkB;gBACvB,OAAO,IAAI,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,sEAAsE;YACtE,IAAI,SAAS,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC;YACvD,IAAG,YAAY,GAAG,CAAC,IAAI,SAAS,GAAG,YAAY,EAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBACnC,OAAO,KAAK,CAAC;aAChB;YAED,MAAM,yEAAK,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEO,+BAA+B;QACnC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,EAAC;YAC5B,IAAG,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,CAAC;gBAC7B,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;;gBAEhE,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;SAC/G;aACG;YACA,SAAS,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;SAC/H;QACD,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QAAA,CAAC;QACnF,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;OAEG;IACO,eAAe;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAG,IAAI,CAAC,kBAAkB,EAAC;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;YAC/C,4DAA4D;YAC5D,IAAI,SAAS,GAAG,CAAC,GAAC,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,eAAe,CAAC,eAAe,IAAG,SAAS,CAAC;YACjD,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;YACnC,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;gBAC/C,IAAI,CAAC,eAAe,CAAC,eAAe,IAAG,SAAS,CAAC;gBACjD,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;YACvC,CAAC,EAAE,IAAI,CAAC,CAAC;SACZ;IACL,CAAC;IAED;;OAEG;IACK,wBAAwB,CAAC,uBAA+B;QAC5D,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACxH,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChG,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QAC5C,UAAU,CAAC,GAAG,EAAE;YACZ,IAAG,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,SAAS,EAAC;gBACzC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aACzH;QACL,CAAC,EAAE,GAAG,CAAC,CAAC;QAER,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IACO,gBAAgB;QACtB,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,+BAA+B,EAAE,CAAC;QAC3C,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAGM,wBAAwB,CAAC,OAAiC;QAC7D,IAAI,CAAC,gCAAgC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;IACS,0BAA0B,CAAC,KAAsB;QACvD,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;CACJ;AAEM,MAAM,eAAgB,SAAQ,gDAAO;IAA5C;;QACI,cAAS,GAAe,EAAE,CAAC;QAC3B,gBAAW,GAAW,EAAE,CAAC;IAC7B,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;ACpLM,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,yEAAkB;QACd,0EAA6B;QAC7B,2EAA+B;QAC/B,0EAA6B;QACjC,4DAAM;;;;;;;;;;;;;;ACHN;AAAA;AAAA;AAAA;AAAA;AAAqD;;;;ICUzC,mEAAiD;;;IACjD,mEAAqD;;;;IAczD,6EAAwE;IAArB,gUAAoB;IAAC,mEAAQ;IAAA,4DAAS;;;;IACzF,6EAAkF;IAAjB,4TAAgB;IAAC,+DAAI;IAAA,4DAAS;;;;IAC/F,6EAAoF;IAAlB,8TAAiB;IAAC,gEAAK;IAAA,4DAAS;;ADzBnG,MAAM,aAAa;IAKzB,YAAY,KAAa,EAAE,KAAa,EAAE,IAAY;QACrD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;CACD;AAOM,MAAM,yBAAyB;IASrC;QAPU,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEzC,WAAM,GAAoB,EAAE,CAAC;QAC7B,gBAAW,GAAG,KAAK,CAAC;QACpB,sBAAiB,GAAG,CAAC,CAAC;QAIrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,wBAAwB,EAAE,2EAA2E,CAAC,CAAC,CAAC;QACjK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,kBAAkB,EAAE,sGAAsG,CAAC,CAAC,CAAC;QACtL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,oBAAoB,EAAE,kFAAkF,CAAC,CAAC,CAAC;QACpK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,iBAAiB,EAAE,oGAAoG,CAAC,CAAC,CAAC;QACnL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,2BAA2B,EAAE,0HAA0H,CAAC,CAAC,CAAC;QACnN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,mBAAmB,EAAE,2HAA2H,CAAC,CAAC,CAAC;QAC5M,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,4BAA4B,EAAE,uJAAuJ,CAAC,CAAC,CAAC;QACjP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,uBAAuB,EAAE,2IAA2I,CAAC,CAAC,CAAC;QAChO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,0BAA0B,EAAE,sGAAsG,CAAC,CAAC,CAAC;QAC9L,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,qBAAqB,EAAE,mBAAmB,EAAE,wFAAwF,CAAC,CAAC,CAAC;QAC1K,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,oBAAoB,EAAE,qBAAqB,EAAE,qIAAqI,CAAC,CAAC,CAAC;QACxN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ;IACR,CAAC;IAEC,KAAK;QACN,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,cAAc;QACb,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACtC,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAED,IAAI;QACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;;kGA3CW,yBAAyB;yGAAzB,yBAAyB;QCpBtC,yEAAoD;QAChD,yEAAsB;QAClB,oEACM;QACN,0EAA4B;QAAA,uDAAyC;QAAA,4DAAO;QAChF,4DAAM;QACN,yEAA6B;QACzB,4EAAwC;QAAlB,iJAAS,WAAO,IAAC;QACnC,kEAA4B;QAChC,4DAAS;QACT,4EAA+C;QAA3B,iJAAS,oBAAgB,IAAC;QAC1C,iHAAiD;QACjD,mHAAqD;QACzD,4DAAS;QACb,4DAAM;QACN,2EAAqB;QACjB,2EAAmB;QACf,sEAA2C;QAC/C,4DAAM;QACN,yEAAiB;QAAA,wDAAsB;QAAA,4DAAI;QAC3C,qEAAiB;QACjB,yEAAgB;QACZ,wDACJ;QAAA,4DAAI;QACR,4DAAM;QACN,2EAAsB;QAClB,8HAAyF;QACzF,8HAA+F;QAC/F,8HAAkG;QACtG,4DAAM;QACV,4DAAM;;QA9Bc,uFAA+B;QAEjB,0DAA6D;QAA7D,+HAA6D;QAE3D,0DAAyC;QAAzC,oHAAyC;QAO7D,0DAAkB;QAAlB,kFAAkB;QAClB,0DAAiB;QAAjB,iFAAiB;QAKhB,0DAAqC;QAArC,iLAAqC;QAE7B,0DAAsB;QAAtB,uFAAsB;QAGnC,0DACJ;QADI,iGACJ;QAGsB,0DAA2B;QAA3B,2FAA2B;QAC3B,0DAAyC;QAAzC,+GAAyC;QACzC,0DAA0C;QAA1C,gHAA0C;;;;;;;;;;;;;;;;;;;;;ACrBjE,MAAM,uBAAuB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;QACP,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;IAC1D,CAAC;;8FANW,uBAAuB;uGAAvB,uBAAuB;QCPpC,0EAAwB;QACpB,0EAAS;QACL,qEAAI;QAAA,0FAA+B;QAAA,4DAAK;QACxC,uEAAsB;QAAA,0KAA+G;QAAA,uEAAoE;QAAA,gFAAqB;QAAA,4DAAI;QAAC,kIAAsE;QAAA,4DAAI;QACjT,4DAAU;QACV,yEAA6B;QACzB,2EAAS;QACL,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,qEAAG;QAAA,wMAA4I;QAAA,4DAAI;QACnJ,qEAAsE;QAC1E,4DAAU;QACV,2EAAS;QACL,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,qEAAG;QAAA,6IAAiF;QAAA,4DAAI;QACxF,qEAA4E;QAC5E,2EAAS;QACL,qEAAG;QAAA,8FAAkC;QAAA,2EAAwB;QAAA,gEAAI;QAAA,4DAAO;QAAA,6DAAC;QAAA,2EAAwB;QAAA,6DAAC;QAAA,4DAAO;QAAA,6DAAC;QAAA,2EAAwB;QAAA,6DAAC;QAAA,4DAAO;QAAC,0GAA6C;QAAA,4DAAI;QAC5L,qEAAsE;QAC1E,4DAAU;QACV,2EAAS;QACL,qEAAG;QAAA,kFAAsB;QAAA,2EAAwB;QAAA,kEAAM;QAAA,4DAAO;QAAC,8GAAiD;QAAA,4DAAI;QACpH,qEAAyE;QAC7E,4DAAU;QACV,2EAAS;QACL,qEAAG;QAAA,4GAAgD;QAAA,2EAAwB;QAAA,gEAAI;QAAA,4DAAO;QAAA,6DAAC;QAAA,2EAAwB;QAAA,6DAAC;QAAA,4DAAO;QAAA,6DAAC;QAAA,2EAAwB;QAAA,6DAAC;QAAA,4DAAO;QAAC,yGAA4C;QAAA,4DAAI;QACzM,qEAA6E;QACjF,4DAAU;QACd,4DAAU;QACV,+EAAyB;QACrB,sEAAI;QAAA,iFAAqB;QAAA,4DAAK;QAC9B,yEAAuB;QAAA,8FAAkC;QAAA,4DAAI;QAC7D,2EAA6C;QACzC,uEAAK;QACD,2EAA+D;QAC3D,sEAAgC;QAChC,sEAA8D;QAClE,4DAAM;QACV,4DAAM;QACN,uEAAK;QACD,2EAA+D;QAC3D,sEAAkC;QAClC,sEAA6D;QACjE,4DAAM;QACV,4DAAM;QACN,2EAAkB;QACd,2EAA+D;QAC3D,sEAA6B;QAC7B,sEAA6D;QAC7D,sEAA8D;QAClE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,qEAAG;QAAA,0EAAQ;QAAA,sEAAU;QAAA,4DAAS;QAAA,oIAAwE;QAAA,iEAAI;QAAA,0EAAQ;QAAA,uEAAW;QAAA,4DAAS;QAAA,iIAAqE;QAAA,4DAAI;QAC/M,yEAA4C;QAAA,8JAAkG;QAAA,4DAAI;QAClJ,2EAAkC;QAC9B,qEAAG;QAAA,iPAAqL;QAAA,4DAAI;QAC5L,2EAA6C;QACzC,uEAAK;QACD,2EAA+D;QAC3D,sEAAkC;QAClC,4EAA+C;QAAA,oEAAsC;QAAA,4DAAO;QAChG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAU;QACV,2EAAS;QACL,sEAAI;QAAA,yFAA6B;QAAA,4DAAK;QACtC,qEAAG;QAAA,qIAAyE;QAAA,4DAAI;QAChF,sEAAuF;QAC3F,4DAAU;QACV,2EAAS;QACL,uEAAI;QAAA,iFAAoB;QAAA,4DAAK;QAC7B,sEAAG;QAAA,0NAA6J;QAAA,4DAAI;QACpK,uEAA8E;QAC9E,sEAAG;QAAA,+HAAkE;QAAA,0EAAsE;QAAA,6EAAgB;QAAA,4DAAI;QAAA,kEAAK;QAAA,0EAAwB;QAAA,yEAAY;QAAA,4DAAI;QAAC,yEAAW;QAAA,4DAAI;QAChO,4DAAU;QACd,4DAAM;QACV,4DAAO;;QAHkG,4DAA6C;QAA7C,8IAA6C;;;;;;;;;;;;;;AC3EtJ;AAAA;AAAA;AAAyF;;AAKhF,MAAM,0BAA0B;IAwBrC,YAAoB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;QAvB7B,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;IAuBI,CAAC;IAf3C,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,GAAG,EAAE;YAC1E,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,YAAY,EAAE;gBACpE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,SAAS,CAAC,EAAE;QACV,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAID,WAAW;QACT,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;;oGA9BU,0BAA0B;0GAA1B,0BAA0B;gKAA1B,8BAA0B,0FAA1B,eAAW;;;;;;;;;;;;;;ACJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AAC2B;;;AAOzD,MAAM,YAAa,SAAQ,2EAAiB;IALnD;;QAOQ,aAAQ,GAAS,IAAI,kDAAG,EAAE,CAAC;KAUlC;IARO,iBAAiB;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,kDAAG,EAAE,CAAC;QAClB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;6FAXW,YAAY;4FAAZ,YAAY;QCTzB,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,+IAAa,2BAAyB,IAAC,yFAAe,2BAAuB,IAAtC,+EACzD,uBAAmB,IADsC;QAE9D,oEAA4B;QAChC,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,gFAOmB;QACvB,4DAAM;QACV,4DAAM;;QApBN,+FAAoC;QAY5B,0DAAkB;QAAlB,+EAAkB;;oHDLb,YAAY;;;;;;;;;;;;;AERzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAEa;;;;AAOzD,MAAM,mBAAqB,SAAQ,2EAAiB;IAL3D;;QAOQ,oBAAe,GAAgB,IAAI,gEAAU,EAAE,CAAC;KA6CvD;IAzCO,WAAW,CAAC,KAAiB;QACnC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IAED,eAAe;QACd,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QAC3E,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACpD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACxC,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC;YAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC/C,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC9B,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACxC,IAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,EAAC;oBACxC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;oBAC/B,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;oBACtB,OAAO;iBACP;gBACD,IAAG,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,EAAC;oBACrC,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,oBAAoB,EAAC,EAAE,6DAA6D;wBACrG,IAAG,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG;4BACtB,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;qBACtC;oBACD,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC;iBACrC;;oBAEA,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;aAC9B;SACD;IACF,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,gEAAU,EAAE,CAAC;QACzB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;kHA9CW,mBAAmB;mGAAnB,mBAAmB;QCVhC,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADJ,sJAAa,2BAAyB,IAAC,gGAAe,2BAAuB,IAAtC,sFACxD,uBAAmB,IADqC;QAE7D,oEAAmC;QACvC,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QAEV,yEAAuC;QACnC,iFASmB;QACvB,4DAAM;QAIN,0EAAuC;QACnC,iFASmB;QACvB,4DAAM;QAIN,0EAAuC;QACnC,iFASmB;QACvB,4DAAM;QAIN,0EAAuC;QACnC,iFASmB;QACvB,4DAAM;QAIN,0EAAuC;QACnC,iFASmB;QACvB,4DAAM;QAEV,4DAAM;QACN,gFAAkB;QACd,mFAGoB;QACxB,4DAAM;QACV,4DAAM;;QA5FN,sGAA4C;QAc5B,2DAAyB;QAAzB,sFAAyB;QAezB,0DAAyB;QAAzB,sFAAyB;QAezB,0DAAyB;QAAzB,sFAAyB;QAezB,0DAAyB;QAAzB,sFAAyB;QAezB,0DAAyB;QAAzB,sFAAyB;QAcjC,0DAAyB;QAAzB,sFAAyB;;2HDhFpB,mBAAmB;;;;;;;;;;;;;AEVhC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC1B,yEAAa;IACb,iEAAS;IACT,qFAAmB;IACnB,mEAAU;AACd,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAC8B;AAC9B;AAErC,MAAM,QAAQ;IAOjB,YAAY,GAAW,EAAE,mBAAiC,EAAE;QAL5D,qBAAgB,GAAiB,EAAE,CAAC;QACpC,aAAQ,GAAa,wDAAQ,CAAC,IAAI,CAAC;QACnC,YAAO,GAAqB,EAAE,CAAC;QAC/B,aAAQ,GAAa,wDAAQ,CAAC,KAAK,CAAC;QAGhC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC7C,CAAC;CACJ;AAEM,MAAM,WAAW;IAAxB;QAEI,WAAM,GAAe,4DAAU,CAAC,GAAG,CAAC;IACxC,CAAC;CAAA;AAEM,MAAM,cAAc;IAA3B;QAEI,WAAM,GAA6B,0EAAwB,CAAC,OAAO,CAAC;QACpE,iBAAY,GAAY,KAAK,CAAC;IAClC,CAAC;CAAA;AAEM,MAAM,gBAAiB,SAAQ,QAAQ;IAC1C,YAAY,GAAW;QACnB,KAAK,CAAC,GAAG,EAAE,CAAC,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,IAAI,EAAE,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACjF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,wDAAQ,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,wDAAQ,CAAC,QAAQ;IACrC,CAAC;CACJ;;;;;;;;;;;;;ACjBD;AAAA;AAAA,qFAAqF;AACrF,0DAA0D;AAC1D,KAAK;AACL,UAAU;AACV,aAAa;AACb,aAAa;AACb,UAAU;AACV,UAAU;AACV,aAAa;AACb,KAAK;AACE,MAAM,uBAAuB;IAInC,kCAAkC;IAClC;QAEC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAEpD,CAAC;IAED,MAAM;IACN,kBAAkB;IAClB,MAAM;IAEN,+EAA+E;IAC/E,gCAAgC;IACzB,gBAAgB,CACtB,OAAoB,EACpB,oBAA4B,EAC5B,OAAiB;QAGjB,IAAI,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAE,oBAAoB,CAAE,CAAC;QAEzE,OAAM,CAAE,IAAI,CAAC,iBAAiB,CAAE,OAAO,EAAE,WAAW,EAAE,OAAO,CAAE,CAAE,CAAC;IAEnE,CAAC;IAGD,iFAAiF;IACjF,8CAA8C;IACvC,sBAAsB,CAC5B,kBAA0B,EAC1B,oBAA4B,EAC5B,OAAiB;QAGjB,IAAI,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAE,kBAAkB,CAAE,CAAC;QAChE,IAAI,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAE,oBAAoB,CAAE,CAAC;QAEzE,OAAM,CAAE,IAAI,CAAC,iBAAiB,CAAE,MAAM,EAAE,WAAW,EAAE,OAAO,CAAE,CAAE,CAAC;IAElE,CAAC;IAGD,mFAAmF;IACnF,qFAAqF;IACrF,gFAAgF;IACzE,QAAQ,CAAE,SAAiB;QAEjC,IAAI,YAAY,GAAG,2DAA2D,CAAC;QAE/E,OAAM,CAAE,YAAY,CAAC,IAAI,CAAE,SAAS,CAAE,CAAE,CAAC;IAE1C,CAAC;IAED,MAAM;IACN,mBAAmB;IACnB,MAAM;IAEN,0EAA0E;IAClE,oBAAoB;QAE3B,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,0EAA0E;QAC1E,KAAK;QACL,2HAA2H;QAC3H,IAAI;YAEH,IAAI,OAAO,GAAG,cAAW,CAAC,CAAC;YAE3B,IAAI,OAAO,GAAQ;gBAClB,IAAI,OAAO;oBAEV,OAAM,CAAE,OAAO,GAAG,IAAI,CAAE,CAAC;gBAE1B,CAAC;aACD,CAAC;YAEF,MAAM,CAAC,gBAAgB,CAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAE,CAAC;YACpD,MAAM,CAAC,mBAAmB,CAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAE,CAAC;SAEvD;QAAC,OAAO,KAAK,EAAG;YAEhB,MAAM;SAEN;QAED,OAAM,CAAE,OAAO,CAAE,CAAC;IAEnB,CAAC;IAGD,oFAAoF;IAC5E,uBAAuB,CAAE,QAAgB;QAEhD,QAAQ,QAAQ,EAAG;YAClB,KAAK,QAAQ;gBACZ,OAAM,CAAE,MAAM,CAAE,CAAC;gBAClB,MAAM;YACN,KAAK,UAAU;gBACd,OAAM,CAAE,QAAQ,CAAE,CAAC;gBACpB,MAAM;YACN,KAAK,MAAM;gBACV,OAAM,CAAE,QAAQ,CAAC,IAAI,CAAE,CAAC;gBACzB,MAAM;YACN;gBACC,MAAK,CAAE,IAAI,KAAK,CAAE,qBAAsB,QAAS,kBAAkB,CAAE,CAAE,CAAC;gBACzE,MAAM;SACN;IAEF,CAAC;IAGD,kFAAkF;IAClF,6CAA6C;IACrC,yBAAyB,CAAE,SAAiB;QAEnD,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC;QAEnC,IAAI,MAAM,GAAG;YACZ,IAAI,EAAU,KAAK,CAAC,KAAK,EAAE;YAC3B,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,KAAK;YAChB,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,KAAK;SAChB,CAAC;QAEF,gFAAgF;QAChF,2EAA2E;QAC3E,iFAAiF;QACjF,OAAQ,KAAK,CAAC,MAAM,EAAG;YAEtB,QAAS,KAAK,CAAC,KAAK,EAAE,EAAG;gBACxB,KAAK,MAAM;oBACV,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;oBACtB,MAAM;gBACN,KAAK,SAAS;oBACb,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;oBACzB,MAAM;gBACN,KAAK,SAAS;oBACb,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;oBACzB,MAAM;gBACN,KAAK,MAAM;oBACV,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;oBACtB,MAAM;gBACN,KAAK,MAAM;oBACV,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;oBACtB,MAAM;gBACN,KAAK,SAAS;oBACb,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;oBACzB,MAAM;gBACN;oBACC,MAAK,CAAE,IAAI,KAAK,CAAE,iBAAkB,SAAU,kBAAkB,CAAE,CAAE,CAAC;oBACtE,MAAM;aACN;SAED;QAED,OAAM,CAAE,MAAM,CAAE,CAAC;IAElB,CAAC;IAGD,iFAAiF;IACjF,qFAAqF;IACrF,qCAAqC;IAC7B,iBAAiB,CACxB,MAAmB,EACnB,WAAwB,EACxB,OAAiB;QAGjB,IAAI,OAAO,GAAQ,WAAW,CAAC,SAAS,CAAC;QACzC,6EAA6E;QAC7E,8EAA8E;QAC9E,kDAAkD;QAClD,IAAK,IAAI,CAAC,eAAe,IAAI,WAAW,CAAC,SAAS,EAAG;YAEpD,OAAO,GAAG;gBACT,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,WAAW,CAAC,SAAS;aAC9B,CAAC;SAEF;QAED,oEAAoE;QACpE,gBAAgB,EAAE,CAAC;QAEnB,OAAM,CAAE,mBAAmB,CAAE,CAAC;QAE9B,6BAA6B;QAE7B,SAAS,gBAAgB;YAExB,MAAM,CAAC,gBAAgB,CAAE,WAAW,CAAC,IAAI,EAAE,aAAa,EAAE,OAAO,CAAE,CAAC;QAErE,CAAC;QAED,SAAS,mBAAmB;YAE3B,MAAM,CAAC,mBAAmB,CAAE,WAAW,CAAC,IAAI,EAAE,aAAa,EAAE,OAAO,CAAE,CAAC;QAExE,CAAC;QAED,SAAS,aAAa,CAAE,KAAY;YAEnC,uEAAuE;YACvE,6EAA6E;YAC7E,4EAA4E;YAC5E,wDAAwD;YACxD,IAAK,WAAW,CAAC,MAAM,IAAI,CAAE,KAAK,CAAC,MAAM,KAAK,MAAM,CAAE,EAAG;gBAExD,OAAO;aAEP;YAED,0EAA0E;YAC1E,kCAAkC;YAClC,IAAK,WAAW,CAAC,MAAM,EAAG;gBAEzB,mBAAmB,EAAE,CAAC;aAEtB;YAED,IAAK,WAAW,CAAC,MAAM,EAAG;gBAEzB,KAAK,CAAC,eAAe,EAAE,CAAC;aAExB;YAED,IAAK,WAAW,CAAC,SAAS,EAAG;gBAE5B,KAAK,CAAC,cAAc,EAAE,CAAC;aAEvB;YAED,OAAO,CAAE,KAAK,CAAE,CAAC;QAElB,CAAC;IAEF,CAAC;CAED;;;;;;;;;;;;;ACnRD;AAAA;AAAA,IAAY,iBAKX;AALD,WAAY,iBAAiB;IACzB,uFAAqB;IACrB,2FAAuB;IACvB,qFAAoB;IACpB,mFAAmB;AACvB,CAAC,EALW,iBAAiB,KAAjB,iBAAiB,QAK5B;;;;;;;;;;;;;;;;;;;;;;;;;ACJkD;AAEoB;AACF;AAEzB;AACd;AACiC;AACK;AAI7D,MAAM,QAAS,SAAQ,kEAAgB;IAQ1C;QACI,KAAK,EAAE,CAAC;QAJZ,oBAAe,GAA6B,EAAE,CAAC;QAC/C,UAAK,GAAG,SAAS,CAAC;QAoFR,0BAAqB,GAAG,IAAI,uEAAe,EAAoB,CAAC;QAhFtE,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kCAAiC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC;QAEhC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;YACrB,IAAI,0DAAgB,CAAC,WAAW,CAAC;SACpC;IACL,CAAC;IAEK,WAAW,CAAC,OAAoB,EAAE,UAAU,GAAG,KAAK;;YACtD,IAAG,UAAU;gBACT,OAAO;YACX,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YACrD,IAAG,cAAc,IAAI,IAAI;gBACrB,OAAO;YAEX,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAG,CAAC,OAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAC;gBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,OAAO;aACV;YAED,IAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAC;gBAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC;gBAChD,IAAG,MAAM,IAAI,CAAC;oBACV,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;qBACnC;oBACA,IAAI,YAAY,GAAG,IAAI,wDAAW,EAAE,CAAC;oBACrC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,uCAAuC;oBACvH,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;oBAC9B,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC9C,KAAK,CAAC,QAAQ,GAAG,IAAI,0DAAgB,CAAC,QAAQ,CAAC;oBAE/C,YAAY,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,KAAK,EAAE,wDAAQ,CAAC,IAAI,CAAC,CAAC;oBAClE,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;oBAC3B,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACtC,YAAY,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;oBAChC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC;oBACnE,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;iBACtD;aACJ;YACD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACzD,qBAAqB;YACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAG,OAAO,CAAC,YAAY;gBACnB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,CAAC;KAAA;IAED,kBAAkB,CAAC,YAAqB,KAAK;QACzC,IAAG,SAAS,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAC;YAC/E,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;SAC5B;IACL,CAAC;IAEK,QAAQ,CAAC,QAAqB;;YAChC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChE,IAAG,gBAAgB,IAAI,IAAI;gBACvB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACzD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,mBAAmB;YACrE,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAC9D,CAAC;KAAA;IAED,YAAY,CAAC,IAAU,EAAE,oBAA6B;QAClD,IAAG,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,oBAAoB,CAAC;YAC9C,OAAO,KAAK,CAAC;QACjB,yEAAyE;QACzE,IAAG,CAAC,oBAAoB;YACpB,OAAO,IAAI,CAAC;QAEhB,IAAG,IAAI,CAAC,MAAM,YAAY,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI;YAC5I,OAAO,IAAI,CAAC;QAChB,IAAI,CAAC,iBAAiB,CAAC,EAAC,OAAO,EAAE,4EAA4E,EAAC,CAAC,CAAC;QAChH,OAAO,KAAK,CAAC;IACjB,CAAC;IAGM,aAAa,CAAC,OAAkC;QACnD,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IACS,eAAe,CAAC,KAAuB;QAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;CACJ;AAEM,MAAM,eAAgB,SAAQ,iEAAe;CAInD;;;;;;;;;;;;;ACpHD;AAAA;AAAA,IAAY,OAMX;AAND,WAAY,OAAO;IACf,qCAAI;IACJ,2CAAO;IACP,mCAAG;IACH,qCAAI;IACJ,iDAAU;AACd,CAAC,EANW,OAAO,KAAP,OAAO,QAMlB;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,eAAe;IAA5B;QACY,aAAQ,GAAiB,EAAE,CAAC;IAQxC,CAAC;IAPG,IAAI,CAAC,KAAQ;QACT,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ;YACvB,CAAC,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IACD,QAAQ,CAAC,OAAmB;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;ACVyD;AACP;AACP;AACA;AACM;AACd;AACN;AAGvB,MAAM,MAAO,SAAQ,8DAAc;IAQtC;QACI,KAAK,EAAE,CAAC;QALZ,0BAAqB,GAAY,KAAK,CAAC,CAAC,2BAA2B;QAEnE,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,IAAiB;QACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,EAAC;YACxN,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,EAAC;gBAC1B,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI;oBACvB,OAAO;gBACX,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;aACrC;iBACG;gBACA,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B;SACJ;IACL,CAAC;IAEK,QAAQ,CAAC,IAAiB;;YAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChD,CAAC;KAAA;IAED,qBAAqB;QAEjB,IAAI,kBAAkB,GAAe,EAAE,CAAC;QACxC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;YAC9C,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACvF,IAAI,SAAS,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,IAAI,+EAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,CAAC;gBAC/I,IAAG,CAAC,SAAS;oBACT,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACN;QACD,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IAED,cAAc;QACV,IAAI,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACtD,IAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,EAAC,EAAE,oCAAoC;YAC/E,IAAG,kBAAkB,CAAC,MAAM,IAAI,CAAC;gBAC7B,OAAO;YACX,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;SAC/E;aACG;YACA,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,KAAI,IAAI,QAAQ,IAAI,kBAAkB,EAAC;gBACnC,IAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,KAAK,QAAQ,EAAC;oBAC9C,WAAW,GAAG,IAAI,CAAC;oBACnB,MAAM;iBACT;aACJ;YACD,IAAG,CAAC,WAAW,EAAC,EAAE,yDAAyD;gBACvE,IAAG,kBAAkB,CAAC,MAAM,IAAI,CAAC;oBAC7B,OAAO;gBACX,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;aAC/E;SACJ;IACL,CAAC;CACJ;AAEM,MAAM,aAAc,SAAQ,gDAAO;IAA1C;;QACI,aAAQ,GAAa,wDAAQ,CAAC,IAAI,CAAC,CAAC,wDAAwD;QAC5F,gBAAW,GAAgB,IAAI,qDAAW,EAAE,CAAC;QAC7C,eAAU,GAAW,CAAC,CAAC;IAC3B,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;AC3EM,MAAM,aAAa;IAmBzB,YAAmB,cAA+B,EAAU,KAAwB;QAAjE,mBAAc,GAAd,cAAc,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAmB;QAf3E,eAAU,GAAY,KAAK,CAAC;QAGrC,yBAAoB,GAA0B,EAAE,CAAC;QAKjD,eAAU,GAAG,CAAC,CAAC;QACf,eAAU,GAAG,CAAC,CAAC;QACf,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QA2Ld,gBAAW,GAAG,GAAG,EAAE,GAAE,CAAC;QAxLrB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE;YACjC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YACzB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,CAAC;YACrF,IAAG,IAAI,CAAC,QAAQ;gBACf,IAAI,IAAI,CAAC,CAAC,CAAC;YACZ,IAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;gBACrB,IAAI,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,GAAG,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC;YACnD,UAAU,CAAC,GAAE,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,aAAa,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,CAAC,GAAG,IAAI,GAAG,EAAE,KAAK,CAAC;gBAC3E,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAC1B,CAAC,EAAE,EAAE,CAAC,CAAC;YACP,UAAU,CAAC,GAAE,EAAE;gBACd,IAAI,CAAC,MAAM,EAAE,CAAC;YACf,CAAC,EAAE,IAAI,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAEH,gBAAgB,CAAC,UAA+B;QAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;QAC3E,IAAG,KAAK,KAAK,CAAC,CAAC,EAAC;YACf,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,aAAa,CAAC,UAA+B;QAC5C,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI;YACtC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;QAC3E,IAAG,KAAK,KAAK,CAAC,CAAC;YACd,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,sBAAsB,CAAC,eAA2B;QACjD,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACpC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,eAAe,KAAK,eAAe,CAC5D,CAAC;IACH,CAAC;IAED,UAAU;QACT,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAC;YACnC,IAAI,CAAC,cAAc,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACnC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,EAAE,CAAC;YACjM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC;SAC7B;QACD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,MAAM;QACL,IAAI,CAAC,cAAc,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEM,gBAAgB;QACtB,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,WAAW,CAAE,KAAY;QAC/B,IAAG,KAAK,YAAY,UAAU,EAAC;YAC9B,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY;gBAClC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;iBAClC;gBACH,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAC,MAAM,CAAC,CAAC;gBAC1E,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;gBAE/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC;gBAC5F,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC;gBAC5F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC;gBAE7F,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC1G,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,OAAO,CAAC;gBACxC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC;gBACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;gBAE9B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,EAAE;oBAClC,IAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAC;wBACxC,IAAG,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY;4BACnC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;wBAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;wBACpG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;wBACpG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;wBAC1G,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;wBAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;qBAC/B;oBACD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC5B,CAAC;aACD;SACD;aACI,IAAG,KAAK,YAAY,UAAU,EAAC;YACnC,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY;gBAClC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;iBAClC;gBACH,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAC,MAAM,CAAC,CAAC;gBAC1E,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAE1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC;gBAC5F,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC;gBAC5F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC;gBAE7F,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC1G,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,OAAO,CAAC;gBACxC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC;gBACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,EAAE;oBAClC,IAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAC;wBACxC,IAAG,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY;4BACnC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;wBAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;wBAC/G,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;wBAC/G,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;wBAC1G,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;wBAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBAC1C;oBACD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC5B,CAAC;gBACD,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,EAAE;oBAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC9B,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;oBAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC9B,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;oBACrC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC5B,CAAC;aACD;SACD;QACD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEM,aAAa,CAAC,CAAC;QACrB,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAC;YACnC,IAAG,IAAI,KAAK,IAAI,CAAC,cAAc,CAAC,cAAc,EAAC;gBAC9C,IAAG,IAAI,CAAC,QAAQ,EAAC;oBAChB,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,EAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;wBAC3E,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;iBAC7C;qBACG;oBACH,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,IAAI,CAAC;wBAC5E,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;iBAC7C;aACD;SACD;QACD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,eAAe;QACd,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACxE,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI;YACtC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;;0EA1MW,aAAa;6FAAb,aAAa;;;;;;;;QCb1B,4EAIC;QAJU,gJAAa,uBAAmB,IAAC,oFACjC,yBAAqB,IADY,kFAE/B,gBAAY,IAFmB,oFAEH,YAAQ,IAFL;QAKxC,uEAA0C;QAC9C,4DAAM;;;;;;;;;;;;;;ACNN;AAAA;AAAA,IAAY,UA0BX;AA1BD,WAAY,UAAU;IAClB,2CAAI;IACJ,iDAAO;IACP,2DAAc;IACd,iDAAS;IACT,uDAAY;IACZ,iDAAS;IACT,+CAAQ;IACR,uCAAI;IACJ,2CAAI;IACJ,+CAAM;IACN,gDAAM;IACN,gDAAM;IACN,4EAAsB;IACtB,4CAAI;IACJ,wDAAU;IACV,gDAAM;IACN,0CAAG;IACH,gDAAM;IACN,oDAAQ;IACR,8CAAK;IACL,8CAAK;IACL,4CAAI;IACJ,8CAAK;IACL,wDAAU;IACV,0CAAG;AACP,CAAC,EA1BW,UAAU,KAAV,UAAU,QA0BrB;AAED;;;GAGG;;;;;;;;;;;;;;;;;;;;;;;;AC7ByC;AACd;AACQ;AACoB;AACa;AACvB;AAEzC,MAAM,MAAO,SAAQ,kEAAgB;IAQxC;QACI,KAAK,EAAE,CAAC;QALZ,oBAAe,GAA6B,EAAE,CAAC;QAE/C,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QAErC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;YACrB,IAAI,kDAAQ,CAAC,kBAAkB,EAAE,CAAC,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,IAAI,EAAE,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,KAAK,EAAE,4DAAU,CAAC,MAAM,CAAC,CAAC;SAC3H;IACL,CAAC;IAEK,WAAW,CAAC,IAAiB;;YAC/B,IAAG,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI;gBAC7C,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;YAEnG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,qBAAqB;YACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAE3B,+BAA+B;YAC/B,IAAI,QAAQ,GAAG,IAAI,wDAAW,EAAE,CAAC;YACjC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;YACrC,QAAQ,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;YAC5B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAElC,qBAAqB;YACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAG,IAAI,CAAC,YAAY;gBAChB,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC;KAAA;IAEK,eAAe,CAAC,OAAoB;;YACtC,IAAG,CAAC,OAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAC;gBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,OAAO;aACV;YACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC;KAAA;IAEK,QAAQ,CAAC,IAAiB;;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;YACvD,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW;iBAC5C,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE;iBAC5F,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,cAAc,CAAC,IAAI,IAAI,CAAC,CAAC;YAC/C,KAAI,IAAI,UAAU,IAAI,WAAW,EAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9C;QACL,CAAC;KAAA;CACJ;AAEM,MAAM,aAAc,SAAQ,iEAAe;CACjD;;;;;;;;;;;;;;;;;;;ACtEM,MAAM,oBAAoB;IAIhC;QAFA,eAAU,GAAU,EAAE,CAAC;QACvB,iBAAY,GAAU,EAAE,CAAC;QAExB,+IAA+I;QAC/I,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,2FAA2F,EAAC,CAAC,CAAC;QAC9J,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,+FAA+F,EAAC,CAAC,CAAC;QAEtK,mCAAmC;QACnC,IAAG;YACF,KAAK,CAAC,8DAA8D,CAAC;iBACpE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACnC,IAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;oBACtB,OAAO;gBACR,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;oBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;wBACtB,IAAI,EAAE,WAAW,CAAC,KAAK;wBACvB,MAAM,EAAE,WAAW,CAAC,UAAU;wBAC9B,IAAI,EAAE,WAAW,CAAC,QAAQ;qBAC1B,CAAC;gBACH,CAAC,CAAC;YACH,CAAC,CAAC,CAAC;SACH;QACD,WAAK,GAAG;IACT,CAAC;IAED,QAAQ;QACP,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;IAC1D,CAAC;IAED,aAAa,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;IAC7C,CAAC;;wFAjCW,oBAAoB;oGAApB,oBAAoB;QCPjC,0EAAwB;QACpB,yEAAmB;QACf,yEAAmB;QACf,qEAAI;QAAA,uFAA4B;QAAA,4DAAK;QACrC,qEAAI;QAAA,gIAAqE;QAAA,4DAAK;QAC9E,uEAA6B;QAAA,6FAAkC;QAAA,uEAAkD;QAAA,8EAAkB;QAAA,4DAAI;QAAC,6EAAgB;QAAA,4DAAI;QAChK,4DAAM;QACN,0EAAmD;QAC/C,8DAAK;QAAL,uEAAK;QACD,qFAA6D;QACzD,sEAA0C;QAC1C,sEAA0C;QAC9C,4DAAiB;QACjB,qFAA6D;QACzD,uEAA0C;QAC1C,uEAA0C;QAC9C,4DAAiB;QACjB,sFAA6D;QACzD,uEAA0C;QAC1C,uEAA0C;QAC9C,4DAAiB;QACjB,sFAA6D;QACzD,uEAA0C;QAC1C,uEAA0C;QAC9C,4DAAiB;QACjB,2EAAwE;QACxE,2EAAwE;QACxE,2EAAyE;QACzE,2EAAyE;QACzE,yEAAsE;QAC1E,4DAAM;QACN,+DAA+D;QAA/D,2EAA+D;QAC3D,sEAA0D;QAC1D,sEAA6D;QACjE,4DAAM;QACN,2EAAiF;QAC7E,sEAAuE;QACvE,sEAA4D;QAC5D,sEAA6D;QACjE,4DAAM;QACN,2EAAiD;QAC7C,2EAA+D;QAC3D,sEAAoD;QACpD,sEAA4D;QAChE,4DAAM;QACN,2EAAgF;QAC5E,sEAAoD;QACpD,sEAA4D;QAChE,4DAAM;QACN,2EAAgF;QAC5E,sEAAoD;QACpD,sEAA4D;QAChE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAAuC;QACnC,8DAAuF;QAAvF,2EAAuF;QACnF,yEAAgB;QACZ,uEAA+D;QAC/D,yEAAkB;QACd,uEAAiE;QACjE,4EAAoB;QAAA,uEAAW;QAAA,4DAAO;QACtC,yEAAmB;QACf,uEAA6E;QAC7E,wEAA2I;QAC/I,4DAAI;QACR,4DAAI;QACJ,yEAAkB;QACd,uEAAiE;QACjE,4EAAoB;QAAA,uEAAW;QAAA,4DAAO;QACtC,yEAAmB;QACf,uEAA6E;QAC7E,wEAA8I;QAC9I,uEAA8E;QAC9E,wEAAgJ;QAChJ,uEAA8E;QAC9E,wEAAyI;QAC7I,4DAAI;QACR,4DAAI;QACR,4DAAI;QACJ,uEAAyE;QACzE,uEAA6G;QAC7G,yEAAkE;QAC9D,uEAA6E;QAC7E,wEAA2I;QAC3I,yEAAuE;QAC3E,4DAAI;QACJ,yEAA+D;QAC3D,uEAA6E;QAC7E,wEAAwI;QACxI,yEAAwE;QAC5E,4DAAI;QACJ,yEAAyB;QACrB,qFAAsC;QAAA,+DAAgC;QAAhC,oEAAoC;QAAA,4DAAgB;QAC9F,4DAAI;QACJ,8DAA0B;QAA1B,yEAA0B;QACtB,qFAAsC;QAAA,+DAA+B;QAA/B,oEAAmC;QAAA,4DAAgB;QAC7F,4DAAI;QACJ,8DAAqE;QAArE,sFAAqE;QACjE,sEAA0C;QAC1C,uEAA0C;QAC9C,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,+DAAwB;QAAxB,2EAAwB;QACpB,2EAAiC;QAC7B,2EAAiC;QAC7B,2EAAoB;QAAA,kEAAM;QAAA,4DAAO;QACjC,2EAA+D;QAC3D,sEAA0D;QAC1D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,uEAAU;QAAA,4DAAO;QACrC,4EAA8F;QAC1F,wEAAgG;QAChG,uEAA4D;QAChE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,0EAAa;QAAA,4DAAO;QACxC,4EAA+D;QAC3D,uEAAuE;QACvE,uEAA4D;QAC5D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,wEAAW;QAAA,4DAAO;QACtC,4EAAoE;QAChE,uEAAmE;QACnE,uEAA4D;QAC5D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,wEAAW;QAAA,4DAAO;QACtC,4EAA+D;QAC3D,uEAAoD;QACpD,uEAA4D;QAC5D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,0EAAa;QAAA,4DAAO;QACxC,4EAA+D;QAC3D,uEAAwE;QACxE,uEAA4D;QAC5D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,qEAAQ;QAAA,4DAAO;QACnC,4EAA+D;QAC3D,uEAA8D;QAC9D,uEAA4D;QAC5D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,kEAAK;QAAA,4DAAO;QAChC,4EAA+D;QAC3D,uEAAwD;QACxD,uEAA4D;QAC5D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAC7B,4EAAoB;QAAA,0EAAa;QAAA,4DAAO;QACxC,4EAAsG;QAClG,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAAwB;QACxB,uEAA4D;QAC5D,uEAA6D;QACjE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,wEAAK;QACD,2EAAiB;QAAA,qGAAwC;QAAA,4DAAK;QAC9D,0EAA6B;QAAA,qIAAwE;QAAA,4DAAI;QAC7G,4DAAM;QACV,4DAAM;QACN,4EAAyB;QACrB,0EAAwC;QAAA,wEAAW;QAAA,4DAAI;QAC3D,4DAAM;QACN,4EAAqC;QACjC,uEAAI;QAAA,iGAAoC;QAAA,4DAAK;QAC7C,4EAAkB;QACd,0EAAgD;QAC5C,uEAAqJ;QACrJ,wEAA8I;QAC9I,wEAAoI;QACpI,wEAAyI;QAC7I,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAO;;;;;;;;;;;;;;ACrNP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACT;AAChB;AACyB;;;;;;;;;;;ICc1C,iFAAiE;IAAA,uDAAsB;IAAA,4DAAa;;;;IAAlD,0EAAc;IAAC,0DAAsB;IAAtB,6FAAsB;;ADPtG,MAAM,iBAAkB,SAAQ,2EAAiB;IALxD;;QAOQ,kBAAa,GAAc,IAAI,4DAAQ,EAAE,CAAC;QACjD,sBAAiB,GAAG,CAAC,CAAC;KA4EtB;IA1EA,eAAe;QACd,IAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,EAAC;YAC3C,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,oDAAI,CAAC,IAAI,CAAC,aAAa,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;SACvE;QACD,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAE,EAAE;YACpC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC;IACH,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IAED,kBAAkB;QACjB,IAAG,IAAI,CAAC,aAAa,CAAC,UAAU,IAAI,IAAI;YACvC,OAAO;QACR,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,EAAC;YACzD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;YAC9E,IAAG,OAAO,YAAa,mEAAe;gBACpC,OAA2B,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC;SACrE;IACF,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,oDAAI,CAAC,IAAI,CAAC,aAAa,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QACzC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QACzC,IAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,EAAC,EAAE,qBAAqB;YAC9D,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClF,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAC,EAAE,EAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACxI,KAAK,IAAI,GAAG,CAAC;SACb;aACI,IAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,GAAG,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAC;YAChH,IAAI,GAAG,CAAC,CAAC;YACT,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAC,EAAE,CAAC;SACxC;aACG;YACH,IAAI,GAAG,CAAC,CAAC,CAAC;YACV,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,GAAG,GAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC3F;QACD,IAAI,EAAE,GAAG,IAAI,oEAAgB,CAAC,QAAQ,CAAC,CAAC;QACxC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAC;YAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,iBAAiB,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,GAAC,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAClN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;gBACzB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC5F,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,kBAAkB,GAAG,GAAG,EAAE;gBAC9B,IAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;oBACvD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;YACnD,CAAC;SACD;QACD,UAAU,CAAC,GAAE,EAAE;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC5B,CAAC,EAAE,GAAG,CAAC,CAAC;IACT,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,4DAAQ,EAAE,CAAC;QACvB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;4GA9EW,iBAAiB;iGAAjB,iBAAiB;QCX9B,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,oJAAa,2BAAyB,IAAC,8FAAe,2BAAuB,IAAtC,oFACzD,uBAAmB,IADsC;QAE9D,oEAAiC;QACrC,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,yEAAoC;QAChC,2EAA4B;QAAA,kEAAM;QAAA,8EAAiI;QAAA,4DAAO;QAC1K,uEAAK;QACD,qFAA0D;QACtD,kFAAwJ;QAA5I,2JAAmB,wBAAoB,SAAE,iBAAa,IAAC;QACjE,8HAAoG;QACtG,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,kFAQmB;QACvB,4DAAM;QACN,iFAAc;QACV,2EAA6B;QACzB,2EAA+B;QAC3B,8EACmB;QAAlB,0IAAS,WAAO,IAAC;QAAC,0EAAc;QAAA,4DAAS;QAC9C,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iFAAkB;QACd,mFAGoB;QACxB,4DAAM;QACV,4DAAM;;QA7CN,oGAAyC;QAYmB,2DAAmG;QAAnG,4JAAmG;QAGvE,0DAA0C;QAA1C,uGAA0C;QAC/E,0DAAmB;QAAnB,yFAAmB;QAM9D,0DAAuB;QAAvB,oFAAuB;QAYP,0DAAiF;QAAjF,kJAAiF;QAOjG,0DAAuB;QAAvB,oFAAuB;;yHDhClB,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AERmD;AACvB;AAGY;;;;;;;;;;;;;;ICqBlE,gFAA8F;IAAnF,4WAA6C;IAAsC,4DAAY;;;;IAEtG,gFAAmF;IAA9C,+WAA6C;IAAC,4DAAY;;;IAApF,yFAAyB;;;;IAKpC,wFAAgF;IAAlC,sWAAiC;IAAC,4DAAoB;;;;IAnC5G,yEAAoC;IAChC,8EAyBK;IAxBD,0TAAqB;IAyBzB,4DAAW;IACX,6HAA0G;IAC1G,8MAEc;IACd,+EAAuC;IACvC,6EAAmC;IACnC,0EAAwC;IACpC,8IAAoG;IACxG,4DAAM;IACV,4DAAM;;;;IAZE,0DAAiC;IAAjC,iGAAiC;IAGqB,0DAAiB;IAAjB,kFAAiB;IAOnD,0DAAwB;IAAxB,2FAAwB;;;IAGpD,yEAA6C;IACzC,2EAAuG;IAC3G,4DAAM;;;IADS,0DAAyB;IAAzB,yFAAyB;;;IAExC,0EAA0D;IACtD,qEAAI;IAAA,0FAA+B;IAAA,4DAAK;IACxC,oEAAG;IAAA,sGAA2C;IAAA,4DAAI;IAClD,oEAAG;IAAA,yHAA8D;IAAA,wEAA4E;IAAA,sEAAW;IAAA,4DAAI;IAAE,+DAAG;IAAA,yEAAuE;IAAA,kEAAM;IAAA,4DAAI;IAAA,6DAAC;IAAA,4DAAI;IAC3P,4DAAM;;AD7BC,MAAM,eAAe;IAiBzB,YAAoB,KAAqB,EAAU,cAA8B,EAAU,aAA4B,EAAU,cAA8B;QAA3I,UAAK,GAAL,KAAK,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAdjK,uBAAkB,GAAG,KAAK,CAAC;QAC3B,qBAAgB,GAAG,KAAK,CAAC;QACzB,yBAAoB,GAAG,KAAK,CAAC;QAC7B,uBAAkB,GAAG,KAAK,CAAC;QAC3B,4BAAuB,GAAG,KAAK,CAAC;QAChC,cAAS,GAAG,IAAI,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;IAQoJ,CAAC;IAEtK,QAAQ;QACP,IAAI,iBAAiB,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,WAAW;aACpB,SAAS,CAAC,MAAM,CAAC,EAAE;YACnB,IAAG,MAAM,CAAC,MAAM,EAAC;gBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAG;oBACF,IAAI,CAAC,cAAc,GAAG,oDAAoD,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC1F,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC5B,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;qBACpE;yBACG;wBACH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;wBACtD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;wBAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACzE;oBACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;iBAC/B;gBACD,WAAK;oBACJ,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;iBACpC;aACD;YACD,IAAG,MAAM,CAAC,IAAI,EAAC;gBACd,IAAG;oBACF,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC3B,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;wBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;qBACpE;yBACG;wBACH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;wBACtD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;wBAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACzE;oBACD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACrB;gBACD,WAAK;oBACJ,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;iBACpC;aACD;YACD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,MAAM,CAAC;QACjE,CAAC,CACD,CAAC;QAEF,IAAG,iBAAiB,IAAI,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAC;YACvD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;SAClD;IACF,CAAC;IAED,aAAa;QACZ,OAAO,GAAG,EAAE;YACX,OAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;QACtC,CAAC,CAAC;IACH,CAAC;IAED,OAAO;QACN,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAED,QAAQ,CAAC,IAAY;QACpB,IAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAC;YAC5C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC;YAC7D,OAAO;SACP;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC3G,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,4EAAQ,CAAC,GAAG,IAAI,OAAO,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,QAAQ,CAAC,IAAY;QACpB,mCAAmC;QACnC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,SAAS;QACR,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAEK,SAAS,CAAC,OAAyB;;YACxC,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;YAC7D,IAAG,MAAM,IAAI,IAAI,EAAC;gBACjB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;gBAClE,OAAO;aACP;YACD,+EAAW,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC;KAAA;IAEK,SAAS,CAAC,OAAyB;;YACxC,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YACvD,IAAG,GAAG,IAAI,IAAI,EAAC;gBACd,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;gBAClE,OAAO;aACP;YACD,+EAAW,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;KAAA;IAED,IAAI;QACH,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACxB,CAAC;IAED,SAAS;QACR,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACxB,CAAC;IAED,GAAG;QACF,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAED,eAAe;QACd,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,IAAI;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAED,IAAI;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAED,UAAU;QACT,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAC/B,CAAC;IAED,UAAU;QACT,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACnC,CAAC;IAED,MAAM;QACL,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,OAAO;QACN,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAED,SAAS;QACR,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACxB,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,iBAAiB;QAChB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,eAAe;QACd,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;IAC9B,CAAC;IAED,cAAc;QACb,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC5B,IAAG,IAAI,CAAC,EAAE,IAAI,IAAI,EAAC;YAClB,UAAU,CAAC,GAAG,EAAE,GAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAC,EAAE,EAAE,CAAC,CAAC;SACpD;aACG;YACH,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACzB;IACF,CAAC;IAED,iBAAiB,CAAC,KAAa;QAC9B,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC;IACnC,CAAC;;8EAxMW,eAAe;+FAAf,eAAe;kEAchB,qEAAc;kEACd,iFAAgB;;;;;;QC/B5B,2GAqCM;QACN,2GAEM;QACN,4GAIM;QAGN,uEAA8J;QAC1J,8DAAiF;QAAjF,yEAAiF;QAC/E,qEAAmE;QAAA,qEAAsR;QAAA,qEAA2kB;QACt6B,4DAAM;QACV,4DAAI;;QApDe,+EAAe;QAsCf,0DAAwB;QAAxB,wFAAwB;QAGhB,0DAA6B;QAA7B,6FAA6B;;;;;;;;;;;;;;ACzCxD;AAAA;AAAA,IAAY,QAKX;AALD,WAAY,QAAQ;IAChB,yCAAO;IACP,+DAAkB;IAClB,+DAAkB;IAClB,6EAAyB;AAC7B,CAAC,EALW,QAAQ,KAAR,QAAQ,QAKnB;;;;;;;;;;;;;ACDD;AAAA;AAAA;AAAO,MAAM,WAAW;IAAxB;QAMI,iBAAY,GAAY,IAAI,CAAC;IACjC,CAAC;CAAA;AAEM,MAAM,iBAAiB;IAK1B,YAAY,WAAwB,EAAE,QAAkB,EAAE,MAAM,GAAG,KAAK;QACpE,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBwL;AAG1H;AACE;AAEqB;AAMxB;AACqB;AACf;AACN;AACS;AACqB;AACH;AACZ;AACY;AACA;AACrB;AACG;AAES;AACA;;;;;;;;;;;;;;;;;ICpB5E,+DAA8M;IAA9M,0EAA8M;IAC1M,0EAAkB;IACd,0EAA2F;IAAzE,oXAAkE,KAAK,IAAC;IAAC,qEAAU;IAAA,4DAAM;IAC3G,oEAAiB;IACjB,0EAAiE;IAA/C,0UAAwC,KAAK,IAAC;IAAC,qEAAU;IAAA,4DAAM;IACjF,oEAAiB;IACjB,0EAA8D;IAA5C,uUAAqC,KAAK,IAAC;IAAC,kEAAO;IAAA,4DAAM;IAC3E,2EAA+D;IAA7C,yUAAsC,KAAK,IAAC;IAAC,oEAAQ;IAAA,4DAAM;IAC7E,qEAAiB;IACjB,2EAA4D;IAA1C,sUAAmC,KAAK,IAAC;IAAC,gEAAI;IAAA,4DAAM;IACtE,2EAA4D;IAA1C,sUAAmC,KAAK,IAAC;IAAC,gEAAI;IAAA,4DAAM;IACtE,2EAAgE;IAA9C,kSAAc,IAAI,oCAAqB,KAAK,IAAC;IAAC,gEAAI;IAAA,4DAAM;IAC1E,qEAAiB;IACjB,2EAAiE;IAA/C,2UAAwC,KAAK,IAAC;IAAC,sEAAU;IAAA,4DAAM;IACrF,4DAAM;IACV,4DAAM;;;IAfD,6HAAgE;;;;;IAgBrE,+DAAuN;IAAvN,0EAAuN;IACnN,0EAAkB;IACd,0EAAuE;IAArD,gVAA8C,KAAK,IAAC;IAAC,iEAAM;IAAA,4DAAM;IACnF,oEAAiB;IACjB,0EAAyE;IAAvD,kVAAgD,KAAK,IAAC;IAAC,+DAAI;IAAA,4DAAM;IACnF,0EAAwE;IAAtD,iVAA+C,KAAK,IAAC;IAAC,8DAAG;IAAA,4DAAM;IACrF,4DAAM;IACV,4DAAM;;;IAPD,6HAAgE;;;IAWzD,uEAAgF;IAC5E,uDACJ;;IAAA,4DAAO;;;IADH,0DACJ;IADI,oMACJ;;;IAEI,uDACJ;;;IADI,yHACJ;;;;;IARZ,+DAA2L;IAA3L,0EAA2L;IACvL,0EAAsB;IAClB,2EAAoB;IAChB,mHAEO;IACP,6MAEc;IAEd,wEAAO;IAAA,gEAAI;IACP,uDACJ;IAAA,4DAAQ;IACZ,4DAAO;IACX,4DAAM;IACN,0EAAuB;IACnB,qEAAG;IAAA,2EAAe;IAAA,qEAAG;IAAA,wDAA8I;IAAA,4DAAI;IAAA,8DAAE;IAAA,4DAAI;IAC7K,qEAAG;IAAA,0EAAc;IAAA,qEAAG;IAAA,wDAAoD;IAAA,4DAAI;IAAA,4DAAI;IAChF,qEAAG;IAAA,2EAAe;IAAA,qEAA8F;IAAA,wDAA6D;IAAA,4DAAI;IAAA,4DAAI;IACrL,qEAAG;IAAA,iFAAqB;IAAA,qEAAG;IAAA,wDAA6C;IAAA,4DAAI;IAAC,qEAAQ;IAAA,4DAAI;IAC7F,4DAAM;IACN,8DAAqG;IAArG,2EAAqG;IACjG,uEAEE;IACF,uEACmD;IACtD,4DAAM;IAEP,+DAAsE;IAAtE,4EAAsE;IAAlD,6RAAS,+CAAuC,IAAC;IACjE,oEAA4B;IAChC,4DAAO;IACX,4DAAM;;;;IAhCD,iHAAsD;IAGxC,0DAAyD;IAAzD,0HAAyD;IAQ5D,0DACJ;IADI,2OACJ;IAIiB,0DAA8I;IAA9I,uNAA8I;IAC/I,0DAAoD;IAApD,sHAAoD;IACnD,0DAA0F;IAA1F,qJAA0F;IAAC,0DAA6D;IAA7D,+HAA6D;IAClJ,0DAA6C;IAA7C,+GAA6C;IAGlE,0DAAwF;IAAxF,oJAAwF;IAGxF,0DAAmH;IAAnH,0KAAmH;;;;IASrI,+DAA4D;IAA5D,0EAA4D;IACxD,uEACA;IAAA,qEAA6B;IACjC,4DAAM;;;IAEF,0EAA2C;IACvC,mEAA2B;IAC/B,4DAAM;;;IAUU,uEAA6D;IAAA,6FAAkC;IAAA,4DAAO;;;IAKlG,uEAAyC;IAAA,2EAAwB;IAAA,uDAAqC;IAAA,4DAAO;IAAC,uDAA8D;IAAA,4DAAO;;;IAAlH,0DAAqC;IAArC,wGAAqC;IAAQ,0DAA8D;IAA9D,2IAA8D;;;IAavH,uEAAsC;IAAA,4DAAC;IAAA,4DAAO;;;;;IA/B3H,+DAAyB;IAAzB,sEAAyB;IACrB,iHAEM;IACN,0EAAwH;IAAlC,mUAAiC;IACnH,0EAA0B;IACtB,6EAAmD;IAA7B,4TAA4B;IAAC,iEAAC;IAAA,4DAAS;IAC7D,0EAA8B;IAC1B,yEAAkB;IAAA,6EAAkB;IAAA,4DAAK;IACzC,2EAAmB;IAAA,mIAAuE;IAAA,4DAAO;IACrG,4DAAM;IACN,2EAAyC;IACrC,+EAA+C;IAC3C,oHAAsG;IAC1G,4DAAM;IACN,2EAA+B;IAC3B,4EAA6B;IAAA,wDAA8E;IAAA,4DAAO;IAClH,2EAA2B;IACvB,oHAAmL;IACvL,4DAAM;IACN,2EAA8B;IAC1B,8EAAoG;IAA5F,qUAAoC;IAAwD,kEAAM;IAAA,4DAAS;IACnH,8EAAgG;IAAxF,mUAAkC;IAAsD,gEAAI;IAAA,4DAAS;IACjH,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAAgI;IAC5H,4EAAqB;IAAA,wDAAwB;IAAA,4DAAO;IACpD,2EAAmB;IACf,4EAAmB;IAAA,wDAA8C;IAAA,oHAA8C;IAAA,4DAAO;IACtH,8EAAoC;IAA5B,4TAA2B;IAAC,oEAAQ;IAAA,4DAAS;IACzD,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAlCqB,0DAAkB;IAAlB,qFAAkB;IAGP,0DAAmD;IAAnD,8GAAmD;IAS9D,2DAAoD;IAApD,8HAAoD;IAG9B,0DAA8E;IAA9E,uJAA8E;IAEhG,0DAAgC;IAAhC,mGAAgC;IAGM,0DAAuC;IAAvC,uGAAuC;IACzC,0DAAuC;IAAvC,uGAAuC;IAMtE,0DAA+F;IAA/F,yJAA+F;IACtG,0DAAwB;IAAxB,0FAAwB;IAEtB,0DAA8C;IAA9C,yHAA8C;IAAO,0DAA6B;IAA7B,gGAA6B;;;;IAOzG,6EAA0G;IAAjE,sUAA2B;IAAsC,mEAA2B;IAAA,4DAAS;;IAAzE,oGAAoC;;;;IACzG,6EAAuG;IAA/D,qUAA0B;IAAqC,mEAA2B;IAAA,4DAAS;;IAAxE,mGAAmC;;;;;IAH9G,+DAAmD;IAAnD,0EAAmD;IAC/C,0EAAsB;IAClB,wHAA8I;IAC9I,wHAA2I;IAC3I,6EAAwD;IAAhD,mTAAkB;IAA8B,mEAAkC;IAAA,4DAAS;IACnG,6EAA0D;IAAlD,oTAAmB;IAA+B,mEAAmC;IAAA,4DAAS;IACtG,6EAA8D;IAAtD,sTAAqB;IAAiC,mEAA6B;IAAA,4DAAS;IACpG,8EAAoE;IAA5D,0TAAwB;IAAoC,oEAA8B;IAAA,4DAAS;IAC3G,yEAA6E;IAAA,oEAA2B;IAAA,4DAAI;IAChH,4DAAM;IACV,4DAAM;;;IARW,0DAA8B;IAA9B,iGAA8B;IAC9B,0DAA6B;IAA7B,gGAA6B;IACX,0DAA4B;IAA5B,4FAA4B;IAC3B,0DAA6B;IAA7B,6FAA6B;IAC3B,0DAA+B;IAA/B,+FAA+B;IAC5B,0DAAkC;IAAlC,kGAAkC;IAChD,0DAAyB;IAAzB,+JAAyB;IAAC,+FAA+B;;;;IAGpF,+DAAkD;IAAlD,wEAAkD;IAC9C,sFAA0B;IAAA,wEAA+D;IAAA,qEAAU;IAAA,4DAAI;IAC3G,4DAAI;;;;IACJ,+DAAyH;IAAzH,wEAAyH;IACrH,+DACJ;IAAA,4DAAI;;IAFwC,4IAA4E;;AD1FxH,MAAM,UAAU;IAKf,YAAY,KAAa,EAAE,KAAsB,EAAE,IAAS;QAC3D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;CACD;AAQM,MAAM,cAAc;IA8D1B,YAAmB,cAA+B,EAC1C,gBAAkC,EAClC,QAAqB,EACrB,aAA4B,EAC5B,SAA4B,EAC5B,cAA8B,EAC9B,aAA4B,EAC5B,cAA8B,EAC/B,iBAAoC,EACnC,QAAmB;QATR,mBAAc,GAAd,cAAc,CAAiB;QAC1C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAa;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAmB;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACnC,aAAQ,GAAR,QAAQ,CAAW;QApE3B,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,CAAC,CAAC;QACT,eAAU,GAAY,KAAK,CAAC;QAE5B,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAW,wEAAI,EAAE,CAAC;QAChC,4BAAuB,GAAG,KAAK,CAAC;QAChC,gCAA2B,GAAG,IAAI,CAAC;QAG1B,eAAU,GAAG,KAAK,CAAC;QAI5B,sBAAiB,GAAG,EAAE,CAAC;QACvB;;WAEG;QACH,mBAAc,GAAG;YAChB,MAAM,EAAE,mFAAe;YACvB,aAAa,EAAE,yGAAsB;YACrC,GAAG,EAAE,0EAAY;YACjB,UAAU,EAAE,+FAAmB;YAC/B,KAAK,EAAE,gFAAc;YACrB,YAAY,EAAE,sGAAqB;YACnC,QAAQ,EAAE,0FAAiB;YAC3B,YAAY,EAAE,sGAAqB;YACnC,YAAY,EAAE,sGAAqB;YACnC,MAAM,EAAE,oFAAe;YACvB,KAAK,EAAE,iFAAc;YACrB,SAAS,EAAE,6FAAkB;YAC7B,SAAS,EAAE,6FAAkB;YAC7B,GAAG,EAAE,0EAAY;SACjB;QAKS,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEhD,uBAAkB,GAAoB,EAAE,CAAC;QACzC,kBAAa,GAAwB,EAAE,CAAC;QAExC;;WAEG;QACH,gBAAW,GAAQ,EAAE,CAAC;QAItB,gBAAW,GAAiB,EAAE,CAAC;QAG/B,oBAAe,GAAY,KAAK,CAAC;QACjC,6BAAwB,GAAY,KAAK,CAAC;QA8S1C,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAW,CAAC,CAAC;QAEpB,oBAAe,GAAG,CAAE,CAAQ,EAAS,EAAE;YAC7C,IAAG,CAAC,YAAY,UAAU,EAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;gBACtC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC;gBACzB,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC;aACzB;iBACI,IAAG,CAAC,YAAY,UAAU,EAAC;gBAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;gBACtC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;gBACxD,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;gBACxD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC3C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;aAC3C;YAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7B,CAAC;QAEM,kBAAa,GAAG,CAAC,CAAQ,EAAS,EAAE;YAC1C,IAAG,CAAC,YAAY,UAAU,EAAC;gBAC1B,IAAG,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC;oBACzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;oBACtC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;oBAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;iBAC9B;gBACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;gBACpE,MAAM,CAAC,mBAAmB,CAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;aAC5D;iBACI,IAAG,CAAC,YAAY,UAAU,EAAC;gBAC/B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;gBACpE,MAAM,CAAC,mBAAmB,CAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;aAC7D;QAEF,CAAC;QAMM,gBAAW,GAAG,GAAU,EAAE;YAChC,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAC;gBACnC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC9B,QAAQ,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC;aAChE;QACF,CAAC;IAzV8B,CAAC;IAEhC,MAAM,CAAC,KAAK;QACX,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,CAAC;;YAEd,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,IAAI,CAAC;QAC/D,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,IAAI,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,GAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAC,CAAC;QAE7C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;YACzC,CAAC,CAAC,cAAc,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAG,CAAC,IAAI,CAAC,UAAU,EAAC,EAAE,kDAAkD;YACvE,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;gBACrD,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;oBACvC,IAAI,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;oBAEnD,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;oBAC/D,IAAI,GAAG,GAAG,EAAC,GAAG,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC;oBAC1E,IAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,EAAC;wBACjI,UAAU,CAAC,GAAE,EAAE;4BACd,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBACrD,CAAC,EAAE,EAAE,CAAC,CAAC;qBACP;iBACD;YACF,CAAC,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAC,CAAC,CAAC,EAAC,EAAE;gBAC1C,IAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAC;oBACjC,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;oBAC/J,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;oBAC9B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;oBACnC,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACxB;YACF,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAC,CAAC,CAAC,EAAE,EAAE,GAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAC9E,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,GAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAE9E,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAC,CAAC,CAAM,EAAC,EAAE;gBAC5C,IAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAC;oBACjC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACnG,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACpG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;oBACnI,IAAI,CAAC,GAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrK,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;oBACrI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;oBAC9B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;oBACnC,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACxB;gBACD,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAE,EAAE;gBAClD,iEAAiE;gBACjE,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACzB,CAAC,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,SAA4B,EAAC,EAAE;gBAC3E,yFAAyF;gBACzF,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC/B,CAAC,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,EAAE;gBAC3D,sCAAsC;gBACtC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;gBACrC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,CAAC;YACF,WAAW,CAAC,GAAE,EAAE;gBACf,IAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAC;oBACtC,IAAI,CAAC,IAAI,EAAE,CAAC;iBACZ;YACF,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC;SAClC;IACF,CAAC;IAED,QAAQ;QACP,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAC;YAC5D,IAAI,qBAAqB,GAAG,EAAE;YAC9B,IAAI,SAAS,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;YAC9C,IAAI,UAAU,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAClD,IAAG,UAAU,EAAC;gBACb,qBAAqB,GAAG,qBAAqB,CAAC,MAAM,CACnD,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBAC3C,OAAO;wBACN,IAAI,EAAE,UAAU,CAAC,WAAW,CAAC,QAAQ;wBACrC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,QAAQ;wBAC3D,UAAU,EAAE,IAAI,CAAC,UAAU;wBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;qBACjB,CAAC;gBACH,CAAC,CAAC,CACF,CAAC;aACF;YACD,UAAU,CAAC,IAAI,CAAC;gBACf,SAAS,EAAE,SAAS,CAAC,WAAW;gBAChC,cAAc,EAAE,SAAS,CAAC,iBAAiB,EAAE;gBAC7C,OAAO,EAAE,yEAAK,CAAC,SAAS,CAAC,OAAO,CAAC;gBACjC,qBAAqB,EAAE,qBAAqB;aAC5C,CAAC;SACF;QACD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC;IAED,SAAS,CAAC,IAAY,CAAC,CAAC,EAAE,IAAY,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,gCAAgC,EAAE,CAAC;QACzD,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;YACvD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC9B,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAE,EAAE;gBAC7B,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;SACH;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAED,SAAS;QACR,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;YACvC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SACpD;IACF,CAAC;IAED,kBAAkB,KAAW,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,EAAC;IAEvD,eAAe;;YACpB,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC7C,IAAG,IAAI,CAAC,UAAU,EAAC;gBAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACnC;iBACI,IAAG,CAAC,IAAI,CAAC,UAAU,EAAC;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC;aACvB;YAED,IAAG,CAAC,IAAI,CAAC,UAAU,EAAC;gBACnB,uBAAuB;gBACvB,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;gBAC9D,IAAG,eAAe,IAAI,IAAI;oBACzB,OAAO;gBACR,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAU,CAAC;gBACvD,IAAG,WAAW,CAAC,MAAM,IAAI,CAAC;oBACzB,OAAO;gBACR,KAAI,IAAI,KAAK,IAAI,WAAW,EAAC,EAAE,wCAAwC;oBACtE,IAAI,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;oBAChF,IAAG,cAAc;wBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,iBAAiB,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;iBAC/F;gBACD,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,WAAW,EAAC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;iBACnC;gBACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,UAAU,CAAC,GAAE,EAAE;oBACd,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBACnC,CAAC,EAAE,IAAI,CAAC,CAAC;aACT;iBACG;gBACH,IAAI,CAAC,SAAS,EAAE,CAAC;aACjB;QACF,CAAC;KAAA;IAEK,iBAAiB,CAAC,UAAsB;;YAC7C,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACtD,YAAY,CAAC,SAAS,GAAG,aAAa,CAAC;YACvC,YAAY,CAAC,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;YAErC,YAAY,CAAC,OAAO,GAAG,GAAG,EAAE;gBAC3B,kBAAkB;gBAClB,IAAG,IAAI,CAAC,kBAAkB,EAAC;oBAC1B,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;iBACrF;gBACD,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;gBACrC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC;YACnF,CAAC;YACD,YAAY,CAAC,UAAU,GAAI,GAAG,EAAE;gBAC/B,aAAa;gBACb,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC;YACD,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,gEAAgB,EAAE,CAAC;YACzF,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;YAEnC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAChD,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;YACnC,KAAK,CAAC,SAAS,GAAG,mBAAmB,CAAC;YAEtC,IAAI,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3D,IAAG,QAAQ;gBACV,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAEzD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAC5E,CAAC;KAAA;IAED,eAAe;QACd,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;QACtF,IAAG,UAAU;YACZ,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,wBAAwB;QACvB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAExG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,sBAAsB;QACrB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC;YACrC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAEK,qBAAqB,CAAC,OAAyB;;YACpD,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;QAC7E,CAAC;KAAA;IAEK,kBAAkB,CAAC,OAAyB;;YACjD,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;QAC1E,CAAC;KAAA;IAED,eAAe;QACd,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;QAC9D,IAAG,eAAe,EAAC;YAClB,IAAG;gBACF,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;aAC1C;YACD,OAAM,CAAC,EAAC;gBACP,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACvB;SACD;QACD,UAAU,CAAC,GAAE,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/C,CAAC,EAAE,IAAI,CAAC,CAAC;IACV,CAAC;IAEM,eAAe,CAAC,CAAQ;QAC9B,IAAG,CAAC,YAAY,UAAU,EAAC;YAC1B,IAAG,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC;gBACpC,kBAAkB;gBAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;gBACtC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;aACvE;iBACI,IAAG,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,EAAC;gBACzD,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAG,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;oBAChC,OAAO;gBACR,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAClC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;gBACjE,MAAM,CAAC,gBAAgB,CAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;aACzD;SACD;aACI,IAAG,CAAC,YAAY,UAAU,EAAC;YAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAG,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAChC,OAAO;YACR,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAC3C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAC3C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;YACjE,MAAM,CAAC,gBAAgB,CAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;SAC1D;IAEF,CAAC;IAgDM,oBAAoB;QAC1B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,cAAc,IAAI,CAAC,IAAI,kBAAkB,IAAI,CAAC,IAAI,aAAa,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC;IAC/H,CAAC;IAUM,eAAe;QACrB,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,gCAAgC,EAAE,CAAC;QACzD,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC;IACjD,CAAC;IAED,OAAO,CAAC,WAAmB,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,EAAC,GAAG,CAAC,CAAE;QAClG,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,WAAmB,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC7B,CAAC;IAED,YAAY;QACX,IAAI,CAAC,cAAc,CAAC,eAAe,CAClC,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EAAE,KAAK,CAC5C,CAAC;IACH,CAAC;IAED,SAAS;QACR,IAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC;YAC1D,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,CAAC;SACnC;aACG;YACH,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;YAC5B,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;YAC5B,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,IAAI,IAAI,GAAG,CAAC,CAAC;YAEb,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,kBAAkB,EAAC;gBAC5C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAC3C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAC3C,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBACrE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;gBACnD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC;aACpD;YACD,qBAAqB;YACrB,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YAC7B,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YAE9B,2BAA2B;YAC3B,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACjH,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC;YAEhJ,IAAI,WAAW,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAC9D,IAAI,WAAW,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE/D,IAAI,CAAC,IAAI,GAAG,CAAE,IAAI,GAAG,WAAW,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACzG,IAAI,CAAC,IAAI,GAAG,CAAE,IAAI,GAAG,WAAW,GAAG,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAE3G,wBAAwB;YACxB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,IAAI,GAAG,EAAC;gBAC3D,IAAI,CAAC,IAAI,IAAI,WAAW,GAAG,EAAE,CAAC;gBAC9B,IAAI,CAAC,IAAI,IAAI,WAAW,GAAG,EAAE,CAAC;aAC9B;SACD;QACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC7B,CAAC;IAED;;OAEG;IACG,eAAe;;YACpB,IAAG,IAAI,CAAC,uBAAuB,IAAI,CAAC,IAAI,CAAC,2BAA2B;gBACnE,OAAO;YACR,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;YACzC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACpC,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;gBACvC,IAAG,SAAS,YAAY,mFAAe,EAAC;oBACvC,IAAG,SAAS,CAAC,sBAAsB,EAAC;wBACnC,SAAS,CAAC,mBAAmB,EAAE,CAAC;qBAChC;oBACD,SAAS,CAAC,mBAAmB,EAAE,CAAC;oBAChC,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC,CAAC,0BAA0B;iBAC5C;qBACI,IAAG,SAAS,YAAY,yGAAsB,EAAC;oBACnD,SAAS,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC;oBAChD,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC,CAAC,0BAA0B;iBAC5C;aACD;YACD,UAAU,CAAC,GAAE,EAAE;gBACd,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;YACzC,CAAC,EAAE,GAAG,CAAC,CAAC;QACT,CAAC;KAAA;IAED,cAAc;QACb,IAAG,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,IAAI,CAAC,2BAA2B;YACpE,OAAO;QACR,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;YACvC,IAAG,SAAS,YAAY,mFAAe,EAAC;gBACvC,IAAG,SAAS,CAAC,gBAAgB,EAAC;oBAC7B,SAAS,CAAC,aAAa,EAAE,CAAC;iBAC1B;qBACG;oBACH,SAAS,CAAC,mBAAmB,EAAE,CAAC;iBAChC;aACD;iBACI,IAAG,SAAS,YAAY,yGAAsB,EAAC;gBACnD,SAAS,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;aAC/C;SACD;QACD,UAAU,CAAC,GAAE,EAAE;YACd,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;QACzC,CAAC,EAAE,GAAG,CAAC,CAAC;IACT,CAAC;IAED;;OAEG;IACH,eAAe;QACd,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;QAC7C,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;YACvC,IAAI,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE;YAClD,IAAG,cAAc,YAAY,4EAAgB,EAAC;gBAC7C,cAAc,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBACzC,SAAS,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;aAChC;SACD;IACF,CAAC;IAED;;OAEG;IACH,cAAc;QACb,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;QAC5C,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;YACvC,IAAI,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE;YAClD,IAAG,cAAc,YAAY,4EAAgB,EAAC;gBAC7C,cAAc,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAC1C,SAAS,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;aAChC;SACD;IACF,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/C,CAAC;IAED,mBAAmB;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACrH,CAAC;IAED,IAAI;QACH,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;QACxE,IAAG,SAAS;YACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACrC,UAAU,CAAC,GAAE,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC;IACR,CAAC;IAED,IAAI;QACH,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC9C,IAAG,SAAS;YACX,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACrC,UAAU,CAAC,GAAE,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC;IACR,CAAC;IAED,MAAM;QACL,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;QACzD,KAAI,IAAI,SAAS,IAAI,UAAU,EAAC;YAC/B,IAAI,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;YACnD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,EAAC,CAAC,CAAC,CAAC;YACtF,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,CAAC;SACtH;QAED,IAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;YACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,OAAO;QACN,IAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC;YACrC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,wEAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,QAAQ,GAAG,KAAK;QACpB,IAAG,IAAI,CAAC,UAAU;YACjB,OAAO;QACR,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACtE,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAG,QAAQ,EAAC;YACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,UAAU,CAAC,GAAE,EAAE;gBACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC3B,CAAC,EAAE,IAAI,CAAC;SACR;IACF,CAAC;IAED,YAAY,CAAC,IAAY,EAAE,QAAQ,GAAG,IAAI;QACzC,IAAG;YACF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACxB;QACD,OAAM,CAAC,EAAC;YACP,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAG,QAAQ;gBACV,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,yEAAyE,CAAC;YACzG,UAAU,CAAC,GAAE,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACxB,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,OAAO;SACP;IACF,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,IAAS,EAAE,QAAQ,GAAG,IAAI;QACtC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,UAAiB,CAAC;QACtB,UAAU,GAAG,IAAI,CAAC;QAClB,IAAG,IAAI,CAAC,UAAU;YACjB,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9B,IAAG,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAC;YAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO;SACP;QACD,IAAG,IAAI,CAAC,IAAI;YACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAG,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,WAAW;YAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC;;YAE9B,IAAI,CAAC,cAAc,GAAG,wEAAI,EAAE,CAAC;QAE9B,IAAI,eAAe,GAAU,EAAE,CAAC;QAChC,IAAI,gBAAgB,GAAQ,EAAE,CAAC;QAC/B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAI,IAAI,cAAc,IAAI,UAAU,EAAC;YACpC,IAAI,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC9D,IAAG,IAAI,IAAI,IAAI,IAAI,cAAc,CAAC,OAAO,IAAI,IAAI,EAAC;gBACjD,QAAQ,GAAG,IAAI,CAAC;gBAChB,IAAG,KAAK,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAC;oBACjC,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;iBAChE;gBACD,KAAK,EAAE,CAAC;gBACR,SAAS;aACT;YACD,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,IAAI,GAAG,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YACnC,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAW,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAErH,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC9B,MAAM,qBAAqB,GAAG,KAAK,CAAC;YACpC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC9B,IAAG,SAAS,YAAY,0FAAiB,IAAI,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,aAAa,EAAC;oBAChG,SAAS,CAAC,gBAAgB,EAAE;iBAC5B;gBACD,IAAI,UAAU,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAClD,IAAG,UAAU,EAAC;oBACb,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;iBACjD;gBACD,IAAG,SAAS,EAAC;oBACZ,IAAI,UAAU,GAAQ,EAAE,CAAC;oBACzB,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;oBAC5B,UAAU,CAAC,EAAE,GAAG,cAAc,CAAC,EAAE,CAAC;oBAClC,UAAU,CAAC,EAAE,GAAG,cAAc,CAAC,WAAW,CAAC;oBAC3C,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACjC;gBACD,IAAG,qBAAqB,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAC;oBACjD,UAAU,CAAC,GAAE,EAAE;wBACd,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;oBACjE,CAAC,EAAE,GAAG,CAAC,CAAC;iBACR;YACF,CAAC,CAAC,CAAC;YACH,KAAK,EAAE,CAAC;SACR;QACD,IAAG,QAAQ,IAAI,QAAQ;YACtB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,4EAA4E,CAAC;IAC7G,CAAC;IAED,2BAA2B;QAC1B,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7H,IAAI,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;QAClG,IAAI,UAAU,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QACpF,IAAG,iBAAiB,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;;YAE9C,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,uBAAuB,CAAC,eAAsB,EAAE,gBAAqB;QACpE,KAAI,IAAI,UAAU,IAAI,eAAe,EAAC;YACrC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACxF,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzH,CAAC,CAAC,CAAC;SACH;QACD,UAAU,CAAC,GAAE,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzB,CAAC,EAAE,GAAG,CAAC,CAAC;IACT,CAAC;IAED,gBAAgB;QACf,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;YACvC,IAAI,SAAiB,CAAC,eAAe,EAAC;gBACpC,SAAiB,CAAC,eAAe,EAAE,CAAC;aACrC;SACD;IACF,CAAC;IAED,UAAU,CAAC,iBAAiB,GAAG,KAAK;QACnC,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAC;YACvC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,GAAG,CAAC,SAAS,CAAC,CAAC;YACtD,IAAG,EAAE,wDAAwD;gBAC5D,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;aACxC;YACD,WAAK,GAAE;SACP;QACD,IAAG,iBAAiB;YACnB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,yBAAyB,EAAC,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;IAC7C,CAAC;IAED,wBAAwB,CAAC,IAAY;QACpC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,aAAa,CAAC,SAA4B;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC7D,CAAC;;4EA1vBW,cAAc;8FAAd,cAAc;0EAuCC,8DAAgB;;;;;;;QCrF5C,4EAE8G;QAD7G,2JAAkB,2BAAyB,IAAC,qFAAe,qBAAiB,IAAhC,2EAA2C,iBAAa,IAAxD,8FACzB,2BAAuB,SAAE,qBAAiB,IADjB,iFAC+B,WAAO,CAAC,CAAC,IADxC,+EACqD,YAAQ,CAAC,CAAC,IAD/D;QAEzC,+EAA2B;QAC3B,8DAAyC;QAAzC,oEACM;QACN,2GAeM;QACN,0GAOM;QACN,4GAgCM;QACV,4DAAM;QACN,0GAGM;QACN,4GAmCM;QACN,6GAUM;QACN,wGAEI;QACJ,yGAEI;;QAlH0H,0DAAqB;QAArB,qFAAqB;QAgBrB,0DAA8B;QAA9B,8FAA8B;QAQX,0DAA4C;QAA5C,4GAA4C;QAkClJ,0DAAe;QAAf,+EAAe;QAIpD,0DAAiB;QAAjB,iFAAiB;QAoCU,0DAAgB;QAAhB,gFAAgB;QAWjB,0DAAgB;QAAhB,gFAAgB;QAGtB,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHoD;AAE3C;AACP;AACA;AACM;AACd;AACN;AACiC;AAExD,MAAM,aAAc,SAAQ,8DAAc;IAQ7C;QACI,KAAK,EAAE,CAAC;QALZ,yBAAoB,GAA0B,EAAE,CAAC;QAEjD,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,gBAAgB,CAAC;IAC1C,CAAC;IAED,WAAW,CAAC,IAAiB;QACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,EAAC;YACxN,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,EAAC,EAAE,yBAAyB;gBACrD,IAAI,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC;gBACnG,IAAG,gBAAgB,IAAI,IAAI;oBACvB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7H;SACJ;IACL,CAAC;IAED;;OAEG;IACH,gBAAgB;QACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,eAAe;QACX,KAAI,IAAI,gBAAgB,IAAI,IAAI,CAAC,oBAAoB,EAAC;YAClD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;SAClD;QACD,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAEK,cAAc;;YAChB,MAAM,yEAAK,CAAE,CAAC,CAAC,GAAG,yFAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAE;YAC1E,IAAG,CAAC,IAAI,CAAC,aAAa;gBAClB,OAAO;YACX,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;gBACtC,OAAO;YACX,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7G,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;YACxF,IAAG,SAAS,CAAC,MAAM,IAAI,CAAC;gBACpB,OAAO;YACX,IAAI,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7E,IAAI,OAAO,GAAG,IAAI,wDAAW,EAAE,CAAC;YAChC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;YAC5B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACjC,OAAO,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;YAC3B,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;YAC9B,KAAK,CAAC,QAAQ,GAAG,cAAc,CAAC;YAChC,KAAK,CAAC,MAAM,GAAG,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,cAAc,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;YACnH,OAAO,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,KAAK,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;YACvE,IAAG,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,IAAI,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,EAAC;gBAC3F,mBAAmB;gBACnB,IAAI,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,cAAc,CAAC,CAAC;gBAC9F,IAAG,gBAAgB,IAAI,IAAI,EAAC;oBACxB,qDAAqD;oBACrD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;oBAC/C,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,IAAI,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;iBACtI;qBACG;oBACA,6CAA6C;oBAC7C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC;oBACvG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;iBAC3C;aACJ;iBACG;gBACA,iBAAiB;gBACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC1B;QACL,CAAC;KAAA;IAEK,QAAQ,CAAC,IAAiB;;YAC5B,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC;KAAA;IAED,qBAAqB;QACjB,IAAI,kBAAkB,GAAe,EAAE,CAAC;QACxC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;YAC9C,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACvF,IAAI,SAAS,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,IAAI,+EAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,CAAC;gBAC/I,IAAG,CAAC,SAAS;oBACT,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACN;QACD,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IAED,UAAU,CAAC,YAAY;QACnB,IAAI,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,IAAI,YAAY,CAAC,CAAC;QAC/F,IAAG,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,IAAI,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU;YAC5I,OAAO;QACX,IAAI,IAAI,GAAG,IAAI,wDAAW,EAAE,CAAC;QAC7B,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;QAC9B,KAAK,CAAC,QAAQ,GAAG,gBAAgB,CAAC,QAAQ,CAAC;QAC3C,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QACnH,IAAI,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC3E,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAEK,MAAM,CAAC,IAAiB,EAAE,YAAoB;;YAChD,IAAI,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,IAAI,YAAY,CAAC,CAAC;YAC/F,IAAG,CAAC,IAAI,CAAC,aAAa,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,IAAI,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU;gBACnK,OAAO;YACX,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpB,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAC1C,CAAC;KAAA;CACJ;AAEM,MAAM,oBAAqB,SAAQ,gDAAO;IAAjD;;QACI,eAAU,GAAW,CAAC,CAAC;IAC3B,CAAC;CAAA;AAED,MAAM,mBAAmB;IAKrB,YAAY,YAAoB,EAAE,QAAkB,EAAE,UAAsB;QACxE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;CACJ;;;;;;;;;;;;;ACtJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACU;AACI;AACE;AACI;AACJ;AACW;;;;;;;;;;;ICYpC,iFAA4D;IAAA,uDAAiB;IAAA,4DAAa;;;;IAA7C,0EAAc;IAAC,0DAAiB;IAAjB,wFAAiB;;ADLlG,MAAM,YAAc,SAAQ,2EAAiB;IALpD;;QAOQ,aAAQ,GAAQ,IAAI,kDAAG,EAAE,CAAC;QAEjC,yBAAoB,GAAe,EAAE,CAAC;KAiEtC;IA/DO,WAAW,CAAC,KAAiB;QACnC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IAED,eAAe;QACd,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC;QACpE,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC9D,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC/C,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC9B,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC9D,IAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,EAAC;oBACxC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;oBAC/B,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;oBACtB,OAAO;iBACP;gBACD,IAAG,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,EAAC;oBACrC,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,oBAAoB,EAAC,EAAE,6DAA6D;wBACrG,IAAG,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG;4BACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;qBAC5D;oBACD,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC;iBACrC;;oBAEA,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;aAC9B;SACD;IACF,CAAC;IAEM,gBAAgB;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;QACtC,IAAI,QAAkB,CAAC;QACvB,IAAG,IAAI,IAAI,gEAAO,CAAC,IAAI,EAAC;YACvB,QAAQ,GAAG,IAAI,4DAAQ,CAAC,WAAW,EAAC,CAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,IAAI,EAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,MAAM,CAAC,CAAC,CAAC;SACvG;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,OAAO,EAAC;YAC/B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,UAAU,EAAC,CAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,IAAI,CAAC,CAAC,CAAC;SACrE;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,GAAG,EAAC;YAC3B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,cAAc,EAAC,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SACzD;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,IAAI,EAAC;YAC5B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,cAAc,EAAC,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACzD,QAAQ,CAAC,QAAQ,GAAG,kEAAQ,CAAC,KAAK,CAAC;SACnC;aACO,IAAG,IAAI,IAAI,gEAAO,CAAC,UAAU,EAAC;YACrC,QAAQ,GAAG,IAAI,4DAAQ,CAAC,iBAAiB,EAAE,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,QAAQ,CAAC,QAAQ,GAAG,kEAAQ,CAAC,UAAU,CAAC;SACxC;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,kDAAG,EAAE,CAAC;QAClB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;6FApEW,YAAY;4FAAZ,YAAY;QCdzB,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,+IAAa,2BAAyB,IAAC,yFAAe,2BAAuB,IAAtC,+EACzD,uBAAmB,IADsC;QAE9D,oEAA4B;QAChC,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,sEAAK;QACD,0EAAoC;QAChC,2EAA4B;QAAA,kEAAM;QAAA,8EAAmH;QAAA,4DAAO;QAC5J,uEAAK;QACD,qFAA0D;QACtD,kFAAsG;QAA1F,sJAAmB,sBAAkB,SAAE,iBAAa,IAAC;QAC7D,yHAA0F;QAC9F,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,kFAKmB;QACvB,4DAAM;QACV,4DAAM;QACN,iFAAkB;QACd,mFAGoB;QACxB,4DAAM;QACV,4DAAM;;QApCN,+FAAqC;QAa2B,2DAAqF;QAArF,8IAAqF;QAG3D,0DAAmC;QAAnC,8FAAmC;QACpE,0DAAc;QAAd,oFAAc;QAM3D,0DAAkB;QAAlB,+EAAkB;QAStB,0DAAkB;QAAlB,+EAAkB;;oHDpBb,YAAY;;;;;;;;;;;;;AEbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACuB;;;;;;;;;ICgB1C,iFAAgE;IAAA,uDAAqB;IAAA,4DAAa;;;;IAAjD,0EAAc;IAAC,0DAAqB;IAArB,4FAAqB;;;IAUrF,iFAAsE;IAAA,uDAA2B;IAAA,4DAAa;;;;IAAvD,0EAAc;IAAC,0DAA2B;IAA3B,kGAA2B;;ADnBhH,MAAM,cAAe,SAAQ,2EAAiB;IALrD;;QAOW,eAAU,GAAW,IAAI,sDAAK,EAAE,CAAC;KAU3C;IARU,iBAAiB;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,QAAQ;QACjB,IAAI,CAAC,GAAG,IAAI,sDAAK,EAAE,CAAC;QACpB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;mGAXW,cAAc;8FAAd,cAAc;QCT3B,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,iJAAa,2BAAyB,IAAC,2FAAe,2BAAuB,IAAtC,iFACzD,uBAAmB,IADsC;QAE9D,oEAA8B;QAClC,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,yEAAoC;QAChC,2EAA4B;QAAA,0EAAc;QAAA,8EAAoH;QAAA,4DAAO;QACrK,uEAAK;QACD,qFAA0D;QACtD,kFAA2F;QAA/E,+JAAmB,iBAAa,IAAC;QAC3C,2HAAkG;QACpG,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,0EAAoC;QAChC,2EAA4B;QAAA,gFAAoB;QAAA,8EAA4I;QAAA,4DAAO;QACnM,uEAAK;QACD,qFAA0D;QACtD,kFAAiG;QAArF,+JAAmB,iBAAa,IAAC;QAC3C,2HAA8G;QAChH,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAhCN,iGAAsC;QAY8B,2DAAsF;QAAtF,+IAAsF;QAGxF,0DAA4C;QAA5C,uGAA4C;QAC3D,0DAAkB;QAAlB,wFAAkB;QAMK,0DAA8G;QAA9G,uKAA8G;QAGtH,0DAAkD;QAAlD,6GAAkD;QACjE,0DAAwB;QAAxB,8FAAwB;;sHDnB9D,cAAc;;;;;;;;;;;;;;;;;;;;;;IERvB,kEAAyF;;;IACzF,kEAAuJ;;;IACvJ,kEAAwG;;;;IAH5G,yEAA+F;IAAlE,uTAAoB;IAC7C,qHAAyF;IACzF,qHAAuJ;IACvJ,qHAAwG;IAC5G,4DAAM;;;IAHE,0DAAkD;IAAlD,qHAAkD;IAClD,0DAAiG;IAAjG,2KAAiG;IACjG,0DAAmD;IAAnD,sHAAmD;;ACMpD,MAAM,uBAAuB;IAInC,YAAoB,KAAwB,EAAS,iBAAoC;QAArE,UAAK,GAAL,KAAK,CAAmB;QAAS,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAE9F,QAAQ;IACR,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,SAAS;QACR,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;;8FAjBW,uBAAuB;uGAAvB,uBAAuB;QDTpC,mHAIM;;QAJ6C,0GAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEA7F,2EAAyI;IAArD,0VAAiC;IAArH,4DAAyI;;;IAArD,+FAAiC;;;IACrH,oEAAmR;;;IAAjI,mPAA6F;IAAC,2GAAkC;;ACS3Q,MAAM,cAAc;IAI1B,YAAmB,cAA8B,EAAS,aAA4B,EAAU,KAAwB;QAArG,mBAAc,GAAd,cAAc,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAmB;QACvH,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE;YACzC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC5B,CAAC,CAAC;IACH,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;;4EAZW,cAAc;8FAAd,cAAc;QDV3B,8GAAyI;QACzI,0GAAmR;;QAD3Q,sGAAsC;QACxC,0DAAiH;QAAjH,yLAAiH;;;;;;;;;;;;;;AEEvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACQ;;;;;;;;;;;;;;ICUnE,6EAG8E;IAA7E,+dAAqC;IACtC,4DAAS;;;;IAJa,wRAAyM;IAE9N,2EAAmB;;;;;IAGpB,6EAI0E;IADzE,ojBAA2D,CAAC,cAAW,8fACX,CAAC,cADU;IAExE,4DAAS;;;;;;IAJR,iIAA2D;;;;IAP7D,wEAA2E;IAC1E,2JAIS;IACT,2JAKS;IACV,qEAAe;;;;IAVN,0DAAwD;IAAxD,iIAAwD;IAIvD,0DAA+C;IAA/C,qHAA+C;;;;IAnB3D,8DAAgJ;IAAhJ,+EAAgJ;IAC/I,oFAA4E;IAC3E,qEAA+E;IAC/E,qEAA+E;IAChF,4DAAiB;IACjB,wEAA6H;IAC7H,0EAAyC;IACxC,8EAAkE;IACjE,uDACD;IAAA,4DAAW;IACZ,4DAAO;IACP,yEAAkI;IACjI,gFAA8E;IAAzC,qUAAuB;IAA5D,4DAA8E;IAC9E,oJAYe;IAChB,4DAAI;IACL,4DAAM;;;IA3B2G,yFAA8B;IAC9H,0DAA4B;IAA5B,8GAA4B;IACvB,0DAAyD;IAAzD,qHAAyD;IACzD,0DAAyD;IAAzD,qHAAyD;IAExE,0DAA0B;IAA1B,4GAA0B;IAAwB,2EAAe;IAE1C,0DAAqC;IAArC,iGAAqC;IAChE,0DACD;IADC,wGACD;IAEgC,0DAAgG;IAAhG,kKAAgG;IACnE,0DAAe;IAAf,2EAAe;IAC5C,0DAA+B;IAA/B,sGAA+B;;;;IAejE,0EAAgJ;IAC/I,uEAAM;IAAA,kEAAO;IAAA,4DAAO;IACpB,4EAAwD;IAArC,kWAAmC;IAAtD,4DAAwD;IACzD,4DAAM;;;IAH4D,0FAA4B;IAE1E,0DAAmC;IAAnC,iGAAmC;;ADjBhD,MAAM,mBAAmB;IAyB/B,YAAoB,KAAwB,EAAS,gBAAkC,EAAU,cAA8B;QAA3G,UAAK,GAAL,KAAK,CAAmB;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAlB/H,eAAU,GAAG,KAAK,CAAC;QACnB,SAAI,GAAW,EAAE,CAAC;QAOlB,iBAAY,GAAW,wEAAI,EAAE,CAAC;QAE9B,cAAS,GAAW,CAAC,CAAC;QACtB,cAAS,GAAW,CAAC,CAAC;QACtB,cAAS,GAAW,CAAC,CAAC;QACtB,cAAS,GAAW,CAAC,CAAC;QAEtB,gBAAW,GAAW,CAAC,CAAC;QACxB,gBAAW,GAAW,CAAC,CAAC;QAyFxB,gBAAW,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzB,CAAC;QAED,qBAAgB,GAAG,GAAG,EAAE,GAAE,CAAC;QA3F1B,KAAK,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE;YACzD,IAAG,IAAI,KAAK,IAAI,CAAC,eAAe,EAAC;gBAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC3C;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE;YACzD,IAAG,IAAI,KAAK,IAAI,CAAC,eAAe,EAAC;gBAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC3C;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,IAAI,EAAC,EAAE;YACvC,IAAI,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAC,QAAQ,CAAC,CAAC;YAC9E,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAC,eAAe,CAAC,CAAC;YAClF,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE,GAAG,CAAC,CAAC;YAExE,IAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,IAAI,KAAK,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC;gBACpF,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,GAAG,EAAE,GAAE,OAAO,KAAK,GAAC;gBAC5D,OAAO;aACP;YAED,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YAEzC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,KAAK,GAAC,EAAE,IAAI,CAAC,CAAC;YAE1C,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAEhC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAEpC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAExC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAErC,OAAO,CAAC,YAAY,CAAC,GAAG,EAAC,GAAG,CAAC;YAC7B,OAAO,CAAC,YAAY,CAAC,MAAM,EAAC,SAAS,CAAC;YAEtC,IAAG,IAAI,KAAK,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC;gBACzC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACrC;YAED,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAEzB,IAAY,CAAC,YAAY,EAAE,CAAC;YAC7B,UAAU,CAAC,GAAG,EAAE;gBACf,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAC7B,CAAC,EAAE,EAAE,CAAC;YACN,UAAU,CAAC,GAAE,EAAE;gBACd,OAAO,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC,EAAC,KAAK,CAAC;YAER,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,GAAG,EAAE,GAAE,OAAO,KAAK,GAAC;QAC7D,CAAC,CAAC;IACH,CAAC;IAED,WAAW;QACV,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACtD,CAAC;IAED,eAAe;QACd,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,IAAG,IAAI,CAAC,eAAe,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAC;YAC1F,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG;gBACjC,IAAI,+DAAS,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC;gBAChO,IAAI,+DAAS,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC;aAChO;SACD;IACF,CAAC;IASD,kBAAkB;QACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAG,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAC;YACvD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;gBACjC,IAAI,+DAAS,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC,GAAC,GAAG,EAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC,GAAC,GAAG,CAAC;gBACzO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC;oBACxE,IAAI,+DAAS,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC;YACjO,IAAI,CAAC,IAAI,GAAG,qFAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SAC1E;IACF,CAAC;IAED,SAAS,CAAC,QAAmB,EAAE,IAAe,EAAE,KAAY;QAC3D,IAAI,IAAI,GAAG,IAAI,+DAAS,CACvB,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,EACvB,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxG,IAAG,KAAK,IAAI,CAAC,CAAC,EAAC;YACd,OAAO;SACP;QACD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,QAAQ,CAAC,IAAe,EAAE,KAAY;QACrC,IAAG,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,MAAM,KAAK,CAAC;YAChE,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACpF,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;QAChG,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;QACpD,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;QACpD,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAG,KAAK,YAAY,UAAU,EAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;YAE/B,KAAK,CAAC,WAAW,GAAG,CAAC,CAAa,EAAE,EAAE;gBACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC;gBAC/G,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC;gBAE/G,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,KAAK,GAAG,IAAI,CAAC;gBAEjB,MAAM,UAAU,GAAG,EAAE,CAAC;gBAEtB,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAG,SAAS,GAAG,UAAU,EAAC;oBACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK;iBACb;qBACI,IAAG,SAAS,GAAG,UAAU,EAAC;oBAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK,CAAC;iBACd;gBACD,IAAG,SAAS,GAAG,UAAU,EAAC;oBACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK,CAAC;iBACd;qBACI,IAAG,SAAS,GAAG,UAAU,EAAC;oBAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK,CAAC;iBACd;gBACD,IAAG,KAAK;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBACzB,IAAG,KAAK;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBAEzB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC;YAC5B,CAAC;YACD,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE;gBACvB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;gBACzB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;YACzB,CAAC;SACD;aACI,IAAG,KAAK,YAAY,UAAU,EAAC;YACnC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAE1C,KAAK,CAAC,WAAW,GAAG,CAAC,CAAa,EAAE,EAAE;gBACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC;gBAC1H,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC;gBAE1H,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,KAAK,GAAG,IAAI,CAAC;gBAEjB,MAAM,UAAU,GAAG,EAAE,CAAC;gBAEtB,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAG,SAAS,GAAG,UAAU,EAAC;oBACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK;iBACb;qBACI,IAAG,SAAS,GAAG,UAAU,EAAC;oBAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK,CAAC;iBACd;gBACD,IAAG,SAAS,GAAG,UAAU,EAAC;oBACzB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK,CAAC;iBACd;qBACI,IAAG,SAAS,GAAG,UAAU,EAAC;oBAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG,KAAK,CAAC;iBACd;gBACD,IAAG,KAAK;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBACzB,IAAG,KAAK;oBACP,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBAEzB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACvC,CAAC;YAED,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE;gBACxB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;gBACzB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;YAC1B,CAAC;SACD;IACF,CAAC;;sFAvPW,mBAAmB;mGAAnB,mBAAmB;;;;;;;;;;;;;;QCbhC,sHA2BM;QACN,+GAGM;;QA/BK,gLAAoG;QA4BzG,0DAA0D;QAA1D,yHAA0D;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BpB;AACd;AACqB;AACO;AACa;AACvB;AACoB;AAE7D,MAAM,YAAa,SAAQ,kEAAgB;IAa9C;QACI,KAAK,EAAE,CAAC;QAVZ,oBAAe,GAA6B,EAAE,CAAC;QAE/C,oBAAe,GAAG,CAAC,CAAC;QACpB,kBAAa,GAAG,KAAK,CAAC;QACtB,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAG,SAAS,CAAC;QAElB,aAAQ,GAAkB,EAAE;QAoGpB,uBAAkB,GAAG,IAAI,uEAAe,EAAoB,CAAC;QAhGjE,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QAErC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;YACrB,IAAI,kDAAQ,CAAC,cAAc,EAAE,CAAC,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,IAAI,EAAE,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,MAAM,EAAE,4DAAU,CAAC,KAAK,CAAC,CAAC;SACvH,CAAC;IACN,CAAC;IAEK,WAAW,CAAC,IAAiB;;YAC/B,IAAG,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI;gBAC7C,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;YAGnG,qBAAqB;YACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAG,CAAC,IAAI,CAAC,aAAa;gBAClB,IAAI,CAAC,cAAc,EAAE,CAAC;YAE1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,+BAA+B;YAC/B,IAAI,QAAQ,GAAG,IAAI,wDAAW,EAAE,CAAC;YACjC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;YACrC,QAAQ,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;YAC5B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClC,qBAAqB;YACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAG,IAAI,CAAC,YAAY;gBAChB,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,CAAC;KAAA;IAEK,cAAc;;YAChB,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;gBACnE,OAAO;YACX,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAG,CAAC,IAAI,CAAC,kBAAkB,EAAC;gBACxB,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC;aACpB;iBACG;gBACA,IAAG,CAAC,OAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAC;oBACpC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,OAAO;iBACV;aACJ;YACD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAExB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;YAClC,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;YAC9B,KAAK,CAAC,QAAQ,GAAG,IAAI,kDAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,IAAI,EAAE,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,KAAK,EAAE,4DAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACrJ,KAAK,CAAC,MAAM,GAAG,4DAAU,CAAC,IAAI,CAAC;YAC/B,OAAO,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;YAChC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;YAE7B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAEtB,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;gBAE3B,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC;KAAA;IAEK,QAAQ,CAAC,IAAiB;;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;KAAA;IAEK,UAAU,CAAC,IAAiB;;YAC9B,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW;iBAC5C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE;iBAChF,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC;YAC/D,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;YACrC,IAAG,WAAW,KAAK,CAAC,EAAC;gBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzB,OAAO;aACV;YACD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACtB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAG,IAAI,CAAC,eAAe,IAAI,WAAW;gBAClC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAChE,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,CAAC;KAAA;IAED,kBAAkB,CAAC,YAAqB,KAAK;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAGM,UAAU,CAAC,OAAkC;QAChD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IACO,YAAY,CAAC,KAAuB;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;CACJ;AAEM,MAAM,mBAAoB,SAAQ,iEAAe;CACvD;;;;;;;;;;;;;AC/HD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACwB;;;;;;;;;;;;;ICAjE,2EAAoD;IAChD,mEAA+B;IACnC,4DAAO;;;IAEH,2EAAmB;IACf,mEAAiC;IACrC,4DAAO;;;;IAIX,sEAA0D;IACtD,2EAA4B;IAAA,iEAAM;IAAA,4DAAO;IACzC,4EAA4H;IAAtF,gUAAa,2CAAmC,CAAC,qBAAqB,2BAAe;IAA3H,4DAA4H;IAChI,4DAAM;;;IADoC,0DAAqF;IAArF,oJAAqF;;;;IAG3H,sEAAoC;IAChC,sEAAK;IACD,2EAA4B;IAAA,mEAAQ;IAAA,4DAAO;IAC3C,+EAA+I;IAAtF,iVAAa,2CAAmC,CAAC,qBAAqB,2BAAe;IAAC,4DAAW;IAC9J,4DAAM;IACV,4DAAM;;;IAF2D,0DAAqF;IAArF,oJAAqF;;;IAHtJ,qIAKM;;;IALA,gGAA4B;;;IAoB1B,iFAAmE;IAAA,uDAAoB;IAAA,4DAAa;;;;IAAhD,2EAAc;IAAC,0DAAoB;IAApB,6FAAoB;;;;IALnG,sEAAqC;IACjC,2EAA4B;IAAA,sEAAW;IAAA,4DAAO;IAC9C,qFAA0D;IACtD,iFAA8I;IAAlI,kWAAsC,8QAAc,2CAAmC,CAAC,qBAAqB,gCAAvE;IAC9C,iFAAwB;IAAA,+DAAI;IAAA,4DAAa;IACzC,4IAAoG;IACxG,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;;;IALqD,0DAA0F;IAA1F,yJAA0F;IAC7H,0DAAW;IAAX,oEAAW;IACM,0DAAqB;IAArB,+FAAqB;;;;IA1BlE,yEAAwF;IACpF,uHAGM;IACN,mNAOc;IACd,0EAAmB;IACf,2EAA4B;IAAA,6DAAE;IAAA,4DAAO;IACrC,gFAAkL;IAAxK,4eAA0C,iQAAyD,2CAAmC,CAAC,qBAAqB,uBAAlH;IAApD,4DAAkL;IACtL,4DAAM;IACN,0EAAmB;IACf,4EAA4B;IAAA,8DAAE;IAAA,4DAAO;IACrC,iFAAiL;IAAvK,6eAA0C,kQAAwD,2CAAmC,CAAC,qBAAqB,uBAAjH;IAApD,4DAAiL;IACrL,4DAAM;IACN,yHAQM;IACV,4DAAM;;;;IA7BI,0DAA+B;IAA/B,gGAA+B;IAc+D,0DAAiF;IAAjF,+IAAiF;IAIlF,0DAAiF;IAAjF,+IAAiF;IAE9K,0DAA6B;IAA7B,gGAA6B;;;IA4BvB,iFAAmE;IAAA,uDAAoB;IAAA,4DAAa;;;;IAAhD,2EAAc;IAAC,0DAAoB;IAApB,6FAAoB;;;;IALnG,sEAAqC;IACjC,2EAA4B;IAAA,sEAAW;IAAA,4DAAO;IAC9C,qFAA0D;IACtD,iFAAyF;IAA7E,wXAA0C;IAClD,iFAAwB;IAAA,+DAAI;IAAA,4DAAa;IACzC,6IAAoG;IACxG,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;;;IALc,0DAA0C;IAA1C,yGAA0C;IACtC,0DAAW;IAAX,oEAAW;IACM,0DAAqB;IAArB,+FAAqB;;;;IAlBlE,yEAAuF;IACnF,sEAAK;IACD,2EAA4B;IAAA,iEAAM;IAAA,4DAAO;IACzC,4EAAqG;IAA/D,8TAAwB;IAA9D,4DAAqG;IACzG,4DAAM;IACN,0EAAmB;IACf,2EAA4B;IAAA,6DAAE;IAAA,4DAAO;IACrC,gFAA0J;IAAhJ,wXAAkE;IAA5E,4DAA0J;IAC9J,4DAAM;IACN,2EAAmB;IACf,4EAA4B;IAAA,8DAAE;IAAA,4DAAO;IACrC,iFAAyJ;IAA/I,yXAAkE;IAA5E,4DAAyJ;IAC7J,4DAAM;IACN,0HAQM;IACV,4DAAM;;;IAnBiE,0DAAqC;IAArC,mGAAqC;IAIoB,0DAAiC;IAAjC,+FAAiC;IAIlC,0DAAiC;IAAjC,+FAAiC;IAEtJ,0DAA6B;IAA7B,gGAA6B;;;IAcnC,2EAAkD;IAC9C,mEAA+B;IACnC,4DAAO;;;IAEH,2EAAmB;IACf,mEAAiC;IACrC,4DAAO;;;IAYX,2EAAoD;IAChD,mEAA+B;IACnC,4DAAO;;;IAEH,2EAAmB;IACf,mEAAiC;IACrC,4DAAO;;;IAYX,2EAAwD;IACpD,mEAA+B;IACnC,4DAAO;;;IAEH,2EAAmB;IACf,mEAAiC;IACrC,4DAAO;;ADtGpB,MAAM,oBAAoB;IA6BhC,YAAmB,gBAAkC,EAAU,QAAmB,EAAU,cAA8B;QAAvG,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAzB1H,gBAAW,GAAY,IAAI,CAAC;QAC5B,cAAS,GAAY,IAAI,CAAC;QAC1B,gBAAW,GAAY,IAAI,CAAC;QAC5B,oBAAe,GAAY,IAAI,CAAC;QAEhC,eAAU,GAAY,KAAK,CAAC;QAC5B,mBAAc,GAAY,KAAK,CAAC;QAEhC,4BAAuB,GAAW,OAAO,CAAC;QAYnC,eAAU,GAAsB,sEAAU,CAAC;QAC3C,mBAAc,GAAG,MAAM,CAAC,MAAM,CAAC,sEAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjF,uBAAkB,GAAG,EAAE,CAAC;QAIvB,gBAAgB,CAAC,iBAAiB,CAAE,GAAE,EAAE;YACvC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;YACjD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;YACjD,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;YACrD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,SAAS,CAAC;YAC5C,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,SAAS,CAAC;YAC5C,IAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,EAAC;gBACtD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACtB;iBACI,IAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,EAAC;gBAC3D,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAErB,IAAI,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;gBACnD,IAAG,cAAc;oBAChB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAC,cAAc,CAAC,aAAa,CAAC,CAAC;gBAE3F,IAAI,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;gBACnD,IAAG,cAAc,EAAC;oBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAC,cAAc,CAAC,aAAa,CAAC,CAAC;iBAC1F;;oBAEA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAEzB,IAAI,kBAAkB,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC;gBAC3D,IAAG,kBAAkB,EAAC;oBACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;iBAClG;;oBAEA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;iBACG;gBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC5G,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtH,IAAI,UAAU,GAAG,IAAI,CAAC;gBACtB,IAAI,SAAS,GAAG,IAAI,CAAC;gBACrB,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAC;oBAC5D,IAAI,OAAO,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC;oBACpD,IAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,mBAAmB;wBACtC,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC;oBACtC,IAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,mBAAmB;wBACtC,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC;oBACtC,IAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,uBAAuB,EAAC;wBAChD,UAAU,GAAG,KAAK,CAAC;qBACnB;oBACD,IAAG,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,4BAA4B,EAAC;wBAC1D,SAAS,GAAG,KAAK,CAAC;qBAClB;iBACD;gBACD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBACvD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBACvD,IAAG,CAAC,UAAU;oBACb,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC;gBACxC,IAAG,CAAC,SAAS,EAAC;oBACb,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;iBACzC;aACD;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC;aACxE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACjD,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,oBAAoB;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,YAAY,4FAAkB,CAAC;IACxI,CAAC;IAED,QAAQ;IACR,CAAC;IAED,gBAAgB;QACf,IAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,EAAC;YACzF,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;SACzF;IACF,CAAC;IAED,YAAY;QACX,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAC;YAC5D,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC;SAC3E;IACF,CAAC;IAED,cAAc,CAAC,CAAC,EAAE,CAAC;QAClB,IAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,EAAC;YACtD,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChB,IAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,EAAE,EAAC;gBACxG,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAC;oBAC5D,SAAS,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;iBAC3B;aACD;SACD;aACI;YACJ,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjG,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClG,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAC;gBAC5D,SAAS,CAAC,WAAW,CACpB,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,sBAAsB,EAC7E,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAC7E,CAAC;aACF;YAED,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;SACpC;IACF,CAAC;IAED,WAAW;QACV,IAAG,IAAI,CAAC,4BAA4B,IAAI,CAAC,EAAC;YACzC,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAC;gBAC5D,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;aACxD;SACD;aACG;YACH,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAC;gBAC5D,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC;aACrF;SACD;IAEF,CAAC;;wFA1JW,oBAAoB;oGAApB,oBAAoB;;;;;;;;;;QCZjC,yEAA+E;QAC3E,yEAAkB;QACd,yEAAkD;QAC9C,yEAAyD;QAArC,+KAAoC;QACpD,0EAAoB;QAAA,kEAAO;QAAA,4DAAO;QAClC,kHAEO;QACP,4MAIc;QAClB,4DAAM;QACN,iHA8BM;QACN,mHAsBM;QACV,4DAAM;QACN,0EAAoI;QAChI,0EAAqD;QAAjC,4KAAgC;QAChD,2EAAoB;QAAA,sEAAU;QAAA,4DAAO;QACrC,oHAEO;QACP,8MAIc;QAClB,4DAAM;QACN,0EAAqB;QACjB,2EAEM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAoJ;QAChJ,0EAAyD;QAArC,gLAAoC;QACpD,2EAAoB;QAAA,mEAAO;QAAA,4DAAO;QAClC,oHAEO;QACP,8MAIc;QAClB,4DAAM;QACN,0EAAqB;QACjB,4EAEM;QACV,4DAAM;QACV,4DAAM;QACN,0EAA4J;QACxJ,0EAAiE;QAA7C,wLAA4C;QAC5D,2EAAoB;QAAA,sEAAU;QAAA,4DAAO;QACrC,oHAEO;QACP,8MAIc;QAClB,4DAAM;QACN,0EAAqB;QACjB,4EAEM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;QA5H2B,qGAA6C;QAEjD,0DAA4B;QAA5B,oFAA4B;QAGrB,0DAAmB;QAAnB,iFAAmB;QASrB,0DAAgE;QAAhE,oIAAgE;QA+BhE,0DAA+D;QAA/D,mIAA+D;QAwBpE,0DAAmF;QAAnF,2IAAmF;QAAC,kFAA0B;QAGvG,0DAAiB;QAAjB,+EAAiB;QAeK,0DAAiG;QAAjG,6JAAiG;QAA9H,oFAA4B;QAGrB,0DAAmB;QAAnB,iFAAmB;QAeO,0DAAqG;QAArG,iKAAqG;QAAtI,wFAAgC;QAGzB,0DAAuB;QAAvB,qFAAuB;;;;;;;;;;;;;;AC5G3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8I;AAM/E;AACZ;AACsB;AACZ;AACR;AAC8B;AAC1B;AACY;AAChB;AACkB;AACZ;AAEa;AACjB;AAC+B;AAC7B;;;;;;;;;;;AAWlD,MAAe,iBAAiB;IAiDnC,YAAsB,cAA8B,EAAY,gBAAkC,EAAY,QAAkC,EAAS,KAAwB,EAAU,cAA8B,EAAU,iBAAoC;QAAjP,mBAAc,GAAd,cAAc,CAAgB;QAAY,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAY,aAAQ,GAAR,QAAQ,CAA0B;QAAS,UAAK,GAAL,KAAK,CAAmB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QA/C1Q,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAChC,oBAAe,GAAG,IAAI,0DAAY,EAAE,CAAC;QAK9B,eAAU,GAAsB,sEAAU,CAAC;QAC3C,mBAAc,GAAG,MAAM,CAAC,MAAM,CAAC,sEAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,6BAAwB,GAAoC,oFAAwB,CAAC;QACrF,iCAA4B,GAAG,MAAM,CAAC,MAAM,CAAC,oFAAwB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtG,aAAQ,GAAoB,kEAAQ,CAAC;QACrC,iBAAY,GAAG,MAAM,CAAC,MAAM,CAAC,kEAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,YAAO,GAAmB,gEAAO,CAAC;QAClC,gBAAW,GAAG,MAAM,CAAC,MAAM,CAAC,gEAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,aAAQ,GAAoB,kEAAQ,CAAC;QACrC,iBAAY,GAAG,MAAM,CAAC,MAAM,CAAC,kEAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,qBAAgB,GAA4B,kFAAgB,CAAC;QAC7D,yBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,kFAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtF,uBAAkB,GAA8B,sFAAkB,CAAC;QACnE,2BAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,sFAAkB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1F,iBAAY,GAAwB,0EAAY,CAAC;QACjD,qBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,0EAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,gBAAW,GAAuB,yEAAW,CAAC;QAC9C,oBAAe,GAAG,MAAM,CAAC,MAAM,CAAC,yEAAW,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5E,sBAAiB,GAA6B,qFAAiB,CAAC;QAChE,0BAAqB,GAAG,MAAM,CAAC,MAAM,CAAC,qFAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAavF,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,CAAC,CAAC;QAIV,eAAU,GAAG,KAAK,CAAC;QAqDjB,oBAAe,GAAG,CAAC,KAAY,EAAQ,EAAE;YACjD,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC7E,CAAC;QAYM,kBAAa,GAAG,GAAS,EAAE;YACjC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;YAElC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;YACpE,MAAM,CAAC,mBAAmB,CAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;YAE5D,IAAG,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAC;gBACnH,IAAI,CAAC,WAAW,EAAE,CAAC;aACnB;QACF,CAAC;QAmBM,eAAU,GAAG,EAAE,CAAC;QA0BvB,qBAAgB,GAAG,GAAG,EAAE,GAAE,CAAC;QAsC3B,gBAAW,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC5B,CAAC;QA2HD,gBAAW,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,0EAAK,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACzD,CAAC;QA5RA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,eAAe;QACd,IAAI,CAAC,IAAI,EAAE,CAAC;IACX,CAAC;IAEH,QAAQ;QACP,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEQ,eAAe,CAAC,KAAY;QACpC,IAAG,IAAI,CAAC,cAAc,CAAC,YAAY;YAClC,OAAO;QACR,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAEnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QACvE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;QAC5C,IAAG,KAAK,YAAY,UAAU,EAAC;YAC9B,IAAG,KAAK,CAAC,MAAM,IAAI,CAAC,EAAC;gBACpB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;gBAClC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAG,KAAK,CAAC,MAAM,IAAI,CAAC,EAAC;oBACpB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;oBAChD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACjC;gBACD,OAAO;aACP;YAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;YAC5C,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;YAE5C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;YACjE,MAAM,CAAC,gBAAgB,CAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;SACzD;aACI,IAAG,KAAK,YAAY,UAAU,EAAC;YAEnC,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACvD,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAEvD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;YACjE,MAAM,CAAC,gBAAgB,CAAE,UAAU,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;SAC1D;IACF,CAAC;IAMO,eAAe,CAAC,MAAM;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACrC,CAAC;IAEM,WAAW,CAAC,CAAS,EAAE,CAAS;QACtC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,GAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrJ,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAaM,WAAW,CAAC,KAAY;QAC9B,IAAG,KAAK,YAAY,UAAU,IAAI,KAAK,YAAY,UAAU;YAC5D,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,gBAAgB,CAAC,SAAS,GAAG,KAAK;QACxC,IAAG,SAAS,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI;YACzC,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;aACzC,IAAG,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI;YAC9C,OAAO,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAC7C,OAAO,IAAI,CAAC;IACb,CAAC;IAID;;;OAGG;IACI,iBAAiB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAED;;;OAGG;IACI,iBAAiB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAED;;;OAGG;IACK,qBAAqB;QAC5B,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B,CAAC;IAID,WAAW,CAAC,KAAa;QACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,cAAc,CAAC,IAAgB;QAC9B,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACvC,IAAI,IAAY,CAAC;QACjB,IAAG,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,EAAC,EAAE,wBAAwB;YACrD,IAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG;gBAC3B,IAAI,GAAG,MAAM,CAAC;iBACV,IAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG;gBAChC,IAAI,GAAG,SAAS,CAAC;iBACb,IAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG;gBAChC,IAAI,GAAG,SAAS,CAAC;iBACb,IAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG;gBAChC,IAAI,GAAG,OAAO,CAAC;;gBAEf,IAAI,GAAG,OAAO,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,qBAAqB,IAAI,KAAK,IAAI,eAAe,sEAAU,CAAC,IAAI,CAAC,EAAE,CAAC;SACrF;aACI,IAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,EAAC,EAAE,qBAAqB;YAC1D,IAAG,IAAI,IAAI,IAAI;gBACd,IAAI,CAAC,SAAS,GAAG,uCAAuC,CAAC;iBACrD,IAAG,IAAI,IAAI,IAAI;gBACnB,IAAI,CAAC,SAAS,GAAG,sCAAsC,CAAC;SACzD;QACD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC/C,UAAU,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAQD,uBAAuB;QACtB,IAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;YACzC,OAAO;QACR,IAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;YACxC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAChC,UAAU,CAAC,GAAE,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpC,CAAC,EAAC,GAAG,CAAC,CAAC;SACP;IACF,CAAC;IAED,IAAI,CAAC,gBAAyB,IAAI;QACjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACrC,IAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC;YAChC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;SAC5D;aACG;YACH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC;YACnC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAC/D,EAAkB,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YACvE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;SAClE;QACD,IAAG,IAAI,CAAC,UAAU;YACjB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC;QAErC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QACvE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;QAI5C,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,IAAe,EAAC,EAAE;YACvD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1C,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEN,IAAG,IAAI,CAAC,cAAc,YAAY,4EAAgB,EAAC;YAClD,IAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAC;gBAC5C,IAAI,CAAC,cAAc,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAC9C;YACD,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC,KAAK,EAAE,EAAE;gBACtD,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAC5B,CAAC,CAAC;YACF,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC5B;QAED,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEN,IAAI,CAAC,aAAa,GAAG,0EAAK,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAExD,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAEnD,IAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAC;YACpB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAC3B,OAAO;SACP;QAED,IAAG,aAAa;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;QAGtB,IAAG,SAAS,IAAI,IAAI;YACnB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxB,IAAG,UAAU,IAAI,IAAI;YACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,UAAU,CAAC,MAAM,GAAG,KAAK;QACxB,IAAI,OAAO,GAAI,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,mEAAa,CAAC,CAAC;QACpE,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE7C,GAAG,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC;QAC/B,GAAG,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/C,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1C,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAElF,GAAG,CAAC,QAAQ,CAAC,WAAW,GAAG,GAAG,EAAE;YAC/B,GAAG,CAAC,OAAO,EAAE,CAAC;QACf,CAAC;QAED,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAEpE,IAAG,MAAM;YACR,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC;;YAElC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,oBAAoB;QACnB,IAAI,OAAO,GAAI,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,mGAAuB,CAAC,CAAC;QAC9E,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE7C,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,aAAa;QACZ,IAAI,OAAO,GAAI,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,sEAAc,CAAC,CAAC;QACrE,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE7C,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,YAAY,CAAC,MAAkB,EAAE,UAAmB;QACnD,OAAO,uFAAkB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IAC/C,CAAC;IAOD,MAAM,CAAC,QAAQ;QACd,OAAO,SAAS,CAAC;IAClB,CAAC;;kFAlVoB,iBAAiB;iGAAjB,iBAAiB;0EA6BX,8DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDrC,MAAM,YAAY;IAExB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QADhD,UAAK,GAAG,YAAY,CAAC;QAEtB,IAAG,cAAc,CAAC,UAAU,EAAE;YAC7B,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;;wEALW,YAAY;4FAAZ,YAAY;QCRzB,2EAA+B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACU;AACd;AACqB;;;;;;;;ICgB5C,0EAA0F;IACtF,4EAA4K;IAArK,uTAAwB;IAA/B,4DAA4K;IAC5K,2EAA6E;IAAnC,uWAAkC;IAAC,mEAA4B;IAAA,4DAAO;IACpH,4DAAM;;;IAF6H,0DAA0B;IAA1B,oFAA0B;;ADV1K,MAAM,eAAgB,SAAQ,2EAAiB;IALtD;;QAOQ,gBAAW,GAAY,IAAI,wDAAM,EAAE,CAAC;KAgC3C;IA9BA,WAAW;QACV,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,4DAAQ,CAAC,oBAAoB,EAAE,CAAC,sEAAU,CAAC,GAAG,EAAE,sEAAU,CAAC,IAAI,EAAE,sEAAU,CAAC,GAAG,EAAE,sEAAU,CAAC,KAAK,EAAE,sEAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpK,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED,cAAc,CAAC,QAAkB;QAChC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAI,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,EAAC;YAChD,IAAG,EAAE,KAAK,QAAQ,EAAC;gBAClB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO;aACP;YACD,GAAG,EAAE,CAAC;SACN;IACF,CAAC;IAED,uBAAuB,CAAC,QAAQ;QAC/B,IAAG,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,IAAI,EAAE;YAC9D,QAAQ,CAAC,GAAG,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,wDAAM,EAAE,CAAC;QACrB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;sGAjCW,eAAe;+FAAf,eAAe;QCX5B,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,kJAAa,2BAAyB,IAAC,4FAAe,2BAAuB,IAAtC,kFACzD,uBAAmB,IADsC;QAE9D,oEAA+B;QACnC,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,yEAA+B;QAC3B,0EAAyC;QACrC,0EAAmC;QAC/B,2EAA4B;QAAA,oEAAQ;QAAA,+EAAoG;QAAA,4DAAO;QAC/I,4EAAkD;QAAxB,sIAAS,iBAAa,IAAC;QAAC,oEAA2B;QAAA,4DAAO;QACxF,4DAAM;QACN,2EAA+B;QAC3B,8GAGM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iFAAkB;QACd,mFAGoB;QACxB,4DAAM;QACV,4DAAM;;QAhCN,kGAAuC;QAc+B,2DAAsE;QAAtE,+HAAsE;QAIrE,0DAAqC;QAArC,sGAAqC;QAUpG,0DAAqB;QAArB,kFAAqB;;uHDnBhB,eAAe;;;;;;;;;;;;;AEX5B;AAAA;AAAA,IAAY,UAYX;AAZD,WAAY,UAAU;IAClB,yEAA0B;IAC1B,yCAAU;IACV,mDAAe;IACf,2DAAmB;IACnB,uDAAiB;IACjB,yEAA0B;IAC1B,uEAAyB;IACzB,+EAA6B;IAC7B,2EAA2B;IAC3B,wDAAkB;IAClB,0DAAmB;AACvB,CAAC,EAZW,UAAU,KAAV,UAAU,QAYrB;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACc;AACV;AACE;AACc;AACF;AACR;AACQ;AACA;AAEhB;AACE;AACE;AACM;AACA;AACZ;;AAK9B,MAAM,aAAa;IAsFzB;QApFA,8BAAyB,GAAG,gBAAgB,CAAC;QAC7C,4BAAuB,GAAG,kBAAkB,CAAC;QAC7C,eAAU,GAAW,iBAAiB,CAAC;QAEvC,UAAK,GAAG;YACP,uDAAG;YACH,4EAAU;YACV,gEAAM;YACN,6DAAK;YACL,kFAAY;YACZ,sEAAQ;YACR,kFAAY;YACZ,kFAAY;YACZ,iEAAM;YACN,0EAAS;YACT,0EAAS;YACT,8DAAK;YACL,qFAAa;YACb,wDAAG;SACH;QAED;;WAEG;QACF,wBAAmB,GAAG;YACtB,CAAC,EAAE,MAAM;YACT,CAAC,EAAE,IAAI;YACP,EAAE,EAAE,OAAO;YACX,EAAE,EAAE,YAAY;YAChB,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,UAAU;YACb,CAAC,EAAE,aAAa;YAChB,EAAE,EAAE,WAAW;YACf,CAAC,EAAE,UAAU;YACb,EAAE,EAAE,aAAa;YACjB,CAAC,EAAE,KAAK;YACR,EAAE,EAAE,kBAAkB;YACtB,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,SAAS;YACb,EAAE,EAAE,UAAU;YACd,GAAG,EAAE,YAAY;YACjB,GAAG,EAAE,cAAc;YACnB,GAAG,EAAE,eAAe;YACpB,IAAI,EAAE,cAAc;YACpB,GAAG,EAAE,kBAAkB;YACvB,IAAI,EAAE,eAAe;YACrB,GAAG,EAAE,qBAAqB;YAC1B,EAAE,EAAE,WAAW;YACf,GAAG,EAAE,mBAAmB;YACxB,GAAG,EAAE,aAAa;YAClB,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,UAAU;YACd,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,UAAU;YACd,GAAG,EAAE,eAAe;YACpB,EAAE,EAAE,SAAS;YACb,EAAE,EAAE,iBAAiB;YACrB,EAAE,EAAE,OAAO;YACX,CAAC,EAAE,cAAc;YACjB,EAAE,EAAE,aAAa;YACjB,EAAE,EAAE,YAAY;SAChB,CAAC;QAEF;;WAEG;QACH,4BAAuB,GAAG;YACzB,CAAC,EAAE,KAAK;YACR,EAAE,EAAE,YAAY;YAChB,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,eAAe;YACnB,EAAE,EAAE,OAAO;YACX,EAAE,EAAE,cAAc;YAClB,CAAC,EAAE,UAAU;YACb,EAAE,EAAE,cAAc;YAClB,EAAE,EAAE,cAAc;YAClB,CAAC,EAAE,OAAO;YACV,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,WAAW;YACf,EAAE,EAAE,WAAW;YACf,EAAE,EAAE,KAAK;SACT,CAAC;IAEc,CAAC;IAEjB,YAAY,CAAC,kBAAmC,EAAE,UAAkB,EAAE,EAAU;QAC/E,IAAI,mBAAmB,GAAG,EAAE,CAAC;QAC7B,KAAI,IAAI,SAAS,IAAI,kBAAkB,EAAC;YACvC,IAAG;gBACF,IAAI,kBAAkB,GAAQ,EAAE,CAAC;gBACjC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC3D,kBAAkB,CAAC,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvD,kBAAkB,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAClE,kBAAkB,CAAC,WAAW,GAAG,EAAE,CAAC;gBACpC,IAAI,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACzC,IAAG,SAAS,IAAI,IAAI,EAAC,EAAE,wDAAwD;oBAC9E,KAAI,IAAI,UAAU,IAAI,SAAS,CAAC,WAAW,EAAC;wBAC3C,IAAI,mBAAmB,GAAQ,EAAE,CAAC;wBAClC,mBAAmB,CAAC,IAAI,GAAG,kBAAkB,CAAC,EAAE,CAAC;wBACjD,IAAI,kBAAkB,GAAG,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;wBACnE,mBAAmB,CAAC,EAAE,GAAG,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACjE,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;wBACzD,IAAG,UAAU,CAAC,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC;4BACpE,mBAAmB,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;wBACxD,IAAG,UAAU,CAAC,KAAK;4BAClB,mBAAmB,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;qBAC9C;iBACD;gBACD,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aAC7C;YACD,OAAM,CAAC,EAAC;gBACP,SAAS;aACT;SACD;QACD,OAAQ;YACP,IAAI,EAAE,UAAU;YAChB,EAAE,EAAE,EAAE,IAAI,EAAE;YACZ,UAAU,EAAE,mBAAmB;SAC/B;IACF,CAAC;IAEC,YAAY,CAAC,kBAAmC,EAAE,UAAkB,EAAE,EAAU;QACjF,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QAC1E,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAC,IAAW;QAChC,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,YAAY,GAAG,EAAE;QACrB,IAAI,eAAe,GAAG,EAAE;QACxB,KAAI,IAAI,SAAS,IAAI,IAAI,EAAC;YACzB,IAAI,cAAc,GAAkB,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAEnE,KAAI,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAC;gBAC7C,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACrD;YACD,IAAG,SAAS,YAAY,4DAAQ,IAAI,SAAS,CAAC,OAAO,CAAC,aAAa,EAAC;gBACnE,SAAS,CAAC,UAAU,GAAG,IAAI,oDAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACvD;YACD,IAAI,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAG,UAAU,EAAC;gBACb,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;aAC5C;YACD,IAAG,SAAS,EAAC;gBACZ,IAAI,UAAU,GAAQ,EAAE,CAAC;gBACzB,UAAU,CAAC,SAAS,GAAG,cAAc,CAAC;gBACtC,UAAU,CAAC,EAAE,GAAG,cAAc,CAAC,QAAQ,CAAC;gBACxC,UAAU,CAAC,EAAE,GAAG,SAAS,CAAC,WAAW,CAAC;gBACtC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACjC;YACD,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAChC;QACD,KAAI,IAAI,UAAU,IAAI,eAAe,EAAC;YACrC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACxF,IAAG,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,EAAC;oBACvB,IAAI,eAAe,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;oBACxF,eAAe,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;oBAC5C,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;iBAClC;YACF,CAAC,CAAC,CAAC;SACH;QACD,OAAO,UAAU,CAAC;IACnB,CAAC;IAEM,gBAAgB,CAAC,SAAc;QACrC,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC;IAChG,CAAC;IAED,IAAI,CAAC,kBAAmC,EAAE,EAAU;QACnD,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;IAED,kBAAkB;QACjB,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAC7D,CAAC;IAED,kBAAkB;QACjB,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC3D,CAAC;IAED,qBAAqB,CAAC,kBAAmC;QACxD,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACzD,IAAG,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,yBAAyB;QAC1C,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,UAAU,EAAC;YACpC,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,oCAAoC;YAC7E,OAAO,SAAS,CAAC,EAAE,CAAC;YACpB,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAC3D,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,IAAI,CAC1D,CAAC,CAAC,gBAAgB;YACnB,OAAO,SAAS,CAAC,IAAI,CAAC;YACtB,IAAI,oBAAoB,GAAG,EAAE;YAC7B,KAAI,IAAI,UAAU,IAAI,SAAS,CAAC,WAAW,EAAC;gBAC3C,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBACnE,IAAG,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK;oBAC3C,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC;gBACvC,IAAG,UAAU,CAAC,KAAK;oBAClB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC5B,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC/B;YACD,IAAG,oBAAoB,CAAC,MAAM,IAAI,CAAC;gBAClC,OAAO,SAAS,CAAC,WAAW;iBACzB;gBACH,SAAS,CAAC,CAAC,GAAG,oBAAoB,CAAC;gBACnC,OAAO,SAAS,CAAC,WAAW,CAAC;aAC7B;YACD,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAC5D,OAAO,SAAS,CAAC,OAAO,CAAC;SACzB;QACD,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,wBAAwB,CAAC,IAAS;QACjC,KAAI,IAAI,SAAS,IAAI,IAAI,EAAC;YACzB,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1D,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9D,SAAS,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC;YAC3B,IAAI,iBAAiB,GAAG,EAAE;YAC1B,IAAG,SAAS,CAAC,CAAC,IAAI,IAAI,EAAC;gBACtB,KAAI,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,EAAC;oBACjC,IAAI,gBAAgB,GACnB;wBACC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;wBACnB,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;qBACjB;oBACF,IAAG,UAAU,CAAC,MAAM,GAAG,CAAC;wBACvB,gBAAgB,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7C,IAAG,UAAU,CAAC,MAAM,GAAG,CAAC;wBACvB,gBAAgB,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;oBACxC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACzC;aACD;YACD,SAAS,CAAC,WAAW,GAAG,iBAAiB,CAAC;YAC1C,OAAO,SAAS,CAAC,CAAC,CAAC;YACnB,OAAO,SAAS,CAAC,CAAC,CAAC;YACnB,OAAO,SAAS,CAAC,CAAC,CAAC;YACnB,OAAO,SAAS,CAAC,CAAC,CAAC;SACnB;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,MAAa;QACvB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5E,CAAC;IAGD;;OAEG;IACK,YAAY,CAAC,OAAgB;QACpC,IAAI,QAAQ,GAAG,IAAK,OAAO,CAAC,WAAmB,CAAC;QAChD,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC7B,IAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,IAAI,EAAC;gBACtG,QAAQ,CAAC,QAAQ,CAAC,GAAG;oBACpB,QAAQ,EAAE,EAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,gBAAgB,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,gBAAgB,EAAE;oBAC/G,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM;iBAChC,CAAC;gBACF,IAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,KAAK,IAAI,EAAC;oBAC1C,QAAQ,CAAC,QAAQ,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;iBACvC;aACD;iBACI,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI;gBAC1E,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;gBAE1D,QAAQ,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;SACxC;QACD,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,qBAAqB,CAAC,OAAY;QACjC,IAAI,QAAQ,GAAG,IAAK,OAAO,CAAC,WAAmB,CAAC;QAChD,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC7B,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CACnD,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,QAAQ,CACjD,CAAC,CAAC,gBAAgB;YACnB,IAAG,GAAG,EAAC;gBACN,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI;oBACrE,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;oBAE9D,QAAQ,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACnC,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC1B;iBACG;gBACH,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI;oBACrE,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;oBAEnE,QAAQ,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;aACxC;SACD;QACD,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,uBAAuB,CAAC,OAAY;QACnC,IAAI,QAAQ,GAAG,IAAK,OAAO,CAAC,WAAmB,CAAC;QAChD,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;YAC5C,IAAG,GAAG,EAAC;gBACN,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI;oBACrE,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;oBAEhE,QAAQ,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;aACnC;iBACG;gBACH,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI;oBACrE,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;oBAErE,QAAQ,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;aACxC;SAED;QACD,OAAO,QAAQ,CAAC;IACjB,CAAC;;0EArUW,aAAa;iGAAb,aAAa,WAAb,aAAa,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;ACnB+B;AACV;AAE0B;AAI7D,MAAM,IAAI;IAMb;;;OAGG;IACH,YAAY,MAAqB,EAAE,WAAoB,KAAK,EAAE,yBAAkC,KAAK;QATrG,gBAAW,GAAiB,EAAE,CAAC;QA2HvB,+BAA0B,GAAG,IAAI,uEAAe,EAAyB,CAAC;QAQxE,0BAAqB,GAAG,IAAI,uEAAe,EAAoB,CAAC;QAzHtE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;IACzD,CAAC;IAED;;OAEG;IACU,QAAQ,CAAC,IAAiB,EAAE,SAAqB,IAAI;;YAC9D,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;gBAC3B,OAAO,KAAK,CAAC;YACjB,IAAG,IAAI,CAAC,sBAAsB,EAAC;gBAC3B,IAAG,MAAM,IAAI,IAAI;oBACb,MAAM,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC/C;oBACA,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC3C,IAAG,GAAG,IAAI,CAAC,CAAC;wBACR,OAAO,KAAK,CAAC;oBACjB,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACpD;aACJ;iBACG;gBACA,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;oBAC1B,MAAM,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACtD;YACD,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAED;;OAEG;IACU,WAAW,CAAC,IAAiB,EAAE,QAAgB,GAAG;;YAC3D,MAAM,yEAAK,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,CAAC;KAAA;IAED;;OAEG;IACI,SAAS,CAAC,IAAU;QACvB,IAAG,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC;YACzB,IAAG,IAAI,CAAC,sBAAsB,EAAC;gBAC3B,IAAI,UAAU,GAAG,IAAI,sDAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9C,OAAO,UAAU,CAAC;aACrB;iBACG;gBACA,IAAI,UAAU,GAAG,IAAI,sDAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,GAAI,CAAC,UAAU,CAAC,CAAC;gBACjC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9C,OAAO,UAAU,CAAC;aACrB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACI,WAAW,CAAC,UAAsB;QACrC,IAAG,IAAI,CAAC,sBAAsB,EAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACrC;aACG;YACA,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,UAAU,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IAEM,gBAAgB,CAAC,UAAsB,EAAE,kBAA0B,KAAK,EAAE,kBAA0B,IAAI;QAC3G,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,WAAW,EAAC;YAClC,IAAG,UAAU,KAAK,SAAS,EAAC;gBACxB,aAAa,GAAC,IAAI,CAAC;gBACnB,MAAM;aACT;YACD,eAAe,EAAE,CAAC;SACrB;QACD,IAAG,aAAa,EAAC;YACb,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;YAC7D,IAAG,eAAe;gBAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;YAC5H,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,EAAC,CAAC,CAAC,CAAC;SAC9C;QACD,IAAG,eAAe;YACd,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAEM,iBAAiB,CAAC,eAAe,GAAG,IAAI;QAC3C,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1C,OAAM,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAC;YAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3D;QACD,IAAG,eAAe,IAAI,OAAO;YACzB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED;;OAEG;IACI,aAAa,CAAC,IAAU;QAC3B,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,WAAW,EAAC;YACnC,IAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,IAAI;gBACrC,OAAO,IAAI,CAAC;SACnB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAGM,kBAAkB,CAAC,OAAuC;QAC7D,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IACO,oBAAoB,CAAC,KAA4B;QACrD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAGM,aAAa,CAAC,OAAkC;QACnD,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IACM,eAAe,CAAC,KAAuB;QAC1C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;CACJ;;;;;;;;;;;;;ACnJD;AAAA;AAAA,IAAY,WAGX;AAHD,WAAY,WAAW;IACnB,+DAAe;IACf,2EAAqB;AACzB,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;;;;;;;;;;;;;ACHD;AAAA;AAAA,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IACxB,6DAAS;IACT,6DAAS;AACb,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,QAG3B;;;;;;;;;;;;;;;;;ACDD,MAAM,MAAM;IAMX,YAAY,KAAU;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;CACD;AAKM,MAAM,cAAc;IAKxB;QAHM,cAAS,GAAa,EAAE,CAAC;QACzB,cAAS,GAAa,EAAE,CAAC;IAEf,CAAC;IAEnB;;OAEG;IACI,UAAU,CAAC,KAAa;QAC9B,IAAG,KAAK,IAAI,IAAI;YACf,OAAO;QACR,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACI,OAAO,CAAC,YAAoB;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAClC,IAAG,MAAM,IAAI,IAAI;YAChB,OAAO,IAAI,CAAC;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QAC9C,OAAO,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;IAED;;OAEG;IACI,OAAO;QACb,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAClC,IAAG,MAAM,IAAI,IAAI;YAChB,OAAO,IAAI,CAAC;QACb,OAAO,MAAM,CAAC,KAAK,CAAC;IACrB,CAAC;IAED;;OAEG;IACI,KAAK;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;;4EA7CW,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdqE;AAC7C;AACkE;AAMxC;;;;;;;;;;;;;;;;;;IC6E/C,uEAA0D;IAAA,qEAAU;IAAA,4DAAO;;;IAEvE,uEAAM;IAAA,oEAAS;IAAA,4DAAO;;;IAc1B,uEAAqD;IAAA,kEAAO;IAAA,mEAAsC;IAAC,mEAAO;IAAA,4DAAO;;;IAE7G,uEAAM;IAAA,mEAAQ;IAAA,mEAAsC;IAAC,mEAAO;IAAA,4DAAO;;;IAIvE,uEAAiD;IAAA,sEAAW;IAAA,4DAAO;;;IAE/D,uEAAM;IAAA,sEAAW;IAAA,4DAAO;;;IAI5B,uEAA6D;IAAA,4EAAiB;IAAA,4DAAO;;;IAEjF,uEAAM;IAAA,4EAAiB;IAAA,4DAAO;;;;IAgC9C,6EAA0K;IAAvG,sUAA+B;IAC9F,6EACA;IAAA,2EAAoB;IAAA,+DAAI;IAAA,4DAAO;IACnC,4DAAS;;IAHD,mHAA0D;;;;IAK9D,6EAAuC;IAA/B,0UAA8B;IAClC,4EACJ;IAAA,4DAAS;;;;IAEb,6EAAqD;IAA7C,qSAAS,yBAAiB,IAAC;IAC/B,0EACJ;IAAA,4DAAS;;;IAQC,iFAA8D;IAAA,uDAAY;IAAA,4DAAa;;;IAAvC,0EAAa;IAAC,0DAAY;IAAZ,wFAAY;;;;IAiHhG,0EAAkG;IAApC,gUAA6B,KAAK,IAAC;IAC7F,0EAAyC;IACrC,0EAAkB;IACd,wEAAO;IAAA,oEAAS;IAAA,4DAAQ;IACxB,4EAAsF;IAAnD,wVAA0B;IAA7D,4DAAsF;IAC1F,4DAAM;IACN,6EAAqD;IAA/B,yTAAwB,KAAK,IAAC;IAAC,iEAAC;IAAA,4DAAS;IAC/D,0EAA4B;IACxB,6EAA0D;IAA/B,yTAAwB,KAAK,IAAC;IAAC,iEAAK;IAAA,4DAAS;IACxE,8EAAkE;IAAtC,mSAAS,2CAA2B,IAAC;IAAC,oEAAQ;IAAA,4DAAS;IACvF,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IARyC,0DAA0B;IAA1B,yFAA0B;;;IAqBjE,0EAAsI;;;IAA/C,oGAAmC;;;IAEtH,wEAAiB;IAAA,iHAAsD;IAAA,4DAAI;;;;IAdvF,0EAAoG;IAAlC,uUAAiC;IAC/F,0EAAwC;IACpC,qEAAI;IAAA,0EAAe;IAAA,4DAAK;IACxB,oEAAG;IAAA,oLAAyH;IAAA,4DAAI;IAChI,wEAAO;IACH,uEAAM;IAAA,6FAAkC;IAAA,4DAAO;IAC/C,4EAAyG;IAAlG,yUAAqC;IAA5C,4DAAyG;IAC7G,4DAAQ;IACR,yEAAO;IACH,wEAAM;IAAA,uEAAW;IAAA,4DAAO;IACxB,6EAAuG;IAAhG,0UAAqC;IAA5C,4DAAuG;IAC3G,4DAAQ;IACR,iIAAsI;IACtI,mNAEc;IACd,2EAA4B;IACxB,8EAA2D;IAA/B,mUAA8B;IAAC,mEAAO;IAAA,4DAAS;IAC3E,8EAAyD;IAA7B,iUAA4B;IAAC,iEAAK;IAAA,4DAAS;IACvE,8EAAoF;IAA5B,gUAA2B;IAAC,gEAAI;IAAA,4DAAS;IACrG,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAhBmE,0DAA2C;IAA3C,0GAA2C;IAI3C,0DAAyC;IAAzC,wGAAyC;IAE/F,0DAAuB;IAAvB,yFAAuB;IAOtB,0DAA2B;IAA3B,4FAA2B;;ADxSxC,MAAM,gBAAgB;IAwH5B,YAAoB,cAA8B,EAAU,aAA4B,EAAS,cAA8B,EAAU,aAA4B,EAAS,iBAAoC;QAA9L,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAS,sBAAiB,GAAjB,iBAAiB,CAAmB;QAtHlN,sBAAsB;QACZ,YAAO,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC7B,aAAQ,GAAG,IAAI,0DAAY,EAAU,CAAC;QACtC,aAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC9B,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC/B,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1B,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC/B,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC/B,gBAAW,GAAE,IAAI,0DAAY,EAAE,CAAC;QAE1C,sBAAsB;QACZ,kBAAa,GAAG,IAAI,0DAAY,EAAE,CAAC;QACnC,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QACpC,wBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;QACzC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAClC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAClC,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1B,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1B,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE1C,sBAAsB;QACZ,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAChC,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC5B,YAAO,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC7B,gBAAW,GAAG,IAAI,0DAAY,EAAU,CAAC;QACzC,cAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEzC,sBAAsB;QACZ,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEhD,eAAe;QACL,oBAAe,GAAG,IAAI,0DAAY,EAAE,CAAC;QACrC,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAI9C,SAAI,GAAG,iBAAiB,CAAC;QACzB,iBAAY,GAAG,iBAAiB,CAAC;QAEjC,sBAAiB,GAAG,EAAE,CAAC;QACvB,sBAAiB,GAAY,KAAK,CAAC;QAEnC,4BAAuB,GAAY,KAAK,CAAC;QACzC,0BAAqB,GAAY,KAAK,CAAC;QACvC,0BAAqB,GAAY,KAAK,CAAC;QAEvC,sBAAiB,GAAY,KAAK,CAAC;QACnC,mBAAc,GAAY,KAAK,CAAC;QAChC,yBAAoB,GAAY,KAAK,CAAC;QACtC,kBAAa,GAAY,KAAK,CAAC;QAC/B,iBAAY,GAAY,KAAK,CAAC;QAC9B,sBAAiB,GAAY,KAAK,CAAC;QACnC,6BAAwB,GAAY,KAAK,CAAC;QAC1C,uCAAkC,GAAY,KAAK,CAAC;QACpD,sBAAiB,GAAY,KAAK,CAAC;QAEnC,wBAAmB,GAAW,EAAE,CAAC;QACjC,mBAAc,GAAY,KAAK,CAAC;QAChC,uBAAkB,GAAuB,IAAI,yEAAkB,EAAE,CAAC;QAClE,oBAAe,GAAW,EAAE,CAAC;QAE7B,oBAAe,GAAY,IAAI,CAAC;QAEhC,qBAAgB,GAAqB,IAAI,uEAAgB,EAAE,CAAC;QAC5D,qBAAgB,GAAqB,IAAI,uEAAgB,EAAE,CAAC;QAI5D,aAAQ,GAAY,KAAK,CAAC;QAG1B,iBAAY,GAAgB,IAAI,0DAAW,EAAE,CAAC;QAC9C,oBAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAExC,gCAA2B,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QAKvC;;WAEG;QACH,qBAAgB,GAAG;YAClB,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YAC3B,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC5B,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;YACjC,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC1B,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAClB,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAClB,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACpB,CAAC;YACD,GAAG,EAAE,CAAC,CAAQ,EAAE,EAAE;gBACjB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACrB,CAAC;SACD;QAGA,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC,iBAAiB,EAAE,CAAC;QAC5D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,cAAc,EAAE,CAAC;QACtD,IAAI,CAAC,oBAAoB,GAAG,cAAc,CAAC,oBAAoB,EAAE,CAAC;QAClE,IAAI,CAAC,wBAAwB,GAAG,cAAc,CAAC,iBAAiB,EAAE,CAAC;QACnE,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAC7D,CAAC;IAED,IAAI,CAAC,IAAI;QACR,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;YACxB,OAAO;QACR,IAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;YACnC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC;YAC/D,OAAO;SACP;QACD,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC3B,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;YACzB,OAAO,CAAC,CAAC,EAAC,EAAE;gBACX,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC;QACH,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACT,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC7B,CAAC;IAEO,MAAM,CAAC,IAAY;QAC1B,IAAG,IAAI,CAAC,MAAM,IAAI,CAAC;YAClB,OAAO,KAAK,CAAC;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC;IAC/E,CAAC;IAED,YAAY;QACX,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;IAC3C,CAAC;IAED,UAAU,CAAC,IAAI;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC;IACtC,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9B,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE;YACzC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE;YAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,GAAG,CAAC,CAAgB,EAAC,EAAE;YACtC,IAAG,CAAC,IAAI,CAAC,eAAe;gBACvB,OAAO;YACR,IAAG,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC;gBAC5C,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChC;YACD,IAAG,CAAC,CAAC,GAAG,KAAK,QAAQ;gBACpB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;QACD,IAAG,gEAAgE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAC;YAC7F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACrB;IACF,CAAC;IAED,iBAAiB,CAAC,IAAY,EAAE,cAAc;QAC7C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,2BAA2B,GAAG,cAAc,CAAC;IACnD,CAAC;IAED,WAAW;QACV,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,aAAa;QACZ,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,aAAa;QACZ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;IAED,eAAe;QACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAG,UAAU,CAAC,MAAM,IAAI,CAAC,EAAC;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO;SACP;QACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAC5E,IAAI,GAAG,GAAQ,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC,CAAC;QACxD,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACpD,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/C,IAAI,CAAC,2BAA2B,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;IAED,2BAA2B,CAAC,WAAmB;QAC9C,IAAI,GAAG,GAAG,6CAA6C;QACvD,IAAI,QAAQ,GAAG,iEAAiE,GAAG,WAAW,WAAW,eAAe;QACxH,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;IACrC,CAAC;IAED,wBAAwB;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3C,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACpD,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,kBAAkB;QACjB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QACrC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;IACxD,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,eAAe;QACd,IAAI,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAQ,CAAC;QACjE,QAAQ,CAAC,MAAM,EAAE,CAAC;QAClB,QAAQ,CAAC,iBAAiB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAErC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE7B,KAAK,CAAC,qBAAqB,CAAC,CAAC;IAC9B,CAAC;IAED,YAAY;QACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAEK,WAAW;;YAChB,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;YACrC,IAAG,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAC;gBAC/C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;gBAClE,OAAO;aACP;YACD,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnF,+EAAW,CAAC,IAAI,CAAC,IAAI,GAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7B,CAAC;KAAA;IAEK,mBAAmB;;YACxB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACnC,CAAC;KAAA;IAED,oBAAoB;QACnB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;IACpC,CAAC;IAEK,WAAW;;YAChB,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACvF,IAAG,GAAG,IAAI,IAAI,EAAC;gBACd,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;gBAClE,OAAO;aACP;YACD,+EAAW,CAAC,IAAI,CAAC,IAAI,GAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7B,CAAC;KAAA;IAEK,mBAAmB;;YACxB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACnC,CAAC;KAAA;IAED,oBAAoB;QACnB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,qBAAqB;QACpB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;IACrC,CAAC;IAED,sBAAsB;QACrB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;IACtC,CAAC;IAED,qBAAqB;QACpB,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAChE,CAAC;IAED,kBAAkB;QACjB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC1D,CAAC;IAED,wBAAwB;QACvB,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IACtE,CAAC;IAED,4BAA4B;QAC3B,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACvE,CAAC;IAED,mBAAmB;QAClB,gDAAgD;QAChD,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;QAClF,IAAG,CAAC,IAAI,CAAC,kCAAkC;YAC1C,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,kBAAkB;QACjB,kDAAkD;QAClD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACvF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,kCAAkC,CAAC;QACxE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAED,mBAAmB;QAClB,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAChE,CAAC;IAEK,WAAW,CAAC,MAAe,IAAI;;YACpC,IAAG,GAAG,EAAC;gBACN,IAAI,CAAC,gBAAgB,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACxG,IAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI;oBAC/B,OAAO;gBACR,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;gBAClD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;gBAC1C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC9D;iBACG;gBACH,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACtC,IAAI,CAAC,gBAAgB,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3F,IAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI;oBAC/B,OAAO;gBACR,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;gBAClD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;gBAC1C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC9D;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC3B,CAAC;KAAA;IAED,YAAY;QACX,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,iBAAiB;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;;gFAxXW,gBAAgB;gGAAhB,gBAAgB;;;;;;;;;QCf7B,yEAAQ;QACJ,yEAAiB;QACb,wEAAqB;QACjB,qEAAI;QACA,2EAA4I;QAArI,uIAAS,kBAAc,IAAC;QAA/B,4DAA4I;QAChJ,4DAAK;QACL,qEAAI;QACA,4EAA8E;QAC1E,iEACJ;QAAA,4DAAS;QACT,oFAA8B;QAC1B,6EAA8G;QAAxF,yIAAS,sBAAkB,0CAA0C,oBAAiB,IAAC;QACzG,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QACzB,4DAAS;QACT,6EAA+C;QAAzB,yIAAS,kBAAc,IAAC;QAC1C,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QAC1B,4DAAS;QACT,4EAAkE;QAC9D,+EAAmK;QAAtJ,sRAAS,aAAU,IAAC;QAAjC,4DAAmK;QACnK,uEACJ;QAAA,4DAAQ;QACR,6EAAqD;QAA/B,yIAAS,4BAAoB,IAAC;QAChD,wEAAM;QAAA,6EAAiB;QAAA,4DAAO;QAClC,4DAAS;QACT,oEAAiB;QACjB,6EAAgD;QAA1B,yIAAS,uBAAe,IAAC;QAC3C,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAS;QACT,oEAAiB;QACjB,8EAAgG;QAC5F,oEACJ;QAAA,4DAAS;QACT,sFAAgC;QAC5B,6EAAsD;QAAhC,yIAAS,yBAAqB,IAAC;QACjD,wEAAM;QAAA,yEAAa;QAAA,4DAAO;QAC9B,4DAAS;QACT,6EAAsD;QAAhC,yIAAS,yBAAqB,IAAC;QACjD,wEAAM;QAAA,yEAAa;QAAA,4DAAO;QAC9B,4DAAS;QACb,4DAAW;QACX,8EAA8F;QAC1F,mEACJ;QAAA,4DAAS;QACT,sFAA+B;QAC3B,6EAAkD;QAA5B,yIAAS,qBAAiB,IAAC;QAC7C,wEAAM;QAAA,wEAAY;QAAA,4DAAO;QAC7B,4DAAS;QACb,4DAAW;QACf,4DAAW;QACf,4DAAK;QACL,sEAAI;QACA,8EAA8E;QAC1E,kEACJ;QAAA,4DAAS;QACT,sFAA8B;QAC1B,6EAAqD;QAA/B,yIAAS,wBAAoB,IAAC;QAChD,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAS;QACT,6EAAsD;QAAhC,yIAAS,yBAAqB,IAAC;QACjD,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QACtB,4DAAS;QACT,6EAAsD;QAAhC,yIAAS,uBAAmB,IAAG;QACjD,wEAAM;QAAA,+DAAG;QAAA,4DAAO;QACpB,4DAAS;QACT,6EAAoD;QAA9B,yIAAS,uBAAmB,IAAC;QAC/C,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACvB,4DAAS;QACT,6EAA4C;QAAtB,yIAAS,eAAW,IAAC;QACvC,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAS;QACT,6EAA4C;QAAtB,yIAAS,eAAW,IAAC;QACvC,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAS;QACT,oEAAiB;QACjB,6EAA8G;QAAxF,yIAAS,sBAAkB,wCAAwC,uBAAmB,IAAC;QACzG,wEAAM;QAAA,uEAAW;QAAA,4DAAO;QAC5B,4DAAS;QACb,4DAAW;QACf,4DAAK;QACL,sEAAI;QACA,8EAA8E;QAC1E,kEACJ;QAAA,4DAAS;QACT,sFAA8B;QAC1B,6EAAyF;QAAnE,yIAAS,gCAA4B,+BAA2B,CAAC,IAAC;QACpF,iHAA2E;QAC3E,2MAEc;QAClB,4DAAS;QACT,6EAAkD;QAA5B,yIAAS,qBAAiB,IAAC;QAC7C,wEAAM;QAAA,yEAAa;QAAA,4DAAO;QAC9B,4DAAS;QACT,6EAA8C;QAAxB,yIAAS,iBAAa,IAAC;QACzC,wEAAM;QAAA,mEAAO;QAAA,4DAAO;QACxB,4DAAS;QACT,6EAA+C;QAAzB,yIAAS,kBAAc,IAAC;QAC1C,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QACzB,4DAAS;QACT,oEAAiB;QACjB,6EAAwD;QAAlC,yIAAS,2BAAuB,IAAC;QACnD,iHAAiH;QACjH,2MAEc;QAClB,4DAAS;QACT,6EAAqD;QAA/B,yIAAS,wBAAoB,IAAC;QAChD,iHAAmE;QACnE,2MAEc;QAClB,4DAAS;QACT,6EAA2D;QAArC,yIAAS,8BAA0B,IAAC;QACtD,mHAAqF;QACrF,6MAEc;QAClB,4DAAS;QACT,qEAAiB;QACjB,8EAAiD;QAA3B,0IAAS,oBAAgB,IAAC;QAC5C,yEAAM;QAAA,uEAAU;QAAA,4DAAO;QAC3B,4DAAS;QACb,4DAAW;QACf,4DAAK;QACL,uEAAI;QACA,+EAA8E;QAC1E,mEACJ;QAAA,4DAAS;QACT,uFAA8B;QAC1B,8EAAwD;QAAlC,0IAAS,2BAAuB,IAAC;QACnD,yEAAM;QAAA,wFAA2B;QAAA,4DAAO;QAC5C,4DAAS;QACT,0EAA+E;QAC3E,yEAAM;QAAA,mEAAM;QAAA,4DAAO;QACvB,4DAAI;QACJ,8EAAwD;QAAlC,0IAAS,2BAAuB,IAAC;QACnD,yEAAM;QAAA,+EAAkB;QAAA,4DAAO;QACnC,4DAAS;QACT,0EAAsF;QAClF,yEAAM;QAAA,yEAAY;QAAA,4DAAO;QAC7B,4DAAI;QACR,4DAAW;QACf,4DAAK;QACT,4DAAK;QACL,4EAAuB;QACnB,qFAAwK;QAAjF,kJAAU,kCAA8B,IAAC;QAAwC,6EAAgB;QAAA,4DAAe;QACvM,qFAAsG;QAAjE,kJAAU,yBAAqB,IAAC;QAAiC,2EAAc;QAAA,4DAAe;QACnI,uHAGS;QACT,6MAIc;QACd,uHAES;QACb,4DAAM;QACV,4DAAM;QACN,4EAAwB;QACpB,0EAAqB;QACjB,uEAAI;QACA,uFAAqD;QACjD,mFAAiF;QAArE,kKAAmB,uBAAmB,IAAC;QACjD,+HAAuF;QACzF,4DAAa;QACjB,4DAAiB;QACrB,4DAAK;QACL,2EAAmB;QACf,6EAA2C;QAArC,wIAAS,iBAAa,IAAC;QAAc,qEAAkC;QAAA,4DAAO;QACxF,4DAAK;QACL,uEAAI;QACA,6EAA4C;QAAtC,wIAAS,kBAAc,IAAC;QAAc,qEAAmC;QAAA,4DAAO;QAC1F,4DAAK;QACL,2EAAmB;QACf,6EAAyC;QAAnC,wIAAS,eAAW,IAAC;QAAc,qEAA+B;QAAA,4DAAO;QACnF,4DAAK;QACL,uEAAI;QACA,6EAAyC;QAAnC,wIAAS,eAAW,IAAC;QAAc,qEAA2B;QAAA,4DAAO;QAC/E,4DAAK;QACL,2EAAmB;QACf,6EAAkD;QAA5C,wIAAS,wBAAoB,IAAC;QAAc,qEAA2B;QAAA,4DAAO;QACxF,4DAAK;QACL,uEAAI;QACA,6EAAmD;QAA7C,wIAAS,yBAAqB,IAAC;QAAc,qEAA4B;QAAA,4DAAO;QAC1F,4DAAK;QACL,2EAAmB;QACf,6EAAiD;QAA3C,wIAAS,uBAAmB,IAAC;QAAc,qEAA4B;QAAA,4DAAO;QACxF,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAS;QACT,4EAAyH;QAAnF,iJAAc,iBAAa,IAAC;QAC9D,4EAA4B;QACxB,0EAAiB;QAAA,yDAAqB;QAAA,4DAAI;QAC1C,4EAA4B;QACxB,+EAAmD;QAAxB,0IAAS,iBAAa,IAAC;QAAC,+DAAE;QAAA,4DAAS;QAC9D,+EAAsD;QAA1B,0IAAS,mBAAe,IAAC;QAAC,gEAAG;QAAA,4DAAS;QACtE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EAA0I;QAApG,iJAAc,4BAAwB,IAAC;QACzE,4EAAuC;QACnC,6EAAuC;QAAA,+EAAkB;QAAA,4DAAO;QAChE,2EAA2B;QACvB,uEAAI;QAAA,0EAAqB;QAAA,mEAAM;QAAA,4DAAI;QAAC,sEAAG;QAAA,2EAAc;QAAA,4DAAI;QAAA,4DAAK;QAC9D,uEAAI;QAAA,0EAAqB;QAAA,mEAAM;QAAA,4DAAI;QAAC,sEAAG;QAAA,4EAAe;QAAA,4DAAI;QAAA,4DAAK;QAC/D,uEAAI;QAAA,0EAAqB;QAAA,gEAAG;QAAA,4DAAI;QAAI,sEAAG;QAAA,6EAAgB;QAAA,4DAAI;QAAA,4DAAK;QAChE,uEAAI;QAAA,0EAAqB;QAAA,mEAAM;QAAA,4DAAI;QAAC,sEAAG;QAAA,6EAAgB;QAAA,4DAAI;QAAA,4DAAK;QAChE,uEAAI;QAAA,0EAAqB;QAAA,mEAAM;QAAA,4DAAI;QAAC,sEAAG;QAAA,8EAAiB;QAAA,4DAAI;QAAA,4DAAK;QACjE,uEAAI;QAAA,0EAAqB;QAAA,mEAAM;QAAA,4DAAI;QAAC,sEAAG;QAAA,wEAAW;QAAA,4DAAI;QAAA,4DAAK;QAC3D,uEAAI;QAAA,0EAAqB;QAAA,mEAAM;QAAA,4DAAI;QAAC,sEAAG;QAAA,wEAAW;QAAA,4DAAI;QAAA,4DAAK;QAC/D,4DAAK;QACL,+EAAyD;QAAnC,0IAAS,4BAAwB,IAAC;QAAC,qEAA4B;QAAA,4DAAS;QAClG,4DAAM;QACV,4DAAM;QACN,4EAAsI;QAAhG,iJAAc,0BAAsB,IAAC;QACvE,4EAAmC;QAC/B,0EAAiB;QAAA,0EAAa;QAAA,4DAAI;QAClC,0EAAO;QACH,yEAAM;QAAA,qFAAwB;QAAA,4DAAO;QACrC,8EAA4E;QAArD,sNAAoD;QAA3E,4DAA4E;QAChF,4DAAQ;QACR,0EAAO;QACH,yEAAM;QAAA,qFAAwB;QAAA,4DAAO;QACrC,8EAAkE;QAA3C,4MAA0C;QAAjE,4DAAkE;QACtE,4DAAQ;QACR,0EAAO;QACH,yEAAM;QAAA,oFAAuB;QAAA,4DAAO;QACpC,8EAAiE;QAA1C,2MAAyC;QAAhE,4DAAiE;QACrE,4DAAQ;QACR,0EAAO;QACH,yEAAM;QAAA,gFAAmB;QAAA,4DAAO;QAChC,8EAAuE;QAAhD,iNAA+C;QAAtE,4DAAuE;QAC3E,4DAAQ;QACR,0EAAO;QACH,yEAAM;QAAA,yEAAY;QAAA,4DAAO;QACzB,8EAAgE;QAAzC,0MAAwC;QAA/D,4DAAgE;QACpE,4DAAQ;QACR,0EAAO;QACH,yEAAM;QAAA,iFAAoB;QAAA,4DAAO;QACjC,8EAAuJ;QAA3C,4MAA0C;QAAtJ,4DAAuJ;QAC3J,4DAAQ;QACR,4EAA4B;QACxB,+EAA4D;QAAjC,0IAAS,0BAAsB,IAAC;QAAC,mEAAM;QAAA,4DAAS;QAC3E,+EAAoD;QAAxB,0IAAS,iBAAa,IAAC;QAAC,oEAAO;QAAA,4DAAS;QACpE,+EAAoD;QAAxB,0IAAS,iBAAa,IAAC;QAAC,qEAAQ;QAAA,4DAAS;QACzE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EAAsI;QAAhG,iJAAc,0BAAsB,IAAC;QACvE,4EAAmC;QAC/B,0EAAiB;QAAA,0EAAa;QAAA,4DAAI;QAClC,0EAAO;QACH,yEAAM;QAAA,oFAAuB;QAAA,4DAAO;QACpC,8EAAiE;QAA1C,2MAAyC;QAAhE,4DAAiE;QACrE,4DAAQ;QACR,0EAAO;QACH,yEAAM;QAAA,gFAAmB;QAAA,4DAAO;QAChC,8EAAuE;QAAhD,iNAA+C;QAAtE,4DAAuE;QAC3E,4DAAQ;QACR,0EAAO;QACH,yEAAM;QAAA,iFAAoB;QAAA,4DAAO;QACjC,8EAA4G;QAA3C,4MAA0C;QAA3G,4DAA4G;QAChH,4DAAQ;QACR,4EAA4B;QACxB,+EAA4D;QAAjC,0IAAS,0BAAsB,IAAC;QAAC,mEAAM;QAAA,4DAAS;QAC3E,+EAAyD;QAA7B,0IAAS,gBAAY,KAAK,CAAC,IAAC;QAAC,oEAAO;QAAA,4DAAS;QACzE,+EAAoD;QAAxB,0IAAS,iBAAa,IAAC;QAAC,qEAAQ;QAAA,4DAAS;QACzE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EAA0G;QAA3E,uIAAS,kBAAc,IAAC;QACnD,2EAEM;QACV,4DAAM;QACN,kHAYM;QACN,kHAsBM;;;;;;;;;;;;;QAtT0C,0DAAkB;QAAlB,6EAAkB;QAG1B,0DAA8B;QAA9B,kFAA8B;QAsBZ,2DAAgC;QAAhC,kFAAgC;QAWhC,2DAA+B;QAA/B,kFAA+B;QAWjD,0DAA8B;QAA9B,kFAA8B;QA6B9B,2DAA8B;QAA9B,kFAA8B;QAKvC,0DAAmC;QAAnC,iGAAmC;QAgBnC,2DAAyB;QAAzB,uFAAyB;QAMzB,0DAAsB;QAAtB,oFAAsB;QAMtB,0DAA4B;QAA5B,0FAA4B;QAYnB,0DAA8B;QAA9B,mFAA8B;QAoB5C,2DAAiD;QAAjD,8GAAiD;QACO,0DAA+B;QAA/B,0FAA+B;QACD,0DAA6C;QAA7C,2GAA6C;QAS5G,0DAAc;QAAd,8EAAc;QASS,0DAA4B;QAA5B,yFAA4B;QAClD,0DAAkB;QAAlB,wFAAkB;QA4BD,2DAAqD;QAArD,6GAAqD;QAE/F,0DAAqB;QAArB,sFAAqB;QAOgC,0DAA2D;QAA3D,mHAA2D;QAe7D,2DAAyD;QAAzD,iHAAyD;QAKlG,0DAAoD;QAApD,+GAAoD;QAIpD,0DAA0C;QAA1C,qGAA0C;QAI1C,0DAAyC;QAAzC,oGAAyC;QAIzC,0DAA+C;QAA/C,0GAA+C;QAI/C,0DAAwC;QAAxC,mGAAwC;QAIxD,0DAAoF;QAApF,qJAAoF;QAS3B,0DAAyD;QAAzD,iHAAyD;QAKlG,0DAAyC;QAAzC,oGAAyC;QAIzC,0DAA+C;QAA/C,0GAA+C;QAI/D,0DAAyC;QAAzC,sGAAyC;QASJ,0DAAiD;QAAjD,yGAAiD;QAK/D,0DAAkB;QAAlB,kFAAkB;QAanB,0DAAuB;QAAvB,uFAAuB;;;;;;;;;;;;;;ACpShE;AAAA;AAAA,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,6CAAG;IACH,iDAAK;AACT,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AAED;AACC;AACX;AACI;AACK;AACH;AACH;AACI;AAEkC;AACjB;AACP;AACE;AACK;AAC1B;AAEG;AACT;AAEU;AAC8B;AAEnB;AACqB;AACf;AACG;AACkB;AACN;AACN;AACY;AACA;AACxB;AACM;AACI;AACK;AACA;AACZ;AACwB;AAC9B;AAEC;AACY;AAC2B;AAChD;AACiB;AACX;AAC0B;AACrB;AACY;AAC1B;AACqD;AACG;AACH;AAK7E;;AA4E1B,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,4DAAY;8FAfd;QACV;YACC,OAAO,EAAE,+EAAqB;YAC9B,QAAQ,EAAE,2FAAuB;YACjC,KAAK,EAAE,IAAI;SACX;QACC;YACE,OAAO,EAAE,+EAAqB;YAC9B,QAAQ,EAAE,6EAAmB;SAC9B;QACD;YACE,OAAO,EAAE,uEAAa;YACtB,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC;SACtC;KACH,YAhCS;YACP,uEAAa;YACb,qEAAgB;YAChB,wEAAe;YACf,0DAAW;YACX,kEAAmB;YACnB,+EAAkB;YAClB,6FAAuB;YACvB,8EAAkB;YAClB,oEAAa;YACb,6EAAiB;YACjB,0EAAgB;YAChB,wEAAe;YACf,4EAAiB;YACjB,mEAAiB;YACjB,sEAAY;SACb;oIAmBU,SAAS,mBAvElB,4DAAY;QACZ,sEAAc;QACd,kFAAgB;QAChB,0FAAe;QACf,sGAAmB;QACnB,oFAAa;QACb,mGAAkB;QAClB,4GAAqB;QACrB,oGAAsB;QACtB,oFAAqB;QACrB,8FAAoB;QACpB,iFAAY;QACZ,sGAAmB;QACnB,mGAAkB;QAClB,sFAA0B;QAC1B,gGAAiB;QACjB,uFAAc;QACd,4GAAqB;QACrB,0FAAe;QACf,yEAAe;QACf,sEAAc;QACd,+EAAe;QACf,oFAAoB;QACpB,yHAAyB;QACzB,yGAAuB;QACvB,gGAAoB;QACpB,0FAAoB;QACpB,8FAAc;QACd,4GAAqB;QACrB,uFAAc;QACd,+GAAsB;QACtB,iFAAY;QACZ,2HAAuB;QACvB,8HAAwB;QACxB,2HAAuB,aAGvB,uEAAa;QACb,qEAAgB;QAChB,wEAAe;QACf,0DAAW;QACX,kEAAmB;QACnB,+EAAkB;QAClB,6FAAuB;QACvB,8EAAkB;QAClB,oEAAa;QACb,6EAAiB;QACjB,0EAAgB;QAChB,wEAAe;QACf,4EAAiB;QACjB,mEAAiB;QACjB,sEAAY;;;;;;;;;;;;;ACnHhB;AAAA;AAAA;AAAA;AAAA;AAAyC;AACuB;;AAOzD,MAAM,cAAe,SAAQ,2EAAiB;IALrD;;QAOQ,eAAU,GAAU,IAAI,sDAAK,EAAE,CAAC;KAUvC;IARA,iBAAiB;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,sDAAK,EAAE,CAAC;QACpB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;mGAXW,cAAc;8FAAd,cAAc;QCT3B,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,iJAAa,2BAAyB,IAAC,2FAAe,2BAAuB,IAAtC,iFACzD,uBAAmB,IADsC;QAE9D,qEAAkC;QACtC,4DAAM;QACV,4DAAM;;QARN,iGAAsC;;sHDOzB,cAAc;;;;;;;;;;;;;AER3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAEZ;AACE;AAC8B;AAC9B;AACY;;;;;;;;;;;ICHrD,uEAA0B;IAAA,uDAAyC;IAAA,4DAAO;;;IAAhD,0DAAyC;IAAzC,wHAAyC;;;;IACnE,0EAAmE;IAAxB,4TAAuB;IAAC,kEAA2B;IAAA,4DAAO;;;IAcrF,iFAAmE;IAAA,uDAAyD;IAAA,4DAAa;;;;IAAvF,6EAAgB;IAAC,0DAAyD;IAAzD,gJAAyD;;;;IADhI,iFAAqN;IAA5K,sWAAiC;IACtE,qJAAyI;IAC7I,4DAAa;;;;IAF8G,+FAA+B;IACvH,0DAAiB;IAAjB,0FAAiB;;;;IAEpD,iFAAwN;IAA5K,sWAAiC;IACzE,iFAAqC;IAAA,8DAAG;IAAA,4DAAa;IACrD,iFAAsC;IAAA,+DAAI;IAAA,4DAAa;IAC3D,4DAAa;;;;IAHiH,+FAA+B;IAC7I,0DAAwB;IAAxB,wFAAwB;IACxB,0DAAyB;IAAzB,yFAAyB;;;;IAEzC,iFAAsO;IAAtK,sWAAiC,otBAAwH,CAAC,eAAzH;IAC7F,iFAAqC;IAAA,8DAAG;IAAA,4DAAa;IACrD,iFAAsC;IAAA,+DAAI;IAAA,4DAAa;IAC3D,4DAAa;;;;IAHqI,+FAA+B;IACjK,0DAAwB;IAAxB,wFAAwB;IACxB,0DAAyB;IAAzB,yFAAyB;;;;IAEzC,iFAAqL;IAAtI,uWAAiC,stBAAiG,CAAC,eAAlG;IAC5E,iFAAqC;IAAA,8DAAG;IAAA,4DAAa;IACzD,4DAAa;;;;IAF6H,oGAA0C;IACpK,0DAAwB;IAAxB,wFAAwB;;;IAKpC,iFAA6D;IAAA,uDAAoB;IAAA,4DAAa;;;;IAAhD,2EAAc;IAAC,0DAAoB;IAApB,2FAAoB;;;;IAFzF,qFAAyF;IACrF,iFAA6I;IAAjI,2WAAiC;IACzC,0JAA8F;IAClG,4DAAa;IACjB,4DAAiB;;;;IAHiC,0DAAqD;IAArD,yHAAqD;IAClE,0DAAe;IAAf,yFAAe;;;IAcpC,iFAEyE;IAAA,uDAAoB;IAAA,4DAAa;;;;;IAD1G,ynBAAud;IAC9Y,0DAAoB;IAApB,qFAAoB;;;IAK7F,iFAA2J;IAAA,kEAAO;IAAA,4DAAa;;;IAA/D,2GAA0C;;;IAC1J,iFAA2H;IAAA,uDAAwF;IAAA,4DAAa;;;;;IAA5J,mIAAsD;IAAC,0DAAwF;IAAxF,qLAAwF;;;;IAFvN,iFAA4H;IAAhH,mXAAiC;IACzC,kKAA+K;IAC/K,kKAAgO;IACpO,4DAAa;;;;;IAHiC,sFAA2B;IACxD,0DAAiG;IAAjG,oLAAiG;IAC/E,0DAAmC;IAAnC,yGAAmC;;;IAGlE,iFAAqB;IACjB,wEAAyB;IAC7B,4DAAa;;;;IAhBzB,0EAA6E;IACzE,qFAA0D;IACtD,iFAA0H;IAA9G,kiBAA+E;IACvF,qJAE0G;IAC9G,4DAAa;IACjB,4DAAiB;IACjB,qFAAwD;IACpD,qJAGa;IACb,mOAIc;IAClB,4DAAiB;IACjB,2EAEkD;IAFkG,yPAAwD,KAAK,KAAE;IAG3M,8DACR;IAAA,4DAAO;IACP,2EAAmE;IAAzC,oeAAwC;IAAC,oEAA4B;IAAA,4DAAO;IAC1G,4DAAM;;;;;IAvB8F,0DAA6B;IAA7B,wFAA6B;IAG5F,0DAAuB;IAAvB,iGAAuB;IAIuB,0DAA+B;IAA/B,6FAA+B;IAUxG,0DAA6I;IAA7I,6NAA6I;IAE/I,6GAA6C;;;;IA5B7D,0EAAgL;IAC5K,0EAAqC;IACjC,2EAA4C;IAAA,oEAAS;IAAA,6EAAwH;IAAA,4DAAO;IACpL,sEAAmC;IACnC,0EAAwD;IAA9B,2aAA6B;IAAC,kEAA2B;IAAA,4DAAO;IAC9F,4DAAM;IACN,0EAAsC;IAClC,kIAyBM;IACV,4DAAM;IACV,4DAAM;;;IAhCqE,0DAA0F;IAA1F,mJAA0F;IAKrG,0DAAmB;IAAnB,wFAAmB;;;;IA6BvF,2EAAiH;IAAnC,ibAAkC;IAAC,mEAA4B;IAAA,4DAAO;;;;IAlExJ,0EAAoF;IAChF,sFAAqB;IACjB,6FAA4B;IACxB,kFAAiB;IACb,4EAA4K;IAArK,uXAA0C;IAAjD,4DAA4K;IAChL,4DAAkB;IACtB,4DAA6B;IAC7B,0EAAuC;IACnC,qFAA0D;IACtD,wIAEa;IACb,wIAGa;IACb,wIAGa;IACb,0IAEa;IACjB,4DAAiB;IACjB,kJAIiB;IACrB,4DAAM;IACN,6HAkCM;IACV,4DAAsB;IACtB,8HAAoJ;IACxJ,4DAAM;;;;IA/DyI,0DAA0B;IAA1B,oFAA0B;IAK5I,0DAA0B;IAA1B,oGAA0B;IAG1B,0DAA6B;IAA7B,uGAA6B;IAI7B,0DAAiD;IAAjD,yIAAiD;IAIjD,0DAAgC;IAAhC,0GAAgC;IAIY,0DAA0B;IAA1B,oGAA0B;IAM1C,0DAA6H;IAA7H,2NAA6H;IAoC3K,0DAAiC;IAAjC,2GAAiC;;AD7D7C,MAAM,uBAAuB;IA0BnC;QAvBS,SAAI,GAAY,gEAAO,CAAC,IAAI,CAAC;QAC7B,aAAQ,GAAY,IAAI,CAAC;QACzB,eAAU,GAAY,IAAI,CAAC;QAC3B,qBAAgB,GAAY,KAAK,CAAC;QAClC,sBAAiB,GAAY,IAAI,CAAC;QAClC,yBAAoB,GAAe,EAAE,CAAC;QACtC,sBAAiB,GAAY,KAAK,CAAC;QAEnC,UAAK,GAAW,aAAa,CAAC;QAC9B,gBAAW,GAAY,KAAK,CAAC;QAC7B,aAAQ,GAAW,WAAW,CAAC;QAEjC,eAAU,GAAsB,sEAAU,CAAC;QAC3C,mBAAc,GAAG,MAAM,CAAC,MAAM,CAAC,sEAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,6BAAwB,GAAoC,oFAAwB,CAAC;QACrF,iCAA4B,GAAG,MAAM,CAAC,MAAM,CAAC,oFAAwB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtG,aAAQ,GAAoB,kEAAQ,CAAC;QACrC,iBAAY,GAAG,MAAM,CAAC,MAAM,CAAC,kEAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,YAAO,GAAmB,gEAAO,CAAC;QAClC,gBAAW,GAAG,MAAM,CAAC,MAAM,CAAC,gEAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,aAAQ,GAAoB,kEAAQ,CAAC;QACrC,iBAAY,GAAG,MAAM,CAAC,MAAM,CAAC,kEAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE7D,CAAC;IAEjB,QAAQ;IAER,CAAC;IAED,YAAY,CAAC,MAAkB,EAAE,UAAmB;QACnD,OAAO,sFAAkB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED,0BAA0B,CAAC,QAAkB,EAAE,MAAsB;QACpE,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,kEAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,oFAAwB,CAAC,OAAO,CAAC,CAAC,CAAC,oFAAwB,CAAC,sEAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5N,CAAC;IAED,0BAA0B,CAAC,QAAkB;QAC5C,IAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC;YACvC,QAAQ,CAAC,gBAAgB,GAAG,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,uBAAuB,CAAC,QAAQ;QAC/B,IAAG,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,IAAI,EAAE;YAC9D,QAAQ,CAAC,GAAG,GAAG,cAAc,IAAI,CAAC,KAAK,CAAC,EAAE,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;IAC9D,CAAC;IAED,SAAS,CAAC,QAAkB;QAC3B,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,kEAAc,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED,YAAY,CAAC,QAAkB,EAAE,MAAsB;QACtD,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAC;YAC/B,IAAG,GAAG,KAAK,MAAM,EAAE;gBAClB,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO;aACP;YACD,GAAG,EAAE,CAAC;SACN;IACF,CAAC;IAED,WAAW;QACV,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,QAAkB,CAAC;QACvB,IAAG,IAAI,IAAI,gEAAO,CAAC,IAAI,EAAC;YACvB,QAAQ,GAAG,IAAI,4DAAQ,CAAC,WAAW,EAAC,CAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,IAAI,EAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,MAAM,CAAC,CAAC,CAAC;SACvG;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,OAAO,EAAC;YAC/B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,WAAW,EAAC,CAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,IAAI,CAAC,CAAC,CAAC;SACtE;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,GAAG,EAAC;YAC3B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,WAAW,EAAC,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SACtD;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,IAAI,EAAC;YAC5B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,WAAW,EAAC,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACtD,QAAQ,CAAC,QAAQ,GAAG,kEAAQ,CAAC,KAAK,CAAC;SACnC;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,UAAU,EAAC;YAClC,QAAQ,GAAG,IAAI,4DAAQ,CAAC,WAAW,EAAE,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACvD,QAAQ,CAAC,QAAQ,GAAG,kEAAQ,CAAC,UAAU,CAAC;SACxC;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED,cAAc,CAAC,QAAkB;QAChC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAI,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YAC/C,IAAG,EAAE,KAAK,QAAQ,EAAE;gBACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO;aACP;YACD,GAAG,EAAE,CAAC;SACN;IACF,CAAC;;8FArGW,uBAAuB;uGAAvB,uBAAuB;QCdpC,yEAAyC;QACrC,yEAAmC;QAC/B,0EAA4B;QAAA,uDAAU;QAAA,6EAAgI;QAAA,4DAAO;QAC7K,sEAAK;QACD,qHAA0E;QAC1E,qHAAqG;QACzG,4DAAM;QACV,4DAAM;QACN,yEAA+B;QAC3B,oHAmEM;QACV,4DAAM;QACV,4DAAM;;QA5E8B,0DAAU;QAAV,oFAAU;QAAc,0DAAkG;QAAlG,2JAAkG;QAE3I,0DAAiB;QAAjB,iFAAiB;QACjB,0DAAc;QAAd,8EAAc;QAI0B,0DAA+B;QAA/B,oGAA+B;;;;;;;;;;;;;;ACT1F;AAAA;AAAA;AAAA,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,yCAAK;IACL,2CAAM;IACN,yCAAK;IACL,+CAAQ;IACR,6CAAO;AACX,CAAC,EANW,UAAU,KAAV,UAAU,QAMrB;AAED,IAAY,wBAOX;AAPD,WAAY,wBAAwB;IAChC,6EAAS;IACT,qEAAK;IACL,uEAAM;IACN,qEAAK;IACL,2EAAQ;IACR,yEAAO;AACX,CAAC,EAPW,wBAAwB,KAAxB,wBAAwB,QAOnC;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACJ;AACd;AACS;;;;;;;;;ICetC,iFAAqE;IAAA,uDAA0B;IAAA,4DAAa;;;;IAAtD,0EAAc;IAAC,0DAA0B;IAA1B,iGAA0B;;;IAU/F,iFAA4L;IAAA,uDAA4B;IAAA,4DAAa;;;;IAAzN,qMAAoH;IAA4D,0DAA4B;IAA5B,mGAA4B;;ADlB3O,MAAM,qBAAsB,SAAQ,2EAAiB;IAL5D;;QAOQ,sBAAiB,GAAkB,IAAI,oEAAY,EAAE,CAAC;KAiB7D;IAfA,gBAAgB;QACf,IAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,IAAI,kFAAgB,CAAC,SAAS,CAAC;YACrE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,IAAI,sFAAkB,CAAC,UAAU,CAAC,EAAC;YAC1E,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,GAAG,sFAAkB,CAAC,aAAa,CAAC,CAAC;SAC7E;IACF,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,oEAAY,EAAE,CAAC;QAC3B,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;wHAlBW,qBAAqB;qGAArB,qBAAqB;QCXlC,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,wJAAa,2BAAyB,IAAC,kGAAe,2BAAuB,IAAtC,wFACzD,uBAAmB,IADsC;QAE9D,oEAAqC;QACzC,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,yEAA+B;QAC3B,uEAAK;QACD,2EAA4B;QAAA,kEAAM;QAAA,8EAAkI;QAAA,4DAAO;QAC3K,uEAAK;QACD,qFAA0D;QACtD,kFAA+G;QAAnG,+JAAmB,sBAAkB,SAAE,iBAAa,IAAC;QAC/D,kIAA4G;QAC9G,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,uEAAK;QACD,2EAA4B;QAAA,iFAAqB;QAAA,8EAA0I;QAAA,4DAAO;QAClM,uEAAK;QACD,qFAA0D;QACtD,kFAAgG;QAApF,sKAAmB,iBAAa,IAAC;QAC3C,kIAAqO;QACvO,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlCN,wGAA6C;QAamB,2DAAoG;QAApG,6JAAoG;QAG1E,0DAA4C;QAA5C,uGAA4C;QAC/E,0DAAuB;QAAvB,6FAAuB;QAMC,0DAA4G;QAA5G,qKAA4G;QAGrH,0DAAiD;QAAjD,4GAAiD;QACqD,0DAAyB;QAAzB,+FAAyB;;6HDlBxL,qBAAqB;;;;;;;;;;;;;AEVlC;AAAA;AAAA;AAAA;AAAmD;AAGiB;AAE7D,MAAM,cAAc;IAA3B;QAEI,aAAQ,GAAW,wEAAI,EAAE,CAAC;QAC1B,UAAK,GAAW,SAAS,CAAC;QAC1B,cAAS,GAAY,IAAI,CAAC;QAC1B,uBAAkB,GAAY,KAAK,CAAC;QA4C1B,0BAAqB,GAAG,IAAI,uEAAe,EAAoB,CAAC;QAQhE,6BAAwB,GAAG,IAAI,uEAAe,EAAuB,CAAC;QAQtE,4BAAuB,GAAG,IAAI,uEAAe,EAAsB,CAAC;IAOlF,CAAC;IAjEG,SAAS,CAAC,QAAuB,EAAE,oBAA4B;QAC3D,IAAI,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC;QACxD,IAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,oBAAoB,CAAC;YACvI,OAAO,IAAI,CAAC;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IACnE,CAAC;IAED,YAAY,CAAC,IAAU,EAAE,oBAA6B;QAClD,gEAAgE;QAChE,IAAG,oBAAoB,EAAC;YACpB,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACpC,IAAG,UAAU,IAAI,IAAI,EAAE;gBACnB,IAAG,CAAC,IAAI,CAAC,QAAQ;oBACb,OAAO,IAAI,CAAC;aACnB;SACJ;aACG;YACA,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,IAAG,SAAS,IAAI,IAAI,EAAE;gBAClB,IAAG,IAAI,CAAC,QAAQ;oBACZ,OAAO,IAAI,CAAC;aACnB;SACJ;QACD,IAAI,CAAC,iBAAiB,CAAC,EAAC,OAAO,EAAE,uCAAuC,EAAC,CAAC,CAAC;QAC3E,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,OAAO,CAAC,aAAsB,KAAK;QAC/B,IAAG,UAAU;YACT,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,OAAO;QACH,IAAG,IAAI,CAAC,YAAY,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC3C,IAAG,IAAI,CAAC,WAAW,CAAC;YAChB,IAAI,CAAC,WAAW,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC9C,CAAC;IAED,kBAAkB,CAAC,YAAqB,KAAK,IAAG,CAAC;IAG1C,aAAa,CAAC,OAAkC;QACnD,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IACS,eAAe,CAAC,KAAuB;QAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAGM,gBAAgB,CAAC,OAAqC;QACzD,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IACS,kBAAkB,CAAC,KAA0B;QACnD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAGM,eAAe,CAAC,OAAoC;QACvD,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IACS,iBAAiB,CAAC,KAAyB;QACjD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;CACJ;;;;;;;;;;;;;AC9ED;AAAA;AAAA;AAAA;AAAmJ;AAK1D;;AAIzF,MAAM,UAAU;CAKf;AAKM,MAAM,cAAc;IAwN1B,YAAoB,QAAkC;QAAlC,aAAQ,GAAR,QAAQ,CAA0B;QAtN5C,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;QACtC,6BAAwB,GAAG,IAAI,0DAAY,EAAO,CAAC;QACnD,kBAAa,GAAG,IAAI,0DAAY,EAAqB,CAAC;QAEhE,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,IAAI,CAAC;QACzB,eAAU,GAAG,KAAK,CAAC;QAEnB,eAAU,GAAG,IAAI,CAAC;QAClB,gBAAW,GAAG,IAAI,CAAC;QAMnB,YAAO,GAAG,GAAG,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY;QAC7C,CAAC,CAAC;QAEF,eAAU,GAAG,CAAC,CAAC;QAKf,gBAAW,GAAiB,EAAE,CAAC;IA8L/B,CAAC;IA5LD,aAAa,CAAC,YAAiB,EAAE,OAAY;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;IACpC,CAAC;IAED,YAAY;QACX,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,YAAY;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,WAAW;QACV,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,eAAe,CAAC,aAA4B;QAC3C,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7C,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACrC,CAAC;IAED,cAAc;QACb,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7C,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC/B,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,SAAS,CAAC,OAAe;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAC,GAAG,EAAE;YAC/B,QAAQ,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG;YAC9B,kBAAkB,EAAE,OAAO;SAC3B,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,KAAmB;QAC5B,IAAG,KAAK,CAAC,MAAM,IAAI,CAAC;YACnB,OAAO;QACR,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,IAAY,CAAC,CAAC,EAAE,IAAY,CAAC,CAAC;QACvC,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAC;YAChC,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACrE;QAED,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QACd,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QAEd,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACtC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC;QAEF,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;QAEzB,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5E,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9E,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAC;YAChC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE3B,IAAI,MAAM,GAAG,YAAY,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;YACtD,IAAI,MAAM,GAAG,YAAY,GAAG,MAAM,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;YAEvD,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC9E,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC5C,IAAG,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAC;oBAC7C,OAAO;wBACN,IAAI,EAAE,SAAS,CAAC,iBAAiB,EAAE,CAAC,QAAQ;wBAC5C,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,UAAU,EAAE,IAAI,CAAC,UAAU;wBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;qBACjB;iBACD;qBACI,IAAG,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAC;oBAChD,OAAO;wBACN,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,EAAE,EAAE,SAAS,CAAC,iBAAiB,EAAE,CAAC,QAAQ;wBAC1C,UAAU,EAAE,IAAI,CAAC,UAAU;wBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;qBACjB;iBACD;gBACD,OAAO,IAAI,CAAC;YACb,CAAC,CAAC;YACF,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3B;QACD,KAAI,IAAI,UAAU,IAAI,eAAe,EAAC;YAErC,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1F,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;YAExF,IAAG,KAAK,IAAI,KAAK,EAAC;gBACjB,IAAI,cAAc,GAAG,KAAK,CAAC;gBAC3B,IAAI,cAAc,GAAG,KAAK,CAAC;gBAC3B,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAE,EAAE;oBACzB,cAAc,GAAG,IAAI,CAAC;oBACtB,IAAG,cAAc,EAAC;wBACjB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAC7E,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAE,OAAO,EAAC,CAAC,EAAE,YAAY,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAC,CAAC,EAAE,YAAY,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;qBACxJ;gBACF,CAAC,CAAC;gBACF,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAE,EAAE;oBACzB,cAAc,GAAG,IAAI,CAAC;oBACtB,IAAG,cAAc,EAAC;wBACjB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAC7E,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAE,OAAO,EAAC,CAAC,EAAE,YAAY,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAC,CAAC,EAAE,YAAY,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;qBACxJ;gBACF,CAAC,CAAC;aACF;SACD;QACD,OAAO,UAAU,CAAC;IACnB,CAAC;IAED,YAAY,CAAC,cAA6B,EAAE,cAA6B,EAAE,aAAsB,KAAK,EAAE,aAA0B,EAAE,EAAE,QAAgB,EAAE;QACvJ,IAAI,OAAO,GAA2C,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,qGAAmB,CAAC,CAAC;QACjH,IAAI,CAAC,GAAwC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAEzF,IAAI,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;QACpH,IAAG,SAAS,IAAI,IAAI,EAAC;YACpB,CAAC,CAAC,OAAO,EAAE,CAAC;YACZ,OAAO,KAAK,CAAC;SACb;QACD,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;QAClC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,QAAQ,CAAC,eAAe,GAAG,SAAS,CAAC;QACvC,CAAC,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QAEnC,CAAC,CAAC,QAAQ,CAAC,gBAAgB,GAAG,GAAG,EAAE;YAClC,CAAC,CAAC,OAAO,EAAE,CAAC;QACb,CAAC;QAED,CAAC,CAAC,QAAQ,CAAC,cAAc,GAAG,cAAc,CAAC;QAC3C,CAAC,CAAC,QAAQ,CAAC,cAAc,GAAG,cAAc,CAAC;QAE3C,OAAO,IAAI;IACZ,CAAC;IAEM,eAAe,CAAI,SAAkB,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,OAAY,EAAE,aAAsB,KAAK;QAC7G,IAAG,SAAS,IAAI,IAAI;YACnB,OAAO;QACR,IAAI,OAAO,GAAI,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QAChE,IAAI,CAAC,GAAS,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC1D,CAAC,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QACnC,IAAI,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;QAE1C,CAAC,CAAC,QAAQ,CAAC,gBAAgB,GAAG,GAAG,EAAE;YAClC,CAAC,CAAC,OAAO,EAAE,CAAC;QACb,CAAC;QAED,IAAG,OAAO,IAAI,IAAI,EAAC;YAClB,KAAI,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBACnC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;aACjC;SACD;QAED,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,GAAE,EAAE;YACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC,CAAC;QACF,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,EAAE;YACzC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;gBAClC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO;gBACvD,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO;aACvD,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC;QAErB,OAAO,CAAC,CAAC,QAAQ,CAAC;IACnB,CAAC;;4EAtNW,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFZ,MAAM;;;;;;;;;;;;;ACfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,SAAS,IAAI;IAChB,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;QACvE,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACnE,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACP,CAAC;AAEM,SAAS,WAAW,CAAC,EAAE,EAAC,EAAE;IAC/B,KAAI,IAAI,CAAC,IAAI,EAAE,EAAC;QACd,IAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAAC,OAAO,KAAK,CAAC;KACrC;IACD,KAAI,IAAI,CAAC,IAAI,EAAE,EAAC;QACd,IAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAAC,OAAO,KAAK,CAAC;KACrC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAEM,SAAS,KAAK,CAAE,IAAI;IACzB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7D,CAAC;AAED,IAAI,iBAAiB,GAAE;IACrB,SAAS,EAAE,SAAS;IACpB,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,QAAQ;IACf,OAAO,EAAE,QAAQ;IACjB,QAAQ,EAAE,QAAQ;CACnB;AAEM,SAAS,kBAAkB,CAAC,MAAkB,EAAE,UAAmB;IACxE,OAAO,UAAU,CAAC,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC/E,CAAC;AAEM,SAAS,QAAQ,CAAC,QAAQ,EAAE,IAAI;IACnC,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,gCAAgC,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1F,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAE3C,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAEnC,OAAO,CAAC,KAAK,EAAE,CAAC;IAEhB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AAEM,SAAS,WAAW,CAAC,QAAQ,EAAE,KAAK;IACzC,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACpC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAE3C,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAEnC,OAAO,CAAC,KAAK,EAAE,CAAC;IAEhB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACrC,CAAC;AAEM,SAAS,WAAW,CAAC,QAAQ,EAAE,GAAG;IAEvC,IAAI,UAAU,GAAG,IAAI,aAAa,EAAE,CAAC;IACrC,IAAI,MAAM,GAAG,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAE/C,kBAAkB;IAClB,IAAG,CAAC,MAAM,CAAC,KAAK,CAAC,qDAAqD,CAAC,EAAC;QACpE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,yCAAyC,CAAC,CAAC;KAC/E;IACD,IAAG,CAAC,MAAM,CAAC,KAAK,CAAC,iDAAiD,CAAC,EAAC;QAChE,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,iDAAiD,CAAC,CAAC;KACvF;IAED,qBAAqB;IACrB,MAAM,GAAG,2CAA2C,GAAG,MAAM,CAAC;IAE9D,wCAAwC;IACxC,IAAI,GAAG,GAAG,mCAAmC,GAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAEzE,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAClC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAE3C,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAEnC,OAAO,CAAC,KAAK,EAAE,CAAC;IAEhB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACrC,CAAC;AAEM,SAAS,KAAK,CAAC,MAAW;IAC/B,IAAI,QAAQ,GAAG,IAAK,MAAM,CAAC,WAAmB,CAAC;IAC/C,KAAK,IAAI,QAAQ,IAAI,MAAM,EAAE;QAC3B,IAAI,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI;YAClE,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;;YAE7C,QAAQ,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;KACzC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAEM,SAAS,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK;IACrD,IAAI,IAAI,GAAG,EAAE;IACb,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QACnC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QACzC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;QAElE,IAAI,CAAC,GAAG,CAAC;YAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QAEzF,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;aACzC,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QAEjF,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC;YAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;aAClD,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC;YAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;KAC1F;IACD,IAAI,KAAK;QAAE,IAAI,IAAI,GAAG;IACtB,OAAO,IAAI;AACb,CAAC;AAEM,SAAS,uBAAuB,CAAC,GAA6B,EAAE,MAAM,EAAE,MAAM;IACnF,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,GAAE,CAAC;IAC/B,GAAG,CAAC,SAAS,EAAE,CAAC;IAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QACnC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QACzC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;QAClE,IAAI,CAAC,GAAG,CAAC,EAAE;YACT,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAClF;QACD,IAAI,CAAC,IAAI,CAAC,EAAE;YACV,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;YACnB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,GAAG,CAAC,MAAM,EAAE;SACb;KACF;IACD,GAAG,CAAC,SAAS,EAAE;AACjB,CAAC;AAGD,CAAC;IAED,sBAAsB;IACtB,SAAS,MAAM,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE;QACzB,IAAI,EAAE,GAAG,EAAE,GAAC,EAAE,CAAC;QAChB,IAAI,EAAE,GAAG,EAAE,GAAC,EAAE,CAAC;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAC,EAAE,GAAC,EAAE,GAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAAA,CAAC;IAEF,oDAAoD;IACnD,wBAAwB,CAAC,SAAiB,CAAC,YAAY,GAAG,EAAE,CAAC;IAC7D,wBAAwB,CAAC,SAAiB,CAAC,WAAW,GAAG,KAAK,CAAC;IAC/D,wBAAwB,CAAC,SAAiB,CAAC,aAAa,GAAG,CAAC,CAAC;IAE9D,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,IAAI,GAAG,wBAAwB,CAAC,SAAS,CAAC,IAAI,CAAC;IACnD,wBAAwB,CAAC,SAAS,CAAC,IAAI,GAAG;QACxC,KAAK,CAAC,IAAI,CACV,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY;YAChC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;SACjC,CAAC,CAAC;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,IAAI,OAAO,GAAG,wBAAwB,CAAC,SAAS,CAAC,OAAO,CAAC;IACzD,wBAAwB,CAAC,SAAS,CAAC,OAAO,GAAG;QAC3C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;IACtC,CAAC,CAAC;IAEF,uBAAuB;IAEtB,wBAAwB,CAAC,SAAiB,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,IAAI;QAE1E,0CAA0C;QAC1C,IAAI,EAAE,EAAE,IAAI,GAAC,CAAC,CAAC;QACf,IAAI,GAAG,GAAC,CAAC,CAAC;QACV,SAAS,OAAO,CAAC,EAAE;YACjB,IAAI,CAAC,EAAE,IAAI,IAAI,GAAC,EAAE,GAAC,EAAE,EACtB;gBAAE,OAAO,GAAG,GAAC,IAAI,CAAC,MAAM,GACvB;oBAAE,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC;oBAC7D,IAAI,IAAI,GAAC,EAAE,GAAC,EAAE;wBAAE,MAAM;oBACtB,GAAG,IAAI,CAAC,CAAC;oBACT,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM;wBAAE,MAAM;oBAC5B,IAAI,IAAI,EAAE,CAAC;iBACX;aACD;YAED,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAC,IAAI,CAAC;YACvB,IAAI,GAAG,IAAE,IAAI,CAAC,MAAM,EACpB;gBAAE,GAAG,GAAG,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,EAAE,EACP;gBAAE,CAAC,GAAG,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC;gBACjB,CAAC,GAAG,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC;aAChB;iBAED;gBAAE,CAAC,GAAG,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,GAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,GAAC,EAAE,GAAC,EAAE,CAAC;gBAChD,CAAC,GAAG,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,GAAE,CAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,GAAC,EAAE,GAAC,EAAE,CAAC;aACjD;YACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAC,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC;QAED,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,GAAE,IAAI,CAAC;QAEtD,mBAAmB;QACnB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAE,CAAC,EACjC;YAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ;YAAE,OAAO;QAC9B,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAE,CAAC,CAAC;QAExC,2BAA2B;QAC3B,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS,EAClC;YAAE,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,GAAG,OAAO,CAAC,GAAG,aAAa,EACjF;gBAAE,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,YAAY,IAAE,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,IAAE,EAAE,CAAC;gBACnF,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,GAAC,CAAC,CAAC;gBAC3B,GACA;oBAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,KAAG,GAAG;wBAAE,OAAO,EAAE,CAAC;oBAC1C,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;iBACxB,QAAQ,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,OAAO,CAAC,GAAG,aAAa,EAAC;gBAC1G,IAAI,IAAI,QAAQ,CAAC;aACjB;SACD;QAED,wBAAwB;QACxB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,QAAQ,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,EAC1C;YAAE,KAAK,IAAI,CAAC,CAAC,UAAU;YACtB,KAAK,QAAQ,CAAC;YACd,KAAK,KAAK,CAAC;YACX,KAAK,OAAO;gBACZ,EAAE,UAAU;oBACX,IAAI,IAAI,CAAC,WAAW,EACpB;wBAAE,KAAK,GAAG,CAAC,CAAC;wBACX,aAAa,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,GAAG,OAAO,CAAC,CAAC;qBAC/E;oBACD,aAAa;yBAEb;wBAAE,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,aAAa,CAAC;wBACpF,IAAI,IAAI,CAAC,SAAS,IAAI,QAAQ;4BAAE,KAAK,IAAI,CAAC,CAAC;qBAC3C;oBACD,MAAM;iBACN;YACD,OAAO;YACP,OAAO,CAAC,CAAC,MAAM;SACf;QAED,eAAe;QACf,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAChC;YAAE,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAExC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,GAAC,EAAE,GAAC,CAAC,CAAC,CAAC;YAE5B,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,SAAS,GAAC,GAAG;gBAAE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,KAAK,IAAI,EAAE,GAAC,aAAa,GAAC,CAAC,MAAM,IAAE,GAAG,EAAC,EAAC,EAAC,EAAC,CAAC,CAAC;SAC5C;IAEF,CAAC,CAAC;AAEF,CAAC,CAAC,EAAE,CAAC;AAEE,SAAS,qBAAqB,CAAC,UAAU;IAC/C,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,IAAI,IAAI,GAAG,OAAO,GAAG,OAAO,CAAC;IAC7B,OAAO,OAAO,GAAG,CAAC,UAAU,GAAG,aAAa,CAAC,GAAG,IAAI,CAAC;AACtD,CAAC;AACM,SAAS,sBAAsB,CAAC,WAAW;IACjD,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,cAAc,GAAG,EAAE,CAAC;IACxB,IAAI,IAAI,GAAG,OAAO,GAAG,OAAO,CAAC;IAC7B,OAAO,OAAO,GAAG,CAAC,WAAW,GAAG,cAAc,CAAC,GAAG,IAAI,CAAC;AACxD,CAAC;;;;;;;;;;;;;;;;;;;;;AClSiD;AACd;AACN;AAGvB,MAAM,KAAM,SAAQ,8DAAc;IASrC;QACI,KAAK,EAAE,CAAC;QAPZ,oBAAe,GAA6B,EAAE,CAAC;QAC/C,0BAAqB,GAA+B,EAAE,CAAC;QAEvD,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;IACjC,CAAC;IAEK,WAAW,CAAC,IAAiB,EAAE,UAAkB;;YACnD,IAAG,UAAU,EAAC;gBACV,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7D,IAAG,gBAAgB,IAAI,IAAI;oBACvB,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;gBAC9E,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAE,mBAAmB;oBAClE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;iBACtD;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAC,gBAAgB,CAAC,CAAC;gBAClE,IAAG,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC;oBAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrD,IAAG,GAAG,EAAC;wBACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;qBACtD;iBACJ;aACJ;iBACG;gBACA,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI;oBACrB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBAElD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAE3B,IAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAC;oBAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC9B,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChF,OAAO;iBACV;gBAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBAEnD,0CAA0C;gBAC1C,IAAI,cAAc,GAAG,IAAI,CAAC;gBAC1B,IAAI,gBAAgB,GAAG,IAAI,CAAC;gBAC5B,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;oBAC9C,cAAc,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM;yBAC3D,qBAAqB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACtF,IAAG,cAAc,EAAC;wBACd,gBAAgB,GAAG,UAAU,CAAC;wBAC9B,MAAM;qBACT;iBACJ;gBACD,IAAG,cAAc,IAAI,IAAI,EAAC;oBACtB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;oBAC7B,OAAO;iBACV;gBACD,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC;gBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBACzD,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpD;QACL,CAAC;KAAA;IAED;;;OAGG;IACH,QAAQ,CAAC,OAAoB,IAAS,CAAC;IAEvC,qBAAqB;QAClB,IAAI,oBAAoB,GAAe,EAAE,CAAC;QACzC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;YAC9C,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACvF,IAAI,SAAS,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;gBAClF,IAAG,CAAC,SAAS;oBACT,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;SACN;QACD,OAAO,oBAAoB,CAAC;IAChC,CAAC;CACJ;AAEM,MAAM,YAAa,SAAQ,gDAAO;CACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGsE;AAEA;AACpB;AACT;AACE;AAC8B;AAC9B;AACd;AACiC;AAExD,MAAM,GAAI,SAAQ,kEAAgB;IAOrC;QACI,KAAK,EAAE,CAAC;QALZ,oBAAe,GAAgC,EAAE,CAAC;QAElD,UAAK,GAAW,SAAS,CAAC;QAItB,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,eAAe,GAAG,IAAI,kDAAQ,CAAC,WAAW,EAAE,CAAC,4DAAU,CAAC,GAAG,EAAC,4DAAU,CAAC,IAAI,EAAC,4DAAU,CAAC,GAAG,EAAC,4DAAU,CAAC,MAAM,EAAE,CAAC;QACnH,eAAe,CAAC,QAAQ,GAAG,wDAAQ,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;YACrB,eAAe;SAClB,CAAC;IACN,CAAC;IAEK,WAAW,CAAC,IAAiB,EAAE,UAAkB;;YACnD,IAAG,UAAU,EAAC;gBACV,iCAAiC;gBACjC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC5D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,gBAAgB,IAAI,IAAI;oBACvB,OAAO;gBACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,mBAAmB;aACpE;iBACG;gBACA,aAAa;gBACb,IAAG,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI;oBAC7C,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBAClD,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI;oBAC3B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;gBAE/C,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAG,cAAc,IAAI,IAAI;oBACrB,OAAO;gBAEX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;gBAGvB,IAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAC,EAAE,2DAA2D;oBACzG,6BAA6B;oBAC7B,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,KAAK,IAAI,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,IAAI,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,EAAE,EAAC,6BAA6B;wBACzJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;wBAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,OAAO;qBACV;iBACJ;qBACG;oBACA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,qCAAqC;oBACzF,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC;wBAClB,IAAG,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,IAAI,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,EAAC;4BAC3F,+BAA+B;4BAC/B;;;8BAGE;4BACF,IAAI,CAAC,gBAAgB,EAAE,CAAC;4BACxB,OAAO;yBACV;qBACJ;iBACJ;gBAED,IAAG,CAAC,OAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAC;oBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,OAAO;iBACV;gBAED,4BAA4B;gBAC5B,KAAI,IAAI,MAAM,IAAI,cAAc,CAAC,OAAO,EAAC;oBACrC,0CAA0C;oBAC1C,IAAI,gBAA4B,CAAC;oBAEjC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;wBAC9C,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;wBACxF,IAAG,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,+EAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,EAAE;4BAC9K,gBAAgB,GAAG,UAAU,CAAC;4BAC9B,MAAM;yBACT;qBACJ;oBACD,IAAG,gBAAgB,IAAI,IAAI;wBACvB,SAAS;oBACb,0BAA0B;oBAC1B,IAAI,OAAO,GAAG,IAAI,wDAAW,EAAE,CAAC;oBAChC,IAAI,WAAW,GAAG,IAAI,qDAAW,EAAE,CAAC;oBACpC,WAAW,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;oBACvC,WAAW,CAAC,MAAM,GAAG,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,4DAAU,CAAC,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC7J,OAAO,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,WAAW,EAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE7E,OAAO,CAAC,MAAM,GAAG,gBAAgB,CAAC;oBAClC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACjC,OAAO,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;oBAE3B,IAAG,MAAM,CAAC,YAAY,EAAC;wBACnB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;qBACvD;yBACG;wBACA,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;wBAC1D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;qBAC5D;iBACJ;gBAED,+BAA+B;gBAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAG,IAAI,CAAC,YAAY;oBAChB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aACnD;QACL,CAAC;KAAA;IAEK,QAAQ,CAAC,QAAqB;;YAChC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC;YACpF,IAAG,gBAAgB,IAAI,IAAI;gBACvB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;YACjD,IAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE,mBAAmB;gBAClD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACrD,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YACpE,IAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,gDAAgD;gBAC/E,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QACzD,CAAC;KAAA;IAEK,MAAM,CAAC,IAAiB,EAAE,iBAA2B;;YACvD,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC;YACjB,IAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,IAAG,CAC/C,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC;gBAC1D,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,yBAAyB,CAAC;gBACjE,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,CAAC;gBAClD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAAE,OAAO;YACpE,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAC/C,CAAC;KAAA;CACJ;AAEM,MAAM,UAAW,SAAQ,iEAAe;IAA/C;;QACI,SAAI,GAAY,sDAAO,CAAC,IAAI,CAAC;IACjC,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJ8D;AAC3B;AACN;AACqB;AAEH;AACA;AACc;AACZ;AACA;AACZ;AAE/B,MAAM,KAAM,SAAQ,8DAAc;IAQrC;QACI,KAAK,EAAE,CAAC;QAJZ,oBAAe,GAAgC,EAAE,CAAC;QAClD,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;IACjC,CAAC;IAEK,WAAW,CAAC,OAAoB,EAAE,UAAU,GAAG,KAAK;;YACtD,IAAG,UAAU,EAAC;gBACV,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC/D,IAAG,gBAAgB,IAAI,IAAI;oBAAE,OAAO;gBACpC,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAChC;iBACG;gBACA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAC9B,IAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI;oBAAE,OAAO;gBAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;gBACzD,IAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,4DAAU,CAAC,GAAG,IAAI,OAAO,CAAC,YAAY,EAAC,EAAE,wBAAwB;oBAClG,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,6BAA6B;oBACjF,IAAG,QAAQ,EAAC;wBACR,IAAI,QAAQ,GAAG,IAAI,wDAAW,EAAE,CAAC;wBACjC,QAAQ,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;wBACxC,QAAQ,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;wBAC5B,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;wBACjC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;wBAClC,QAAQ,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBAC1F,IAAI,CAAC,kBAAkB,CAAC,4DAAU,CAAC,WAAW,CAAC,CAAC;wBAChD,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC9B,OAAO;qBACV;oBACD,IAAI,CAAC,kBAAkB,CAAC,4DAAU,CAAC,YAAY,CAAC,CAAC;iBACpD;gBAED,IAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;oBACtC,OAAO;gBAEX,QAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAC;oBAC5B,KAAK,8DAAW,CAAC,eAAe,CAAC;wBAC7B,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;wBACjC,MAAM;oBACV,KAAK,8DAAW,CAAC,qBAAqB,CAAC;wBACnC,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;wBAC9B,MAAM;oBACV;wBACI,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;wBACjC,MAAM;iBACb;aACJ;QACL,CAAC;KAAA;IAEK,YAAY,CAAC,IAAiB;;YAChC,mEAAmE;YACnE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,iBAAiB;YAEjB,aAAa;YACb,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;KAAA;IAGK,SAAS,CAAC,IAAiB;;YAC7B,iEAAiE;YACjE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,iBAAiB;YAEjB,aAAa;YACb,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,4DAAU,CAAC,GAAG;gBAC5C,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACrC;gBACA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;gBACjC,IAAI,CAAC,SAAS,GAAG,wEAAI,EAAE,CAAC;gBACxB,IAAG,IAAI,CAAC,YAAY;oBAChB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACjC;QACL,CAAC;KAAA;IAEK,QAAQ,CAAC,QAAqB;;YAChC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChE,IAAG,gBAAgB,IAAI,IAAI;gBACvB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACzD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,mBAAmB;YACrE,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAC9D,CAAC;KAAA;IAED,YAAY,CAAC,IAAU,EAAE,oBAA6B;QAClD,IAAG,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,oBAAoB,CAAC;YAC9C,OAAO,KAAK,CAAC;QACjB,+CAA+C;QAC/C,IAAG,CAAC,oBAAoB;YACpB,OAAO,IAAI,CAAC;QAChB,IAAG,IAAI,CAAC,MAAM,YAAY,mDAAQ;YAC9B,OAAO,IAAI,CAAC;QAChB,IAAI,CAAC,iBAAiB,CAAC,EAAC,OAAO,EAAE,oDAAoD,EAAC,CAAC,CAAC;QACxF,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,qBAAqB;QAEjB,IAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;YACrC,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;QACvG,OAAO,EAAE,CAAC;IACd,CAAC;CACJ;AAEM,MAAM,YAAa,SAAQ,gDAAO;IAAzC;;QACI,sBAAiB,GAAsB,0EAAiB,CAAC,uBAAuB,CAAC,CAAC;QAClF,gBAAW,GAAgB,8DAAW,CAAC,eAAe,CAAC,CAAC;IAC5D,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;AC7HM,MAAM,wBAAwB;IAEpC;QAGS,UAAK,GAAW,eAAe,CAAC;QAChC,aAAQ,GAAW,aAAa,CAAC;QAEjC,YAAO,GAAW,0CAA0C;IANrD,CAAC;IAQjB,QAAQ;IACR,CAAC;;gGAXW,wBAAwB;wGAAxB,wBAAwB;QCRrC,sEAAK;QACD,0EAA2C;QAAA,uDAAU;QAAA,6EAAiD;QAAA,4DAAO;QAC7G,sEAAK;QACD,gFAQuB;QANnB,wNAAqC,8FAK3B,iBAAa,IALc;QAMlB,4DAAa;QACpC,yEAG4C;QACxC,uEAAM;QAAA,8DAAG;QAAA,4DAAO;QAChB,uEAAM;QAAA,kEAAM;QAAA,4DAAO;QACnB,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAM;QACV,4DAAM;QACV,4DAAM;;QApByC,0DAAU;QAAV,oFAAU;QAAc,0DAAmB;QAAnB,gFAAmB;QAI9E,0DAAqC;QAArC,oGAAqC;QAQzC,0DAAyC;QAAzC,qGAAyC;;;;;;;;;;;;;;ACZjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACO;;;;;;ICa5D,6EAAyH;IAAvE,wSAAS,4CAAqC,SAAE,4BAAqB,IAAC;IACpH,qEAA6B;IACjC,4DAAS;;;;IACT,6EAAuH;IAAtE,ySAAS,4CAAoC,SAAE,6BAAqB,IAAC;IAClH,qEAAiE;IACrE,4DAAS;;;IARb,0EAEyE;IACrE,+HAES;IACT,+HAES;IACb,4DAAM;;;IARN,4GAA+C;IAElC,0DAAuC;IAAvC,0GAAuC;IAGvC,0DAAsC;IAAtC,yGAAsC;;;;IAiBnC,6EACiD;IAAhD,0SAAS,6CAAqC,IAAC;IAAC,6EAAkB;IAAA,4DAAS;;;;IAC5E,6EACgD;IAA/C,0SAAS,4CAAoC,IAAC;IAAC,4EAAiB;IAAA,4DAAS;;AD7BnF,MAAM,sBAAuB,SAAQ,2EAAiB;IAL7D;;QAOC,uBAAkB,GAAkB,IAAI,sEAAa,EAAE,CAAC;KAcxD;IAZA,eAAe;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACf,CAAC;IAEI,iBAAiB;QACvB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,sEAAa,EAAE,CAAC;QAC5B,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;2HAfW,sBAAsB;sGAAtB,sBAAsB;QCTnC,+EAKC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,yJAAa,2BAAyB,IAAC,mGAAe,2BAAuB,IAAtC,yFACzD,uBAAmB,IADsC;QAE9D,oEAAsC;QAC1C,4DAAM;QACV,4DAAM;QACN,kHASM;QACN,yEAA0B;QACtB,+EAAc;QACV,kFAMoB;QACxB,4DAAM;QACN,gFAAc;QACV,0EAA6B;QACzB,2EAA+B;QAC3B,2HAC4E;QAC5E,2HAC0E;QAC9E,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAvCN,yGAA+C;QAD/C,sFAA8B;QAUxB,0DAAgB;QAAhB,gFAAgB;QAad,0DAA4B;QAA5B,yFAA4B;QAUX,0DAAuC;QAAvC,uGAAuC;QAEvC,0DAAsC;QAAtC,sGAAsC;;8HD5BlD,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;AETO;AAIsB;AACJ;AACV;AACd;AACN;AAGvB,MAAM,YAAa,SAAQ,8DAAc;IAU5C;QACI,KAAK,EAAE,CAAC;QARZ,oBAAe,GAA6B,EAAE,CAAC;QAC/C,0BAAqB,GAA+B,EAAE,CAAC;QAEvD,UAAK,GAAG,SAAS,CAAC;QAElB,oBAAe,GAAG,CAAC,CAAC,CAAC;QAIjB,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;IACzC,CAAC;IAEK,WAAW,CAAC,IAAiB,EAAE,UAAkB;;YACnD,IAAG,UAAU,EAAC;gBACV,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7D,IAAG,gBAAgB,IAAI,IAAI;oBACvB,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;gBAC9E,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAE,mBAAmB;oBAClE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;iBACtD;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAC,gBAAgB,CAAC,CAAC;gBAClE,IAAG,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC;oBAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrD,IAAG,GAAG,EAAC;wBACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;qBACtD;iBACJ;aACJ;iBACG;gBACA,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI;oBACrB,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;gBAEnG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAE3B,IAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAC;oBAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC9B,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChF,OAAO;iBACV;gBAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBAEnD,QAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC;oBAC1B,KAAK,4EAAkB,CAAC,aAAa,CAAC;wBAClC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;wBAC5B,MAAM;oBACV,KAAK,4EAAkB,CAAC,SAAS,CAAC;wBAC9B,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACxB,MAAM;oBACV,KAAK,4EAAkB,CAAC,mBAAmB,CAAC;wBACxC,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;wBAClC,MAAM;oBACV,KAAK,4EAAkB,CAAC,UAAU,CAAC;wBAC/B,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wBACzB,MAAM;oBACV;wBACI,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;wBAC5B,MAAM;iBACb;aACJ;QACL,CAAC;KAAA;IAEK,UAAU,CAAC,IAAiB;;YAC9B,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC;YACrD,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAG,IAAI,CAAC,eAAe,IAAI,WAAW,EAAC;gBACnC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;aAC5B;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YACzD,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,CAAC;KAAA;IAEK,MAAM,CAAC,IAAiB;;YAC1B,IAAI,IAAI,GAAG,wCAAU,CAAC,EAAC,EAAE,EAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACtD,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC;YAChD,IAAI,eAAe,GAAG,OAAO,GAAG,MAAM,CAAC;YACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YACzD,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;QACvF,CAAC;KAAA;IAEK,gBAAgB,CAAC,IAAiB;;YACpC,IAAI,cAAc,GAAiB,EAAE,CAAC;YACtC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACnD,KAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAC;gBACnC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,IAAI;oBACvC,MAAM;gBACV,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;YAChC,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;gBACxC,IAAI,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAE,IAAI,CAAC,CAAC,MAAM,CAAC;gBACxD,IAAG,MAAM,GAAG,QAAQ,EAAC;oBACjB,KAAK,GAAG,IAAI,CAAC;oBACb,QAAQ,GAAG,MAAM,CAAC;iBACrB;aACJ;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YACzD,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC;KAAA;IAEK,OAAO,CAAC,IAAiB;;YAC3B,IAAI,GAAW,CAAC;YAChB,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI;gBACpC,GAAG,GAAG,GAAG,CAAC;;gBAEV,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC5C,IAAI,IAAI,GAAG,wCAAU,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC;YAChD,IAAI,eAAe,GAAG,OAAO,GAAG,MAAM,CAAC;YACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YACzD,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;QACvF,CAAC;KAAA;IAED;;;OAGG;IACH,QAAQ,CAAC,OAAoB,IAAS,CAAC;IAEvC,qBAAqB;QAClB,IAAI,oBAAoB,GAAe,EAAE,CAAC;QACzC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;YAC9C,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACvF,IAAI,SAAS,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;gBAClF,IAAG,CAAC,SAAS;oBACT,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;SACN;QACD,OAAO,oBAAoB,CAAC;IAChC,CAAC;CACJ;AAEM,MAAM,mBAAoB,SAAQ,gDAAO;IAAhD;;QACI,SAAI,GAAqB,wEAAgB,CAAC,SAAS,CAAC,CAAC;QACrD,cAAS,GAAuB,4EAAkB,CAAC,aAAa,CAAC,CAAC;IACtE,CAAC;CAAA;;;;;;;;;;;;;AC3KD;AAAA;AAAA;AAAA;AAAiE;AAEY;;AAI7E,MAAM,kBAAkB;CAKvB;AAOM,MAAM,gBAAgB;IAkS5B;QAjSU,oBAAe,GAAG,IAAI,0DAAY,EAAsB,CAAC;QAQnE,gCAA2B,GAA0B,EAAE,CAAC;QACxD,sBAAiB,GAAwB,EAAE,CAAC;QAa5C,mBAAc,GAAG,CAAC,CAAC;QACnB,oBAAe,GAAG,CAAC,CAAC;QAEpB,mBAAc,GAAW,CAAC,CAAC;QA6L3B,kBAAa,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;gBACzB,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC;gBAC3C,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC;gBAC7C,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;gBACpC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;aACtC,CAAC,CAAC;YACH,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAChE,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC1D,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC3B,CAAC;QAED,sBAAiB,GAAG,CAAC,CAAa,EAAE,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3C,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;YACpE,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;YAEpE,IAAI,CAAC,cAAc,IAAI,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,IAAI,KAAK,CAAC;YAG9B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;YACjF,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;YAE5K,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;YACnF,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;YAE5K,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC;QACjC,CAAC;QAEM,mBAAc,GAAG,CAAC,KAAY,EAAE,KAAa,EAAQ,EAAE;YAC7D,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAG,KAAK,YAAY,UAAU,EAAC;gBAC9B,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC;gBACnB,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC;aACnB;iBACI,IAAG,KAAK,YAAY,UAAU,EAAC;gBACnC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC9B,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;aAC9B;YACD,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAC;gBAC3C,SAAS,CAAC,WAAW,CACpB,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK,EACnE,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK,CACnE,CAAC;aAEF;YACD,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,2BAA2B,EAAC;gBACtD,IAAG,UAAU,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAC;oBACnD,UAAU,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBACrD,OAAO,CAAC,KAAG,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC;oBACpE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;wBACf,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CACpC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK;4BACpC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK,EAAC,CAAC;wBACtC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;wBACnB,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;oBACpB,CAAC,CAAC;iBACF;aACD;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC;QAYO,8BAAyB,GAAG,IAAI,iFAAe,EAAwB,CAAC;IAFhE,CAAC;IAtQjB,YAAY,CAAC,SAA4B,EAAE,WAAoB,KAAK;QACnE,IAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAC,EAAE,4BAA4B;YAChF,IAAG,QAAQ,EAAC,EAAE,qCAAqC;gBAClD,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC;gBACvE,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAC3B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACvC,mEAAmE;gBACnE,IAAI,mBAAmB,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtE,IAAI,kBAAkB,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACtE,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAC;oBAC3C,IAAI,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;oBACnD,IAAI,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAC9C,IAAI,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC9C,IAAG,UAAU,EAAC;wBACb,IAAG,kBAAkB,EAAC;4BACrB,IAAI,eAAe,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAC9D,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,kBAAkB,CAC1D;4BACD,IAAG,eAAe,IAAI,IAAI,EAAC;gCAC1B,IAAI,IAAI,GAAG,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;gCACrF,IAAG,IAAI;oCACN,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qCACzC;oCACH,UAAU,CAAC,GAAE,EAAE;wCACd,IAAI,GAAG,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;wCACjF,IAAG,IAAI;4CACN,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCAC9C,CAAC,EAAE,EAAE,CAAC,CAAC;iCACP;6BACD;yBACD;qBACD;oBACD,IAAG,SAAS,EAAC;wBACZ,IAAG,mBAAmB,EAAC;4BACtB,IAAI,eAAe,GAAG,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAC7D,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,mBAAmB,CAC1D;4BACD,IAAG,eAAe,IAAI,IAAI,EAAC;gCAC1B,IAAI,IAAI,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;gCACpF,IAAG,IAAI;oCACN,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qCACzC;oCACH,UAAU,CAAC,GAAE,EAAE;wCACd,IAAI,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;wCAChF,IAAG,IAAI;4CACN,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oCAC9C,CAAC,EAAE,EAAE,CAAC,CAAC;iCACP;6BACD;yBACD;qBACD;iBACD;aAED;iBACG,EAAE,4BAA4B;gBACjC,KAAI,IAAI,YAAY,IAAI,IAAI,CAAC,iBAAiB,EAAC;oBAC9C,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC;oBAC7E,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;iBAC5B;gBACD,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAC3B,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC;gBACvE,IAAI,CAAC,iBAAiB,GAAG,CAAC,SAAS,CAAC,CAAC;gBACrC,IAAI,CAAC,gCAAgC,EAAE,CAAC;aACxC;SACD;QACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,cAAc;QACb,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAC;YAC3C,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC;YAC1E,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,aAAa;IACb,sBAAsB,CAAC,SAA8B;QACpD,IAAG,SAAS,IAAI,IAAI,CAAC,0BAA0B,EAAC;YAC/C,IAAG,IAAI,CAAC,0BAA0B,IAAI,IAAI,EAAC;gBAC1C,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC;aAC/F;YACD,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC;YACtE,IAAI,CAAC,0BAA0B,GAAG,SAAS,CAAC;YAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,gCAAgC,EAAE,CAAC;YACxC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;SAC7B;IACF,CAAC;IAED,wBAAwB;QACvB,IAAG,IAAI,CAAC,0BAA0B,IAAI,IAAI,EAAC;YAC1C,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC;YAC/F,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;YACvC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;SAC7B;IACF,CAAC;IAED,YAAY;IACZ,qBAAqB,CAAC,SAAoB,EAAE,IAAiB;QAC5D,IAAG,SAAS,IAAI,IAAI,CAAC,yBAAyB,EAAC;YAC9C,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;YAC3C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;SAC7B;IACF,CAAC;IAED,uBAAuB;QACtB,IAAG,IAAI,CAAC,yBAAyB,IAAI,IAAI,EAAC;YACzC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;SAC7B;IACF,CAAC;IAED,gCAAgC;QAC/B,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,eAAe;QACd,IAAG,IAAI,CAAC,0BAA0B,IAAI,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,yBAAyB,IAAI,IAAI;YACzH,OAAO,KAAK,CAAC;QACd,IAAG,IAAI,CAAC,0BAA0B,EAAC;YAClC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC;SACZ;aACI,IAAG,IAAI,CAAC,yBAAyB,EAAC;YACtC,IAAI,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;YAC3I,IAAG,KAAK,KAAK,CAAC,CAAC;gBACd,OAAO,KAAK,CAAC;YACd,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC;SACZ;QACD,KAAI,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAC;YAC3C,SAAS,CAAC,WAAW,EAAE,CAAC;SACxB;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,cAAc,CAAC,CAAa,EAAE,KAAa;QAC1C,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,gBAAgB;QACjC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC5B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAExB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,OAAO,CAAC;QAEjC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,OAAO,CAAC;QAElC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC;QAEhC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QAEzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7D,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACxD,CAAC;IAqEO,gBAAgB,CAAC,SAAoB;QAC5C,OAAO,EAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAC,CAAC;IACrF,CAAC;IAEO,qBAAqB,CAAC,MAAM,EAAE,KAAa;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;IACzD,CAAC;IAKM,iBAAiB,CAAC,OAAsC;QAC9D,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IACO,mBAAmB,CAAC,KAA2B;QACtD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;;gFA1SW,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFd,MAAM;;;;;;;;;;;;;ACbrB;AAAA;AAAA;AAAA;AAAA;AAAkD;AACd;AAI7B,MAAM,SAAU,SAAQ,8DAAc;IAIzC;QACI,KAAK,EAAE,CAAC;QAeZ,YAAO,GAAG,GAAG,EAAE,GAAE,CAAC;QAdd,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC;IACtC,CAAC;IAED,WAAW,CAAC,IAAiB,EAAE,UAAmB;QAC9C,OAAO;IACX,CAAC;IACD,QAAQ,CAAC,IAAiB;QACtB,OAAO;IACX,CAAC;IACD,qBAAqB;QACjB,OAAO,EAAE,CAAC;IACd,CAAC;CAGJ;AAEM,MAAM,gBAAiB,SAAQ,gDAAO;IAA7C;;QACI,UAAK,GAAW,GAAG,CAAC;QACpB,WAAM,GAAW,EAAE,CAAC;QACpB,aAAQ,GAAW,EAAE,CAAC;QACtB,WAAM,GAAY,KAAK,CAAC;QACxB,aAAQ,GAAY,KAAK,CAAC;QAC1B,oBAAe,GAAW,oBAAoB,CAAC;QAC/C,UAAK,GAAW,MAAM,CAAC;IAC3B,CAAC;CAAA;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAyD;;AAKlD,MAAM,cAAc;IAsB1B;QApBO,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEhC,gBAAW,GAAG,SAAS,CAAC;QAGxB,eAAU,GAAG,QAAQ,CAAC;QAGtB,qBAAgB,GAAG,cAAc,CAAC;QAGlC,iBAAY,GAAG,UAAU;QAGzB,wBAAmB,GAAG,iBAAiB;QAGvC,kBAAa,GAAG,WAAW;QAIlC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACvF,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACnF,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/F,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACxF,IAAI,CAAC,sBAAsB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACtG,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC1F,CAAC;IAED,iBAAiB;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B,CAAC;IAED,kBAAkB,CAAC,WAAoB,IAAI;QAC1C,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,cAAc;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IAED,eAAe,CAAC,SAAkB,IAAI,EAAE,qBAA8B,IAAI;QACzE,IAAG,kBAAkB;YACpB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,oBAAoB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IAChC,CAAC;IAED,qBAAqB,CAAC,SAAkB,IAAI,EAAE,qBAA8B,IAAI;QAC/E,IAAG,kBAAkB;YACpB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACT,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,UAAmB,IAAI,EAAE,qBAA8B,IAAI;QACtE,IAAG,kBAAkB;YACpB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7D,IAAG,OAAO;YACT,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;;YAEpD,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,iBAAiB;QAChB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACpC,CAAC;IAED,kBAAkB,CAAC,UAAmB,IAAI,EAAE,qBAA8B,IAAI;QAC7E,IAAG,kBAAkB;YACpB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC;IACvC,CAAC;IAED,iBAAiB;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B,CAAC;IAED,kBAAkB,CAAC,SAAkB,IAAI,EAAE,qBAA8B,IAAI;QAC5E,IAAG,kBAAkB;YACpB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;IAC/B,CAAC;;4EAhGW,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFZ,MAAM;;;;;;;;;;;;;ACFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACS;;;;AAOzD,MAAM,qBAAsB,SAAQ,2EAAiB;IAL5D;;QAOQ,sBAAiB,GAAkB,IAAI,oEAAY,EAAE,CAAC;KAU7D;IARO,iBAAiB;QACvB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,oEAAY,EAAE,CAAC;QAC3B,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;wHAXW,qBAAqB;qGAArB,qBAAqB;QCTlC,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,wJAAa,2BAAyB,IAAC,kGAAe,2BAAuB,IAAtC,wFACzD,uBAAmB,IADsC;QAE9D,qEAAyC;QAC7C,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,gFAOmB;QACvB,4DAAM;QACN,gFAAkB;QACd,kFAGoB;QACxB,4DAAM;QACV,4DAAM;;QA1BN,wGAA6C;QAYrC,0DAA2B;QAA3B,wFAA2B;QAU3B,0DAA2B;QAA3B,wFAA2B;;6HDftB,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;IETlC,0EAA0G;IAAA,kEAAsC;IAAA,4DAAO;;;IAArG,iGAA0B;;ACQrE,MAAM,oBAAoB;IAI9B,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAExD,QAAQ,KAAW,CAAC;;wFANR,oBAAoB;oGAApB,oBAAoB;QDRjC,kHAAuJ;;QAAhJ,yGAAyC;;;;;;;;;;;;;;AEAhD;AAAA;AAAA,IAAY,QAIX;AAJD,WAAY,QAAQ;IAChB,uCAAI;IACJ,mDAAU;IACV,+CAAQ;AACZ,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;;;;;;;;;;;;;;;;;;;ACFmE;AAI7D,MAAM,SAAS;IAGlB,YAAY,CAAS,EAAC,CAAS;QAC3B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;CACJ;AAEM,MAAM,UAAU;IAMnB,YAAY,KAAW,EAAE,KAAW;QAFpC,UAAK,GAAW,EAAE,CAAC;QAkCX,uBAAkB,GAAG,IAAI,uEAAe,EAAiB,CAAC;QAQ3D,qBAAgB,GAAiB,GAAG,EAAE,GAAE,OAAO,GAAG,GAAC,CAAC;QAvCvD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,YAAY,CAAC,IAAU;QACnB,OAAO,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;IACzD,CAAC;IAED;;OAEG;IACU,QAAQ,CAAC,IAAiB,EAAE,MAAY;;YACjD,IAAG,MAAM,KAAK,IAAI,CAAC,KAAK,EAAC;gBACrB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACpC,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC7C;iBACI,IAAG,MAAM,KAAK,IAAI,CAAC,KAAK,EAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACpC,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC7C;;gBAEG,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QACjE,CAAC;KAAA;IAED,OAAO;QACH,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAIM,UAAU,CAAC,OAA+B;QAC7C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IACO,YAAY,CAAC,KAAoB;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;CAGJ;;;;;;;;;;;;;;;;;;;;;;AC5DsE;AACjC;AACU;AAClB;AAGvB,MAAM,YAAa,SAAQ,kEAAgB;IAQ9C;QACI,KAAK,EAAE,CAAC;QALZ,oBAAe,GAAgC,EAAE,CAAC;QAClD,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QAErC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;YACrB,IAAI,kDAAQ,CAAC,QAAQ,EAAC,CAAC,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,IAAI,EAAE,4DAAU,CAAC,GAAG,EAAE,4DAAU,CAAC,MAAM,CAAC,CAAC;SAC9F;IACL,CAAC;IAEK,WAAW,CAAC,IAAiB;;YAC/B,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAClD,IAAG,cAAc,IAAI,IAAI;gBACrB,OAAO;YAEX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YAEnD,IAAG,CAAC,OAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAC;gBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,OAAO;aACV;YAED,qBAAqB;YACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAG,IAAI,CAAC,YAAY;gBAChB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,CAAC;KAAA;IAEK,QAAQ,CAAC,QAAqB;;YAChC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChE,IAAG,gBAAgB,IAAI,IAAI;gBACvB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACzD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,mBAAmB;YACrE,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAC9D,CAAC;KAAA;CACJ;AAEM,MAAM,mBAAoB,SAAQ,iEAAe;CACvD;;;;;;;;;;;;;ACzDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;AACgC;AACT;AAC1B;;;AAEzD,MAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,wEAAe;KAC3B;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAc;QACzB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,wGAAuB;aAEnC;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,SAAS,EAAE,+FAAoB;aAChC;SACF;KACF;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;;AC9B+C;AACjC;AACU;AAClB;AAGvB,MAAM,GAAI,SAAQ,kEAAgB;IAOrC;QACI,KAAK,EAAE,CAAC;QAJZ,oBAAe,GAAgC,EAAE,CAAC;QAClD,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;YACrB,IAAI,kDAAQ,CAAC,MAAM,EAAC,CAAC,4DAAU,CAAC,GAAG,EAAC,4DAAU,CAAC,IAAI,EAAC,4DAAU,CAAC,GAAG,EAAC,4DAAU,CAAC,MAAM,EAAC,4DAAU,CAAC,KAAK,CAAC,CAAC;SAC1G;IACL,CAAC;IAEK,WAAW,CAAC,IAAiB;;YAC/B,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAClD,IAAG,cAAc,IAAI,IAAI;gBACrB,OAAO;YAEX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;YAEnD,qBAAqB;YACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAG,IAAI,CAAC,YAAY;gBAChB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,CAAC;KAAA;IAEK,QAAQ,CAAC,QAAqB;;YAChC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChE,IAAG,gBAAgB,IAAI,IAAI;gBACvB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACzD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,mBAAmB;YACrE,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;QAC9D,CAAC;KAAA;CACJ;AAEM,MAAM,UAAW,SAAQ,iEAAe;CAC9C;;;;;;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACS;;;;;;;ICIxD,qEAAwE;;;IAIxE,qEAAkJ;;;IAAzH,6GAAiD;;;;IAUlE,0EAAgG;IAC5F,4EAA4K;IAArK,gUAAwB;IAA/B,4DAA4K;IAChL,4DAAM;;;IAD6H,0DAA0B;IAA1B,oFAA0B;;;ADZtK,MAAM,qBAAsB,SAAQ,2EAAiB;IAL5D;;QAOQ,sBAAiB,GAAkB,IAAI,oEAAY,EAAE,CAAC;KA0B7D;IAxBA,uBAAuB,CAAC,QAAkB;QACzC,IAAG,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,IAAI,EAAE;YAC9D,QAAQ,CAAC,GAAG,GAAG,eAAe,CAAC;IACjC,CAAC;IAED,eAAe;QACd,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,EAAE;YAC7C,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1C,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC5B,CAAC,CAAC;IACD,CAAC;IAEI,iBAAiB;QACvB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,oEAAY,EAAE,CAAC;QAC3B,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;wHA3BW,qBAAqB;qGAArB,qBAAqB;QCVlC,+EAIC;QACG,+EAA2B;QAC3B,yEAAoC;QAChC,iHAAwE;QAC5E,4DAAM;QACN,yEACqE;QADjC,wJAAa,2BAAyB,IAAC,wFAClE,uBAAmB,IAD+C,kGAC/B,2BAAuB,IADQ;QAEvE,iHAAkJ;;QACtJ,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,gFAAc;QACV,0EAAyC;QACrC,0EAAmC;QAC/B,4EAA4B;QAAA,uEAAW;QAAA,+EAA4H;QAAA,4DAAO;QAC9K,4DAAM;QACN,2EAA+B;QAC3B,oHAEM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iFAAkB;QACd,mFAGoB;QACxB,4DAAM;QACV,4DAAM;;QA/BN,wGAA6C;QAKM,0DAAqB;QAArB,2JAAqB;QAI+B,0DAA2C;QAA3C,4KAA2C;QAO7E,0DAA8F;QAA9F,uJAA8F;QAGhG,0DAA2C;QAA3C,4GAA2C;QAQtG,0DAA2B;QAA3B,wFAA2B;;6HDnBtB,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;AERqC;AACpB;AACuB;AAC5C;AACiC;AACgC;AACnD;AACA;AACF;AAEnC,MAAM,SAAU,SAAQ,kEAAgB;IAQ3C;QACI,KAAK,EAAE,CAAC;QALZ,oBAAe,GAAgC,EAAE,CAAC;QAClD,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAG,SAAS,CAAC;QAId,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;YACrB,IAAI,kDAAQ,CAAC,GAAG,EAAC,CAAC,4DAAU,CAAC,GAAG,EAAC,4DAAU,CAAC,IAAI,EAAC,4DAAU,CAAC,GAAG,EAAC,4DAAU,CAAC,MAAM,EAAE,CAAC;SACvF;IACL,CAAC;IAEK,WAAW,CAAC,IAAiB,EAAE,UAAkB;;YACnD,IAAG,UAAU,EAAC;gBACV,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC5D,IAAG,gBAAgB,IAAI,IAAI,EAAE,sDAAsD;oBAC/E,OAAO;gBACX,wDAAwD;gBACxD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC;oBAClB,IAAI,SAAS,GAAG,KAAK,CAAC;oBAEtB,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBACnC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;4BAC9B,IAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG;gCAC5D,+EAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAC;gCAC1F,SAAS,GAAG,IAAI,CAAC;6BACpB;wBACL,CAAC,CAAC;oBACN,CAAC,CAAC;oBACF,IAAG,CAAC,SAAS,EAAC,EAAE,2DAA2D;wBACvE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;wBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;wBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC;wBACvD,IAAG,MAAM;4BACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBACjD,OAAO;qBACV;oBACD,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACxF,IAAG,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,sDAAsD;wBACrF,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;wBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;wBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC;wBACpD,IAAG,GAAG;4BACF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;qBACpD;iBACJ;qBACG;oBACA,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC;wBACvN,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;iBAClF;aACJ;iBACG;gBACA,IAAG,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI;oBAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBACjG,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI;oBAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC;gBAE5E,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAElD,IAAG,cAAc,IAAI,IAAI;oBACrB,OAAO;gBAEX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,IAAI,YAAY,GAAG,KAAK,CAAC;gBACzB,IAAI,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC9F,IAAI,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC9F,IAAI,uBAAuB,GAAG,CAAC,oBAAoB,IAAI,mBAAmB,CAAC,CAAC;gBAE5E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBAEnD,IAAG,CAAC,OAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAC;oBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,OAAO;iBACV;gBAED,6BAA6B;gBAC7B,KAAI,IAAI,MAAM,IAAI,cAAc,CAAC,OAAO,EAAC;oBACrC,0CAA0C;oBAC1C,IAAG,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI;wBACrD,SAAS;oBACb,IAAI,gBAA4B,CAAC;oBACjC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;wBAC9C,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;wBACxF,IAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,+EAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,EAAE;4BACnJ,gBAAgB,GAAG,UAAU,CAAC;4BAC9B,MAAM;yBACT;qBACJ;oBACD,IAAG,gBAAgB,IAAI,IAAI;wBACvB,SAAS;oBAEb,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,CAAC;oBAC7G,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC;2BAC1F,CAAC,uBAAuB,IAAI,uBAAuB,IAAI,CAAC,QAAQ,EAAE;wBACjE,SAAS;qBACZ;oBACD,IAAI,SAAS,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,wEAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;oBACpG,IAAI,OAAO,GAAG,IAAI,wDAAW,EAAE,CAAC;oBAChC,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;oBAC9B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;oBACjC,KAAK,CAAC,MAAM,GAAG,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,4DAAU,CAAC,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAEvJ,OAAO,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAE5F,OAAO,CAAC,MAAM,GAAG,gBAAgB,CAAC;oBAClC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACjC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;oBAE9B,IAAG,QAAQ;wBACP,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;yBACpD;wBACA,IAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;4BAClB,YAAY,GAAG,IAAI,CAAC;wBACxB,IAAG,MAAM,CAAC,YAAY,EAAC;4BACnB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;yBACvD;6BACG;4BACA,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;4BAC1D,IAAG,IAAI,CAAC,YAAY;gCAChB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;yBACrD;qBACJ;iBACJ;gBAEF,2BAA2B;gBAC3B,0DAA0D;gBAC1D,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAG,cAAc,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,EAAE;oBACvD,IAAG,oBAAoB,EAAC;wBACpB,0BAA0B;wBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,cAAc,CAAC,CAAC;qBAC7D;oBACD,IAAG,mBAAmB;wBAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;iBACnD;gBACD,IAAG,CAAC,YAAY,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,EAAC;oBAChG,oBAAoB;oBACpB,qDAAqD;oBACrD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC/C;aACJ;QACL,CAAC;KAAA;IAEK,QAAQ,CAAC,QAAqB;;YAChC,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;YAChE,IAAG,gBAAgB,IAAI,IAAI;gBACvB,OAAO;YACX,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YACvE,IAAG,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC;gBACjC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC/B,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACzC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAC,QAAQ,CAAC,MAAM,CAAC;gBAC5D,IAAG,GAAG,EAAC;oBACH,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;iBACpD;aACJ;iBACG;gBACA,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;aACpD;QACL,CAAC;KAAA;IAEK,MAAM,CAAC,IAAiB,EAAE,iBAA2B;;YACvD,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC;YACjB,IAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,IAAG,CAC/C,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC;gBAC1D,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,yBAAyB,CAAC;gBACjE,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU,CAAC;gBAClD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAAE,OAAO;YACpE,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAC/C,CAAC;KAAA;IAEK,YAAY,CAAC,IAAiB,EAAE,iBAA2B;;YAC7D,MAAM,yEAAK,CAAC,GAAG,CAAC,CAAC;YACjB,IAAG,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,CACpK,iBAAiB,CAAC,QAAQ,IAAI,wDAAQ,CAAC,kBAAkB,CAAC,CAAC;gBAC3D,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAAE,OAAO;YAEjE,KAAI,IAAI,MAAM,IAAI,iBAAiB,CAAC,OAAO,EAAC;gBACxC,0CAA0C;gBAC1C,IAAG,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,wDAAQ,CAAC,UAAU;oBACtJ,SAAS;gBAEb,IAAI,gBAA4B,CAAC;gBACjC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC;oBAC9C,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;oBACxF,IAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,+EAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,IAAI,EAAE;wBACnJ,gBAAgB,GAAG,UAAU,CAAC;wBAC9B,MAAM;qBACT;iBACJ;gBACD,IAAG,gBAAgB,IAAI,IAAI;oBACvB,SAAS;gBAEb,IAAI,QAAQ,GAAG,wEAAI,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM;gBAC5C,IAAI,OAAO,GAAG,IAAI,wDAAW,EAAE,CAAC;gBAChC,IAAI,KAAK,GAAG,IAAI,qDAAW,EAAE,CAAC;gBAC9B,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACjC,KAAK,CAAC,MAAM,GAAG,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,4DAAU,CAAC,0EAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAEvJ,OAAO,CAAC,MAAM,GAAG,IAAI,8DAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACxE,OAAO,CAAC,MAAM,GAAG,gBAAgB,CAAC;gBAClC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACjC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC7B,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;aAC7D;YAED,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QACrD,CAAC;KAAA;CACJ;AAEM,MAAM,gBAAiB,SAAQ,iEAAe;IAArD;;QACI,SAAI,GAAY,sDAAO,CAAC,IAAI,CAAC;IACjC,CAAC;CAAA;;;;;;;;;;;;;AChPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkG;AAErC;AACQ;AACV;AAEI;AACqB;AACf;AACG;AACqB;AACH;AACZ;AACY;AACA;AACrB;AACG;AACS;AACA;AAClB;;;;;;;;;ICR/C,2EAAwD;IACpD,mEAA+B;IACnC,4DAAO;;;IAEH,2EAAmB;IACf,mEAAiC;IACrC,4DAAO;;;;IASP,6EAA0F;IAAzB,obAAwB;IAAC,mEAAsC;IAAA,4DAAS;;;;IAL7I,0EAE8B;IAD9B,sXAA4B;IAExB,2EAAsB;IAAA,uDAAe;IAAA,4DAAO;IAC5C,qEAA+B;IAC/B,2IAAyI;IAC7I,4DAAM;;;;IAND,6FAAoC;IAGf,0DAAe;IAAf,8EAAe;IAChC,0DAAyB;IAAzB,0JAAyB;IACrB,0DAAyC;IAAzC,6GAAyC;;;IAlB9D,0EAA0F;IACtF,0EAAiE;IAA7C,sOAA4C;IAC5D,2EAAoB;IAAA,uDAAoB;IAAA,4DAAO;IAC/C,iIAEO;IACP,2NAIc;IAClB,4DAAM;IACN,0EAAqB;IACjB,+HAMM;IACN,qEACM;IACN,sEACM;IACN,sEACM;IACV,4DAAM;IACV,4DAAM;;;;IA3BmD,uFAAgC;IAE7D,0DAAoB;IAApB,kFAAoB;IACpB,0DAAuB;IAAvB,oFAAuB;IAUqC,0DAAiB;IAAjB,sFAAiB;;;;IArBjH,yEAAqE;IACjE,yEAAiB;IACb,8EAA2I;IAAzH,4YAAiC;IAAnD,4DAA2I;IAC3I,0EAAoD;IAA9C,8TAAwB;IAC1B,mEAA4B;IAChC,4DAAO;IACX,4DAAM;IACN,0EAAkB;IACd,0HA2BM;IACV,4DAAM;IACV,4DAAM;;;IA7B4C,0DAAa;IAAb,sFAAa;;;IA8B/D,0EAAsG;IAClG,uEAAM;IAAA,uDAAyB;IAAA,4DAAO;IACtC,gEAAI;IACJ,qEAAsC;IAC1C,4DAAM;;;IAJoD,uGAA2C;IAC3F,0DAAyB;IAAzB,2FAAyB;IAE1B,0DAAgC;IAAhC,oKAAgC;;;IAEzC,8EAA+H;IAC3H,qEAAsC;IAC1C,4DAAM;;;IAF6E,uGAA2C;IACrH,0DAAgC;IAAhC,oKAAgC;;;;IAGrC,0EAAiD;IAAzB,qUAAwB;IAC5C,mEAAoC;IACxC,4DAAM;;;;IAEV,0EAAsD;IAClD,2EAAmC;IAAA,uDAAgC;IAAA,4DAAO;IAC1E,0EAAiC;IAC7B,qEAA6C;IACjD,4DAAM;IACN,qEAAmD;IACnD,6EAA4C;IAAtB,6TAAqB;IAAC,mEAA4B;IAAA,4DAAS;IACrF,4DAAM;;;IANiC,0DAAgC;IAAhC,oGAAgC;IAE1D,0DAAuC;IAAvC,6KAAuC;IAE3C,0DAAuC;IAAvC,qKAAuC;;ADnChD,MAAM,QAAQ;IASb,YAAY,SAAY,EAAE,OAAe,EAAE,IAAY,EAAE,QAAgB,EAAC,IAAY,EAAE,gBAAwB,IAAI;QACnH,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAI,SAAiB,CAAC,QAAQ,EAAE,IAAI,SAAS,CAAC;IACzD,CAAC;CACD;AAED,MAAM,QAAQ;IAKb,YAAY,KAAa,EAAE,QAAyB,EAAE;QACrD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;CACD;AAQM,MAAM,sBAAsB;IAclC,YAAoB,cAA8B,EAAS,cAA8B;QAArE,mBAAc,GAAd,cAAc,CAAgB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAZzF,kBAAa,GAAe,EAAE,CAAC;QAC/B,eAAU,GAAe,EAAE,CAAC;QAC5B,WAAM,GAAY,IAAI,CAAC;QAEvB,eAAU,GAAY,KAAK,CAAC;QAqF5B,YAAO,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnD,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEvD,MAAM,CAAC,mBAAmB,CAAC,UAAU,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpD,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEvD,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC;QACb,CAAC;QAED,cAAS,GAAG,CAAC,CAAQ,EAAE,EAAE;YACxB,IAAG,CAAC,YAAY,UAAU,EAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC;gBACrG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC;gBACtG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,OAAO,GAAC,CAAC,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;gBAChH,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,GAAC,CAAC,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;aAC/G;iBACI,IAAG,CAAC,YAAY,UAAU,EAAC;gBAC/B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC;gBACrG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC;gBACtG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAC,CAAC,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;gBAC3H,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAC,CAAC,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;aAC1H;QACF,CAAC;QArGA,oBAAoB;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,aAAa,EAAC;YAClD,IAAI,QAAQ,CAAC,mFAAe,EAAE,cAAc,EAAE,EAAE,EAAC,qBAAqB,EAAE,8cAA8c,CAAC;YACvhB,IAAI,QAAQ,CAAC,wGAAsB,EAAE,gBAAgB,EAAE,EAAE,EAAC,4BAA4B,EAAE,yMAAyM,CAAC;SAClS,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,aAAa,EAAC;YAClD,IAAI,QAAQ,CAAC,6FAAkB,EAAE,iBAAiB,EAAE,MAAM,EAAC,wBAAwB,EAAE,iNAAiN,CAAC;YACvS,IAAI,QAAQ,CAAC,+FAAmB,EAAE,iBAAiB,EAAE,IAAI,EAAC,yBAAyB,EAAE,8aAA8a,CAAC;YACpgB,IAAI,QAAQ,CAAC,0EAAY,EAAE,iBAAiB,EAAE,KAAK,EAAC,kBAAkB,EAAE,gYAAgY,CAAC;SACzc,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,SAAS,EAAC;YAC9C,IAAI,QAAQ,CAAC,0FAAiB,EAAE,cAAc,EAAE,KAAK,EAAC,uBAAuB,EAAE,sSAAsS,EAAC,EAAE,IAAI,EAAE,0EAAY,CAAC,GAAG,EAAE,CAAC;YACjZ,IAAI,QAAQ,CAAC,0FAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAC,uBAAuB,EAAC,sSAAsS,EAAE,EAAE,IAAI,EAAE,0EAAY,CAAC,KAAK,EAAE,CAAC;YACvZ,IAAI,QAAQ,CAAC,qGAAqB,EAAE,eAAe,EAAE,OAAO,EAAC,2BAA2B,EAAC,wKAAwK,CAAC;YAClQ,IAAI,QAAQ,CAAC,2EAAY,EAAE,0BAA0B,EAAE,KAAK,EAAC,kBAAkB,EAAC,qKAAqK,CAAC;SACtP,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAC;YAC7C,IAAI,QAAQ,CAAC,gFAAc,EAAE,qBAAqB,EAAE,IAAI,EAAC,oBAAoB,EAAE,yUAAyU,EAAE,EAAE,WAAW,EAAE,wEAAW,CAAC,eAAe,CAAC,EAAE,CAAC;YACxc,IAAI,QAAQ,CAAC,gFAAc,EAAE,kBAAkB,EAAE,IAAI,EAAC,oBAAoB,EAAE,yUAAyU,EAAE,EAAE,WAAW,EAAE,wEAAW,CAAC,qBAAqB,CAAC,EAAE,CAAC;SAC3c,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,0BAA0B,EAAC;YAC/D,IAAI,QAAQ,CAAC,sGAAqB,EAAE,uBAAuB,EAAE,IAAI,EAAC,2BAA2B,EAAE,6WAA6W,CAAC;YAC7c,IAAI,QAAQ,CAAC,sGAAqB,EAAE,uBAAuB,EAAE,IAAI,EAAC,2BAA2B,EAAE,6WAA6W,EAAE,EAAE,IAAI,EAAE,kFAAgB,CAAC,SAAS,CAAC,EAAE,CAAC;YACpf,IAAI,QAAQ,CAAC,iFAAc,EAAE,OAAO,EAAE,OAAO,EAAC,oBAAoB,EAAE,wKAAwK,CAAC;SAC7O,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,qBAAqB,EAAC;YAC1D,IAAI,QAAQ,CAAC,sGAAqB,EAAE,eAAe,EAAE,IAAI,EAAC,2BAA2B,EAAE,wiBAAwiB,CAAC;YAChoB,IAAI,QAAQ,CAAC,oFAAe,EAAE,4BAA4B,EAAE,QAAQ,EAAC,qBAAqB,EAAE,mcAAmc,CAAC;SAChiB,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAC;YAC5C,IAAI,QAAQ,CAAC,6FAAkB,EAAE,YAAY,EAAE,MAAM,EAAC,mBAAmB,EAAE,kEAAkE,CAAC;SAC9I,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;IACtC,CAAC;IAED,YAAY;QACX,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,KAAa;QACnB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAC;YACtC,IAAI,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAChF,IAAG,aAAa,CAAC,MAAM,GAAG,CAAC;gBAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC;SACnE;IACF,CAAC;IAED,SAAS,CAAC,IAAmB;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,SAAS;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,gBAAgB,CAAC,IAAmB,EAAE,WAAmB;QACxD,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QACrF,UAAU,GAAG,UAAU,IAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7F,OAAO,UAAU,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,IAAmB;QAC3B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACrD,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjD,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACrD,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAClD,OAAO,KAAK,CAAC;IACd,CAAC;IA8BD,QAAQ,CAAC,IAAmB;QAC3B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,SAAS;QACR,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;IACf,CAAC;;4FArIW,sBAAsB;sGAAtB,sBAAsB;0EAWN,8DAAgB;;;;;;;QCrE7C,kHAqCM;QACN,kHAIM;QACN,kHAEM;QACN,8MAIc;QACd,kHAOM;;;QA1D8B,4EAAc;QAsCnB,0DAAyB;QAAzB,yFAAyB;QAKA,0DAAyB;QAAzB,yFAAyB;QAQ7C,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;AClDpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACI;AACE;AACI;AACJ;AACJ;AACe;;;;;;;;;;;ICWxC,iFAA4D;IAAA,uDAAiB;IAAA,4DAAa;;;;IAA7C,0EAAc;IAAC,0DAAiB;IAAjB,wFAAiB;;ADJ9F,MAAM,kBAAmB,SAAQ,2EAAiB;IALzD;;QAOQ,mBAAc,GAAe,IAAI,8DAAS,EAAE,CAAC;QAEpD,yBAAoB,GAAe,EAAE,CAAC;KAiEtC;IA/DO,WAAW,CAAC,KAAiB;QACnC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IAED,eAAe;QACd,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,uBAAuB,EAAE,CAAC;QAC1E,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACpE,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACxD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC/C,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC9B,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACpE,IAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,EAAC;oBACxC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;oBAC/B,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC;oBACtB,OAAO;iBACP;gBACD,IAAG,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,EAAC;oBACrC,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,oBAAoB,EAAC,EAAE,6DAA6D;wBACrG,IAAG,CAAC,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG;4BACtB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;qBAClE;oBACD,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC;iBACrC;;oBAEA,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;aAC9B;SACD;IACF,CAAC;IAEM,gBAAgB;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC;QAC5C,IAAI,QAAkB,CAAC;QACvB,IAAG,IAAI,IAAI,gEAAO,CAAC,IAAI,EAAC;YACvB,QAAQ,GAAG,IAAI,4DAAQ,CAAC,WAAW,EAAC,CAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,IAAI,EAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,MAAM,CAAC,CAAC,CAAC;SACvG;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,OAAO,EAAC;YAC/B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,UAAU,EAAC,CAAC,sEAAU,CAAC,GAAG,EAAC,sEAAU,CAAC,IAAI,CAAC,CAAC,CAAC;SACrE;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,GAAG,EAAC;YAC3B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,cAAc,EAAC,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SACzD;aACI,IAAG,IAAI,IAAI,gEAAO,CAAC,IAAI,EAAC;YAC5B,QAAQ,GAAG,IAAI,4DAAQ,CAAC,cAAc,EAAC,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACzD,QAAQ,CAAC,QAAQ,GAAG,kEAAQ,CAAC,KAAK,CAAC;SACnC;aACO,IAAG,IAAI,IAAI,gEAAO,CAAC,UAAU,EAAC;YACrC,QAAQ,GAAG,IAAI,4DAAQ,CAAC,iBAAiB,EAAE,CAAC,sEAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,QAAQ,CAAC,QAAQ,GAAG,kEAAQ,CAAC,UAAU,CAAC;SACxC;QACD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IAEM,iBAAiB;QACvB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,QAAQ;QACd,IAAI,CAAC,GAAG,IAAI,8DAAS,EAAE,CAAC;QACxB,OAAO,CAAC,CAAC,KAAK,CAAC;IAChB,CAAC;;+GApEW,kBAAkB;kGAAlB,kBAAkB;QCd/B,+EAIC;QACG,+EAA2B;QAC3B,yEAC8B;QADH,qJAAa,2BAAyB,IAAC,+FAAe,2BAAuB,IAAtC,qFACzD,uBAAmB,IADsC;QAE9D,qEAAsC;QAC1C,4DAAM;QACV,4DAAM;QACN,yEAA0B;QACtB,+EAAc;QACV,yEAAoC;QAChC,2EAA4B;QAAA,kEAAM;QAAA,8EAAyI;QAAA,4DAAO;QAClL,uEAAK;QACD,qFAA0D;QACtD,kFAA4G;QAAhG,4JAAmB,sBAAkB,SAAE,iBAAa,IAAC;QAC7D,+HAA0F;QAC9F,4DAAa;QACjB,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,kFAMmB;QACvB,4DAAM;QACN,iFAAkB;QACd,mFAGoB;QACxB,4DAAM;QACV,4DAAM;;QAnCN,qGAA0C;QAYkB,2DAA2G;QAA3G,oKAA2G;QAGjF,0DAAyC;QAAzC,oGAAyC;QAC1E,0DAAc;QAAd,oFAAc;QAM3D,0DAAwB;QAAxB,qFAAwB;QASxB,0DAAwB;QAAxB,qFAAwB;;0HDnBnB,kBAAkB;;;;;;;;;;;;;;;;;;;;;AEdgB;AAGF;AACY;AACvC;AAClB,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Client } from 'src/models/Client';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { RequestData, RequestDataHeader } from 'src/models/RequestData';\nimport { arrayEquals, getRateFromOutputRate, sleep, UUID } from 'src/shared/ExtensionMethods';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'client',\n\ttemplateUrl: './client.component.html',\n\tstyleUrls: ['./client.component.scss']\n})\nexport class ClientComponent  extends OperatorComponent implements OnInit{\n\n\tpublic LogicClient : Client = new Client();\n\n\tavailableEndpoints: Endpoint[] = [];\n\tavailableMethods: HTTPMethod[] = [];\n\tprotocol: Protocol;\n\tcanAutoSend: boolean = true;\n\n\tcanSend: boolean = false;\n\tcanEstablishConnection: boolean = false;\n\tcanEndConnection: boolean = false;\n\n\t@ViewChild(\"endpointSelect\") endpointSelect;\n\t@ViewChild(\"methodSelect\") methodSelect;\n\n\tisAutomaticSending = false;\n\n\tngAfterViewInit(): void {\n\t\tthis.Init(true);\n  \t}\n\n\thandleEndpointChange(){\n\t\tthis.LogicClient.options.endpointRef.method = this.LogicClient.options.endpointRef.endpoint.supportedMethods[0];\n\t\tthis.availableMethods = this.endpointSelect.value.supportedMethods;\n\t\tthis.protocol = this.LogicClient.options.endpointRef.endpoint.protocol;\n\t\tthis.afterChange();\n\t}\n\n\tupdateSelection(){\n\t\tthis.LogicClient.updateEndpoint();\n\t\tlet currEdp = this.endpointSelect.value as Endpoint;\n\t\tlet currMth = this.methodSelect.value;\n\t\tthis.LogicClient.options.endpointRef.endpoint = null;\n\t\tthis.endpointSelect.value = null;\n\t\tthis.availableEndpoints = this.LogicClient.getAvailableEndpoints();\n\t\tif(this.availableEndpoints.length == 0){\n\t\t\tthis.availableMethods = [];\n\t\t\tthis.updateCanSendData();\n\t\t\tthis.updateCanEstablishStream();\n\t\t\tthis.updateCanEndStream();\n\t\t\treturn;\n\t\t}\n\t\tif(currEdp != null && currMth != null){\n\t\t\tlet was = false;\n\t\t\tfor(let e of this.availableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\tif(e.url == currEdp.url && arrayEquals(e.supportedMethods,currEdp.supportedMethods)){\n\t\t\t\t\twas = true;\n\t\t\t\t\tthis.LogicClient.options.endpointRef.endpoint = e;\n\t\t\t\t\tthis.endpointSelect.value = e;\n\t\t\t\t\tthis.availableMethods = e.supportedMethods;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.LogicClient.options.endpointRef.method = currMth;\n\t\t\tif(!was){\n\t\t\t\tthis.LogicClient.options.endpointRef.endpoint = this.availableEndpoints[0];\n\t\t\t\tthis.availableMethods = this.LogicClient.options.endpointRef.endpoint.supportedMethods;\n\t\t\t\tthis.LogicClient.options.endpointRef.method = this.availableMethods[0];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tthis.LogicClient.options.endpointRef.endpoint = this.availableEndpoints[0];\n\t\t\tthis.availableMethods = this.LogicClient.options.endpointRef.endpoint.supportedMethods;\n\t\t\tthis.LogicClient.options.endpointRef.method = this.availableMethods[0];\n\t\t}\n\t\tthis.protocol = this.LogicClient.options.endpointRef.endpoint.protocol;\n\t\tthis.updateCanSendData();\n\t\tthis.updateCanEstablishStream();\n\t\tthis.updateCanEndStream();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicClient;\n\t}\n\n\tasync toggleAutomaticSend(){\n\t\tthis.isAutomaticSending = !this.isAutomaticSending;\n\t\tif(this.isAutomaticSending){\n\t\t\tif(this.canAutoSend){\n\t\t\t\tthis.canAutoSend = false;\n\t\t\t\tthis.canAutoSend = await this.stream();\n\t\t\t}\n\t\t}\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tupdateCanSendData(){\n\t\tif(this.LogicClient.options.endpointRef.endpoint == null) {\n\t\t\tthis.canSend = false;\n\t\t\treturn;\n\t\t}\n\t\tthis.canSend = this.LogicClient.options.endpointRef.endpoint.grpcMode != gRPCMode['Server Streaming'] && \n\t\t\tthis.LogicClient.isConnectedToEndpoint || \n\t\t\tthis.LogicClient.options.endpointRef.endpoint.grpcMode == gRPCMode.Unary && this.LogicClient.options.endpointRef.endpoint.protocol != Protocol.WebSockets;\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tupdateCanEstablishStream(){\n\t\tthis.canEstablishConnection = this.LogicClient.options.endpointRef.endpoint != null && \n\t\t(this.LogicClient.options.endpointRef.endpoint.grpcMode != gRPCMode.Unary || \n\t\tthis.LogicClient.options.endpointRef.endpoint.protocol == Protocol.WebSockets) && \n\t\t!this.LogicClient.isConnectedToEndpoint\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tupdateCanEndStream(){\n\t\tthis.canEndConnection = this.LogicClient.options.endpointRef.endpoint != null && \n\t\t(this.LogicClient.options.endpointRef.endpoint.grpcMode != gRPCMode.Unary || \n\t\tthis.LogicClient.options.endpointRef.endpoint.protocol == Protocol.WebSockets) && \n\t\tthis.LogicClient.isConnectedToEndpoint\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tasync stream(){\n\t\tawait sleep( (1 / getRateFromOutputRate(this.LogicClient.options.outputRate)) * 1000);\n\t\tthis.updateCanSendData();\n\t\tif(!this.isAutomaticSending || !this.canSend) \n\t\t\treturn true;\n\t\tthis.sendData();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t\treturn await this.stream();\n\t}\n\n\tasync sendData(){\n\t\tlet request = new RequestData();\n\n\t\trequest.header = new RequestDataHeader(this.LogicClient.options.endpointRef, this.LogicClient.options.protocol)\n\t\trequest.origin = this.LogicClient.outputPort.connections[0];\n\t\trequest.originID = this.LogicClient.originID;\n\t\tif(this.LogicClient.connectedId != null) {\n\t\t\trequest.requestId = this.LogicClient.connectedId;\n\t\t\trequest.header.stream = true;\n\t\t}\n\t\telse\n\t\t\trequest.requestId = UUID();\n\t\tlet res = this.LogicClient.sendData(request);\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t\tthis.updateSelection();\n\t\tif(! (await res)){\n\t\t\tthis.isAutomaticSending = false;\n\t\t\tthis.canAutoSend = true;\n\t\t\tif(this.isReadOnly)\n\t\t\t\tthis.cdRef.detectChanges();\n\t\t}\n\t}\n\n\testablishConnection(){\n\t\tif(this.LogicClient.isConnectedToEndpoint) \n\t\t\treturn;\n\t\tthis.LogicClient.isConnectedToEndpoint = true;\n\t\t\n\t\tlet id = UUID();\n\t\tlet request = new RequestData();\n\t\trequest.header = new RequestDataHeader(this.LogicClient.options.endpointRef, this.LogicClient.options.protocol, true);\n\t\trequest.origin = this.LogicClient.outputPort.connections[0];\n\t\trequest.originID = this.LogicClient.originID;\n\t\trequest.requestId = id;\n\t\tthis.LogicClient.connectedId = id;\n\t\tthis.LogicClient.sendData(request);\n\n\t\tthis.updateSelection();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tasync endConnection(){\n\t\tif(!this.LogicClient.isConnectedToEndpoint) \n\t\t\treturn;\n\t\t\n\t\tlet id = this.LogicClient.connectedId;\n\t\tif(id == null) \n\t\t\treturn;\n\t\tlet request = new RequestData();\n\t\trequest.header = new RequestDataHeader(this.LogicClient.options.endpointRef, this.LogicClient.options.protocol, false);\n\t\trequest.origin = this.LogicClient.outputPort.connections[0];\n\t\trequest.originID = this.LogicClient.originID;\n\t\trequest.requestId = id;\n\t\tthis.LogicClient.connectedId = null;\n\t\tthis.canAutoSend = true;\n\t\tthis.isAutomaticSending = false;\n\t\tawait this.LogicClient.sendData(request);\n\t\tthis.LogicClient.isConnectedToEndpoint = false;\n\n\t\tthis.updateSelection();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new Client();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[class.side-menu]=\"isReadOnly\"\n[style.left.px]=\"LogicClient.options.X \"\n[style.top.px]=\"LogicClient.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/client.svg\">\n    </div>    \n</div>\n<div *ngIf=\"isReadOnly\" \n[style.left.px]=\"LogicClient.options.X \"\n[style.top.px]=\"LogicClient.options.Y\" class=\"read-only-controls\">\n    <button class=\"icon\" (click)=\"sendData()\" *ngIf=\"canSend\">\n        <img src=\"./assets/send.svg\">\n    </button>\n    <button *ngIf=\"canEstablishConnection\"(click)=\"establishConnection()\">\n        Establish<br>Connection\n    </button>\n    <button class=\"bottom\" *ngIf=\"canEndConnection\"(click)=\"endConnection()\">\n        End<br>Connection\n    </button>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div>\n            <div class=\"options-endpoint\">\n                <span class=\"property-name endpoint-title\">Target Endpoint: <info-tooltip [Message]=\"'The endpoint that data will be sent to using selected method.'\"></info-tooltip></span>\n                <div class=\"endpoint-protocol\">\n                    <span>{{ Protocol[protocol] }}</span>\n                </div>\n            </div>\n            <div class=\"options-endpoint\">\n                <mat-form-field appearance=\"fill\" class=\"endpoint-url\">\n                    <mat-select #endpointSelect (selectionChange)=\"handleEndpointChange()\" [(ngModel)]=\"LogicClient.options.endpointRef.endpoint\">\n                      <mat-option *ngFor=\"let endpoint of availableEndpoints\" [value]=\"endpoint\">{{endpoint.url}}</mat-option>\n                    </mat-select>\n                    <ng-template #emptyEndpoint>\n                        <mat-select value=\"/\" disabled>\n                            <mat-option value=\"/\">/</mat-option>\n                        </mat-select>\n                    </ng-template>\n                </mat-form-field>\n                <mat-form-field style=\"display: flex;\" appearance=\"fill\" class=\"endpoint-method\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicClient.options.endpointRef.method\" #methodSelect>\n                      <mat-option *ngFor=\"let method of availableMethods\" [value]=\"method\">{{ formatMethod(HTTPMethod[method+''], protocol == Protocol.Database) }}</mat-option>\n                    </mat-select>\n                    <ng-template #emptyMethod>\n                        <mat-select value=\"GET\" disabled>\n                            <mat-option value=\"GET\">GET</mat-option>\n                        </mat-select>\n                    </ng-template>\n                </mat-form-field>\n            </div>\n        </div>\n        <slider-described class=\"mt\"\n        [Model]=\"LogicClient\"\n        [Title]=\"'Output rate'\"\n        [Property]=\"'outputRate'\"\n        [AfterChange]=\"afterChange\"\n        [Tooltip]=\"'Change the speed at which data is sent.'\"\n        ></slider-described>\n    </div>\n    <div #actions>\n        <div class=\"options-actions\">\n            <div class=\"actions-container\">\n                <button *ngIf=\"canEstablishConnection\"\n                 (click)=\"establishConnection()\">Establish Connection</button>\n                <button *ngIf=\"canEndConnection\"\n                 (click)=\"endConnection()\">End Connection</button>\n                <div>\n                    <button [disabled]=\"!canSend\"\n                    (click)=\"sendData()\">Send Data</button>\n                    <span [class.active]=\"isAutomaticSending\" [class.inactive]=\"!isAutomaticSending\" [class.disabled]=\"!canSend\" (click)=\"toggleAutomaticSend()\" class=\"options-button-icon inactive auto-send\"><i class=\"fas fa-sync-alt\"></i></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TextField } from 'src/models/TextField';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n  \tselector: 'textfield',\n\ttemplateUrl: './textfield.component.html',\n\tstyleUrls: ['./textfield.component.scss']\n})\nexport class TextfieldComponent extends OperatorComponent implements OnInit{\n\n\tpublic LogicTextField : TextField = new TextField();\n\n  \t@ViewChild(\"field\") field: ElementRef;\n\n\tngAfterViewInit(): void {\n\t\tsuper.Init(false);\n\t\tthis.field.nativeElement.addEventListener('keydown', function(e) {\n\t\t\tif (e.key == 'Tab') {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar start = this.selectionStart;\n\t\t\t\tvar end = this.selectionEnd;\n\t\t\t\n\t\t\t\tthis.value = this.value.substring(0, start) +\n\t\t\t\t\t\"\\t\" + this.value.substring(end);\n\t\t\t\n\t\t\t\tthis.selectionStart =\n\t\t\t\t\tthis.selectionEnd = start + 1;\n\t\t\t}\n\t\t});\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic handleMousedown(event){\n\t\tif(this.selectionService.currentSelections.indexOf(this) == -1)\n\t\t\tsuper.handleMousedown(event);\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicTextField;\n\t}\n\n\ttoggleBold(){\n\t\tthis.LogicTextField.options.isBold = !this.LogicTextField.options.isBold;\n\t}\n\n\ttoggleItalic(){\n\t\tthis.LogicTextField.options.isItalic = !this.LogicTextField.options.isItalic;\n\t}\n\n\tresize(e){\n\t\tthis.LogicTextField.options.width = e.width;\n\t\tthis.LogicTextField.options.height = e.height;\n\t}\n}","<div\n#anchorRef\n(mousedown)=\"handleMousedown( $event )\"\n(touchstart)=\"handleMousedown($event)\"\n(click)=\"handleClick($event)\"\n[style.left.px]=\"LogicTextField.options.X \"\n[style.top.px]=\"LogicTextField.options.Y\" \n>\n    <textarea [class.bold]=\"LogicTextField.options.isBold\" [class.italic]=\"LogicTextField.options.isItalic\" \n    [style.font-size]=\"LogicTextField.options.fontSize + 'px'\" spellcheck=\"false\" \n    [(ngModel)]=\"LogicTextField.options.title\" maxlength=\"250\" #field class=\"img-container\"\n    [style.width]=\"LogicTextField.options.width+'px'\" [style.height]=\"LogicTextField.options.height+'px'\"\n    [style.backgroundColor]=\"LogicTextField.options.backgroundColor\" [style.color]=\"LogicTextField.options.color\" \n    (resize)=\"resize($event)\"></textarea>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div>\n            <span class=\"property-name\">Font Size:</span>\n            <div class=\"text-format-container\">\n                <mat-form-field appearance=\"fill\" class=\"endpoint-url\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicTextField.options.fontSize\">\n                        <mat-option [value]=\"8\">8px</mat-option>\n                        <mat-option [value]=\"10\">10px</mat-option>\n                        <mat-option [value]=\"12\">12px</mat-option>\n                        <mat-option [value]=\"14\">14px</mat-option>\n                        <mat-option [value]=\"16\">16px</mat-option>\n                        <mat-option [value]=\"18\">18px</mat-option>\n                        <mat-option [value]=\"20\">20px</mat-option>\n                    </mat-select>\n                    <ng-template #emptyEndpoint>\n                        <mat-select value=\"/\" disabled>\n                            <mat-option value=\"/\">/</mat-option>\n                        </mat-select>\n                    </ng-template>\n                </mat-form-field>\n                <span (click)=\"toggleBold(); afterChange()\" [class.inactive]=\"!LogicTextField.options.isBold\" [class.active]=\"LogicTextField.options.isBold\" class=\"options-button-icon\">\n                    <i class=\"fas fa-bold\"></i>\n                </span>\n                <span (click)=\"toggleItalic(); afterChange()\" [class.inactive]=\"!LogicTextField.options.isItalic\" [class.active]=\"LogicTextField.options.isItalic\" class=\"options-button-icon\">\n                    <i class=\"fas fa-italic\"></i>\n                </span>\n            </div>\n            <span class=\"property-name\">Color:</span>\n            <div class=\"text-format-contianer\">\n                <input [value]=\"LogicTextField.options.color\"\n                    [cpPosition]=\"'top-right'\"\n                    [(colorPicker)]=\"LogicTextField.options.color\"\n                    [cpPosition]=\"'top'\"/>\n      \n            </div>\n            <span class=\"property-name\">Background color:</span>\n            <div class=\"text-format-contianer\">\n                <input [value]=\"LogicTextField.options.backgroundColor\"\n                    [cpPosition]=\"'top-right'\"\n                    [(colorPicker)]=\"LogicTextField.options.backgroundColor\"\n                    [cpPosition]=\"'top'\"/>\n      \n            </div>\n        </div>\n    </div>\n</div>","<header>\n    <div>\n        <a routerLink=\"/\" class=\"nav-title\">\n            <img src=\"./assets/logo.svg\" >\n            <p class=\"nav-title-brand\">Systemizer</p>\n        </a>\n    </div>\n    <div class=\"nav-right\">\n        <div class=\"mode-switch\" [class.dark]=\"viewingService.isDarkMode()\" (click)=\"viewingService.setDarkMode(!this.viewingService.isDarkMode())\">\n            <span *ngIf=\"viewingService.isDarkMode(); else lightMode\" class=\"light\"><i class=\"fas fa-moon\"></i></span>\n            <ng-template #lightMode>\n                <span class=\"dark\"><i class=\"fas fa-sun\"></i></span>\n            </ng-template>\n        </div>\n        <a href=\"https://github.com/honzaap/Systemizer\" target=\"_blank\" class=\"btn-github-slide\">\n            <span class=\"text\">\n                Fork&nbsp;us!\n            </span>\n            <span class=\"icon\">\n                <i class=\"fab fa-github\"></i>\n            </span>\n        </a>\n        <a routerLink=\"create\" class=\"btn-main\">Get started</a>\n    </div>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { ViewingService } from 'src/app/viewing.service';\n\n@Component({\n  selector: 'pages-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class PagesHeaderComponent implements OnInit {\n\n  constructor(public viewingService: ViewingService) { }\n\n  ngOnInit(): void {\n  }\n}\n","import { Technology } from \"./enums/Technology\";\n\nexport class Options{\n    title: string = \"Component\";\n    X: number = 0;\n    Y: number = 0;\n    technology: Technology;\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\n\nexport class APIGateway extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    options: APIGatewayOptions;\n    color = \"#2C5364\";\n\n    constructor() {\n        super()\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);       \n        this.options = new APIGatewayOptions(); \n        this.options.title = \"API Gateway\";\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId]\n            if(targetConnection == null) // connection could be ended before last data was sent\n                return; \n            // Checking if endpoint wasn't removed before stream end\n            this.fireReceiveData(data);\n            if(data.header.stream){\n                let hasAction = false;\n\n                this.getEndpoints().forEach(endpoint => {\n                    endpoint.actions.forEach(action => {\n                        if(action.endpoint.url === data.header.endpoint.endpoint.url &&\n                        arrayEquals(action.endpoint.supportedMethods, data.header.endpoint.endpoint.supportedMethods)){\n                            hasAction = true;\n                        }\n                    })\n                })\n                if(!hasAction){ // send end of stream to out if the action no longer exists\n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let result = this.outputPort.sendData(data,data.origin)\n                    if(result)\n                        this.connectionTable[data.responseId] = null;\n                    return;\n                }\n                let result = await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n                if(!result && data.header.stream){ // send end stream to out if the client doesn't exist \n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let res = this.outputPort.sendData(data,data.origin)\n                    if(res)\n                        this.connectionTable[data.responseId] = null;\n                }\n            }\n            else{\n                if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"])\n                    await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n            }\n        }\n        else{\n            if(data.requestId == \"\" || data.requestId == null) throw new Error(\"Request ID can not be null\");\n            if(data.header.endpoint == null) throw new Error(\"Endpoint can not be null\")\n\n            let targetEndpoint = this.getTargetEndpoint(data);\n            if(targetEndpoint == null)\n                return;\n\n            this.fireReceiveData(data);\n            this.requestReceived();\n\n            let sendResponse = false;\n            let isFirstStreamRequest = this.connectionTable[data.requestId] == null && data.header.stream;\n            let isLastStreamRequest = this.connectionTable[data.requestId] != null && !data.header.stream;\n            let dontSendRequestResponse = (isFirstStreamRequest || isLastStreamRequest);\n\n            if(!await this.throttleThroughput(5000)){\n                this.requestProcessed();\n                return;\n            }\n\n            // Send data to every action \n            for(let action of targetEndpoint.actions){\n                // Get connection to given action endpoint\n                if(action.endpoint == null || action.endpoint.url == null)\n                    continue;\n                let targetConnection: Connection;\n                for(let connection of this.outputPort.connections){\n                    let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                    if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                        targetConnection = connection;\n                        break;\n                    }\n                }\n                if(targetConnection == null)\n                    continue;\n\n                let isStream = action.endpoint.protocol == Protocol.WebSockets || action.endpoint.grpcMode != gRPCMode.Unary;\n                if(data.header.stream && isStream && action.endpoint.grpcMode == gRPCMode[\"Server Streaming\"] \n                && !dontSendRequestResponse || dontSendRequestResponse && !isStream) {\n                    continue;\n                }\n\n                let requestId = (isStream && !data.header.stream && !isLastStreamRequest) ? UUID() : data.requestId;\n                let request = new RequestData();\n                let epRef = new EndpointRef();\n                epRef.endpoint = action.endpoint;\n                epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n                \n                request.header = new RequestDataHeader(epRef, action.endpoint.protocol, data.header.stream);\n\n                request.origin = targetConnection;\n                request.originID = this.originID;\n                request.requestId = requestId;\n\n                if(isStream)\n                    this.outputPort.sendData(request, targetConnection);\n                else{\n                    if(!data.header.stream) \n                        sendResponse = true;\n                    if(action.asynchronous){\n                        this.outputPort.sendData(request, targetConnection);\n                    }\n                    else{\n                        await this.outputPort.sendData(request, targetConnection);\n                        if(data.sendResponse)\n                            this.connectionTable[requestId] = data.origin;\n                    }\n                }\n            }\n\n            this.requestProcessed();\n            if(isFirstStreamRequest)\n                this.connectionTable[data.requestId] = data.origin;\n            if(targetEndpoint.grpcMode == gRPCMode[\"Server Streaming\"]) {\n                if(isFirstStreamRequest){\n                    // Initiate server stream \n                    this.serverStream(this.getResponse(data), targetEndpoint);\n                }\n                if(isLastStreamRequest)\n                    this.connectionTable[data.requestId] = null;\n            }\n            if((sendResponse || targetEndpoint.actions.length == 0 && !data.header.stream) && data.sendResponse){\n                // Send response back\n                this.connectionTable[data.requestId] = data.origin;\n                await this.sendData(this.getResponse(data));\n            }\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            return;\n        let result = await this.inputPort.sendData(response, targetConnection);\n        if(!result && response.header.stream){\n            response.header.stream = false;\n            response.requestId = response.responseId;\n            response.responseId = null;\n            let res = this.outputPort.sendData(response,response.origin)\n            if(res){\n                this.connectionTable[response.responseId] = null;\n            }\n        }\n        else{\n            this.connectionTable[response.responseId] = null;\n        }\n    }\n\n    async serverStream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        if(streamingEndpoint.actions.filter(action => action.endpoint.grpcMode != gRPCMode[\"Server Streaming\"]).length == 0 || this.connectionTable[data.responseId] == null || (\n            streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"]) ||\n            this.getEndpoints().indexOf(streamingEndpoint) == -1) return;\n\n        for(let action of streamingEndpoint.actions){\n            // Get connection to given action endpoint\n            if(action.endpoint == null || action.endpoint.url == null || action.endpoint.grpcMode != gRPCMode.Unary || action.endpoint.protocol == Protocol.WebSockets)\n                continue;\n\n            let targetConnection: Connection;\n            for(let connection of this.outputPort.connections){\n                let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                    targetConnection = connection;\n                    break;\n                }\n            }\n            if(targetConnection == null)\n                continue;\n\n            let newReqId = UUID();\n            this.connectionTable[newReqId] = data.origin\n            let request = new RequestData();\n            let epRef = new EndpointRef();\n            epRef.endpoint = action.endpoint;\n            epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n\n            request.header = new RequestDataHeader(epRef, action.endpoint.protocol);\n            request.origin = targetConnection;\n            request.originID = this.originID;\n            request.requestId = newReqId;\n            await this.outputPort.sendData(request, targetConnection);\n        }\n\n        await this.sendData(data);\n        await this.serverStream(data, streamingEndpoint);\n    }\n\n    getEndpoints() : Endpoint[]{\n        return this.options.restEndpoints\n            .concat(this.options.rpcEndpoints)\n            .concat(this.options.grpcEndpoints)\n            .concat(this.options.graphqlEndpoints)\n            .concat(this.options.websocketsEndpoints);\n    }\n}\n\nexport class APIGatewayOptions extends EndpointOptions{\n    restEndpoints: Endpoint[] = [];\n    rpcEndpoints: Endpoint[] = [];\n    graphqlEndpoints: Endpoint[] = [];\n    grpcEndpoints: Endpoint[] = [];\n    websocketsEndpoints: Endpoint[] = [];\n}","import { Injectable } from '@angular/core';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class SimulationService {\n\n\tpublic isFlowSimulationOn: boolean = false;\n\tpublic isSimulationCardOpen: boolean = false;\n\tpublic Model: IDataOperator;\n\n\tconstructor() { }\n\n\tstartFlowSimulation(){\n\t\tthis.isFlowSimulationOn = true;\n\t}\n\n\tstopFlowSimulation(){\n\t\tthis.isFlowSimulationOn = false;\n\t\tthis.closeSimulationCard();\n\t}\n\n\tcloseSimulationCard(){\n\t\tthis.isSimulationCardOpen = false;\n\t\tthis.Model = null;\n\t}\n\n\topenSimulationCard(model: IDataOperator){\n\t\tthis.Model = model;\n\t\tthis.isSimulationCardOpen = true;\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pages-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"about\">\n        <img class=\"logo\" src=\"./assets/logo.svg\">\n        <p>Systemizer is a system design tool. Visualize your system with customizable components.</p>\n    </div>\n    <div class=\"links\">\n        <div>\n            <h4>Help</h4>\n            <ul>\n                <li><a routerLink=\"getting-started\">Getting started</a></li>\n                <li><a routerLink=\"create\" [queryParams]=\"{'showOnboardTutorial': true}\">Onboard tutorials</a></li>\n            </ul>\n        </div>\n        <div>\n            <ul class=\"contact\">\n                <li class=\"link-icon\"><i class=\"fas fa-question\"></i><a target=\"_blank\" href=\"https://github.com/honzaap/Systemizer/discussions\">Need help?</a></li>\n                <li class=\"link-icon\"><i class=\"fas fa-bug\"></i><a target=\"_blank\" href=\"https://github.com/honzaap/Systemizer/issues\">Report a bug</a></li>\n            </ul>\n        </div>\n        <div class=\"links-other\">\n            <a target=\"_blank\" href=\"https://github.com/honzaap/Systemizer\"><i class=\"fab fa-github\"></i> Contribute</a>\n        </div>\n    </div>\n</footer>","import { Injectable } from '@angular/core';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { APIGateway } from 'src/models/APIGateway';\nimport { ClientCluster } from 'src/models/ClientCluster';\nimport { Technology } from 'src/models/enums/Technology';\nimport { MessageQueue } from 'src/models/MessageQueue';\nimport { Port } from 'src/models/Port';\nimport { TextField } from 'src/models/TextField';\nimport { createRoundedPath, UUID } from 'src/shared/ExtensionMethods';\nimport { PlacingService } from './placing.service';\nimport { SavingService } from './saving.service';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ExportService {\n\n\tprivate svgns = \"http://www.w3.org/2000/svg\";\n\n  \tconstructor(private placingService: PlacingService, private savingService: SavingService) { }\n\n\tpublic getComponentSize(component: IDataOperator){\n\t\tif(component instanceof TextField)\n\t\t\treturn {width: component.options.width, height: component.options.height};\n\t\treturn {width: component instanceof MessageQueue ? 80 : 40, height: component instanceof APIGateway || component instanceof ClientCluster ? 80 : 40}\n\t}\n\n\tconvertTechnology(tech: Technology){\n\t\treturn Technology[tech].toLowerCase().replace(/ /g,'').replace(/#/g, 'sharp');\n\t}\n\n  \tasync getCanvas(components: IDataOperator[], options: ExportPngOptions){\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\tcanvas.width = this.placingService.boardWidth;\n\t\tcanvas.height = this.placingService.boardHeight;\n\t\tlet offsetX = 0;\n\t\tlet offsetY = 0;\n\t\tif(options.captureUsed){ // Crop the board\n\t\t\tlet {minX, minY, maxX, maxY} = this.captureUsedArea(components);\n\t\t\toffsetX = Math.max(0, minX - 40);\n\t\t\toffsetY = Math.max(0, minY - 40);\n\t\t\tcanvas.width = Math.min(this.placingService.boardWidth, maxX + 40 - offsetX);\n\t\t\tcanvas.height = Math.min(this.placingService.boardHeight, maxY + 40 - offsetY);\n\t\t}\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tif(!options.transparentBackground){\n\t\t\tctx.fillStyle = options.lightMode ? \"#fff\" : \"#282A37\";\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t}\n\t\tfor(let component of components){\n\t\t\t// Render component\n\t\t\tctx.beginPath()\n\t\t\tctx.fillStyle = component.color;\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\n\t\t\t// Render image\n\t\t\tif(component instanceof TextField){\n\t\t\t\tctx.fillStyle = component.options.backgroundColor;\n\t\t\t\tctx.strokeStyle = \"rgba(0, 0, 0, 0.1)\";\n\t\t\t\tctx.lineWidth = 2;\n\t\t\t\tctx.rect(component.options.X - offsetX, component.options.Y - offsetY, component.options.width, component.options.height);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.fillStyle = component.options.color;\n\t\t\t\tctx.font = `${component.options.isBold ? \"bold\" : \"\"}  ${component.options.isItalic ? \"italic\" : \"\"} ${component.options.fontSize}px Arial`;\n\t\t\t\tctx.textAlign = 'left'\n\t\t\t\tctx.textBaseline = 'alphabetic'\n\t\t\t\tthis.wrapCanvasText(ctx, component.options.title, component.options.X - offsetX + 3, component.options.Y - offsetY + component.options.fontSize + 3,  component.options.width - 6, component.options.height - 6, component.options.fontSize+3)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tctx.fillRect(component.options.X - offsetX, component.options.Y - offsetY, width, height);\n\t\t\t\tlet img = new Image();\n\t\t\t\tawait new Promise(r => {img.onload=r ; img.src=`./assets/${this.savingService.getComponentType(component).toLowerCase()}.svg`});\n\t\t\t\tctx.drawImage(img, component.options.X - offsetX + width/2 - 20 + 7, component.options.Y - offsetY + height/2 - 20 + 7, 26, 26);\n\t\t\t\tif(options.showTitles)\n\t\t\t\t\tthis.renderComponentTitleToCanvas(ctx, component, options.transparentBackground ? options.lightTitles : !options.lightMode, offsetX, offsetY);\n\t\t\t}\n\t\t\tctx.fillStyle = options.lightMode ? \"#fff\" : \"#282A37\"\n\t\t\tctx.lineWidth = 2;\n\t\t\tif(component[\"inputPort\"]){ \n\t\t\t\t// Render connections\n\t\t\t\tthis.renderConnectionsToCanvas(ctx, options.transparentBackground ? options.lightTitles : !options.lightMode, component, offsetX, offsetY);\n\t\t\t}\n\t\t}\n\t\tfor(let component of components){\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tif(component.options.technology != null && component.options.technology != 0 && options.showTechnologies){\n\t\t\t\tlet img = new Image();\n\t\t\t\tawait new Promise(r => {img.onload=r ; img.src=`./assets/technologies/${this.convertTechnology(component.options.technology)}.svg`});\n\t\t\t\tctx.drawImage(img, component.options.X - offsetX + width - 10, component.options.Y - offsetY - 10, 20, 20);\n\t\t\t}\n\t\t}\n\t\tctx.fillStyle = \"#282A37\";\n\t\tthis.renderPortsToCanvas(ctx, components, offsetX, offsetY);\n\t\treturn canvas;\n\t}\n\n\tprivate wrapCanvasText(context: CanvasRenderingContext2D, text: string, x: number, y: number, maxWidth: number, maxHeight: number, lineHeight: number) {\n        let line = '';\n\t\tlet height = lineHeight;\n\t\tfor(let letter of text){\n\t\t\tvar newLine = line + letter;\n\t\t\tvar metrics = context.measureText(newLine);\n\t\t\tvar newWidth = metrics.width;\n\t\t\tif(newWidth > maxWidth){\n\t\t\t\tcontext.fillText(line, x, y);\n\t\t\t\tline = letter;\n\t\t\t\ty += lineHeight;\n\t\t\t\theight += lineHeight;\n\t\t\t\tif(height >= maxHeight){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tline = newLine;\n\t\t\t}\n\t\t}\n        context.fillText(line, x, y);\n\t}\n\n\tprivate renderPortsToCanvas(ctx: CanvasRenderingContext2D, components: IDataOperator[], offsetX: number, offsetY: number){\n\t\tfor(let component of components){ // Render ports (render them over connections)\n\t\t\tctx.strokeStyle = component.color;\n\t\t\tctx.lineWidth = 2;\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tif(component[\"inputPort\"] && component[\"inputPort\"].connections.length > 0){ // Render input port\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.arc(component.options.X - offsetX - 12, component.options.Y - offsetY + height/2, 7.5, 0, 2 * Math.PI, false);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t\tif(component[\"outputPort\"] && component[\"outputPort\"].connections.length > 0){ // Render output port\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.arc(component.options.X - offsetX + width + 12, component.options.Y - offsetY + height/2, 7.5, 0, 2 * Math.PI, false);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderConnectionsToCanvas(ctx: CanvasRenderingContext2D, lightMode: boolean, component: IDataOperator, offsetX: number, offsetY: number){\n\t\tfor(let connection of (component[\"inputPort\"] as Port).connections){\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tlet component2 = connection.getOtherPort(component[\"inputPort\"]).parent;\n\t\t\tlet size2 = this.getComponentSize(component2);\n\t\t\tvar grad= ctx.createLinearGradient(component.options.X - offsetX, component.options.Y - offsetY,\n\t\t\t\t component2.options.X - offsetX + size2.width, component2.options.Y - offsetY + size2.height);\n\t\t\tgrad.addColorStop(0, component.color);\n\t\t\tgrad.addColorStop(1, component2.color);\n\t\t\tctx.strokeStyle = grad;\n\t\t\tlet comp2 = connection.getOtherPort(component[\"inputPort\"]).parent;\n\t\t\tlet comp2Size = this.getComponentSize(comp2);\n\t\t\tlet comp2Width = comp2Size.width;\n\t\t\tlet comp2Height = comp2Size.height;\n\t\t\tif(connection.lineBreaks == null || connection.lineBreaks.length == 0){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(component.options.X - offsetX - 12, component.options.Y - offsetY + height/2);\n\t\t\t\tctx.lineTo(comp2.options.X - offsetX + comp2Width + 12, comp2.options.Y - offsetY + comp2Height/2);\n\t\t\t\tctx.stroke()\n\t\t\t\tctx.closePath() \n\t\t\t}\n\t\t\telse{\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(connection.lineBreaks[0].x - offsetX, connection.lineBreaks[0].y - offsetY);\n\t\t\t\tctx.closePath() \n\t\t\t\tfor(let lineBreak of connection.lineBreaks){\n\t\t\t\t\tctx.lineTo(lineBreak.x - offsetX, lineBreak.y - offsetY);\n\t\t\t\t\tctx.stroke()\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tif(connection.lineBreaks && connection.title){\n\t\t\t\t// Draw text along the path\n\t\t\t\tctx.font=\"12px Arial\";\n\t\t\t\tctx.textBaseline = \"bottom\";\n\t\t\t\tctx.strokeStyle = \"transparent\";\n\t\t\t\tctx.fillStyle = lightMode ? \"#dadada\" : \"#454545\";\n\t\t\t\tlet lineBreaks = [];\n\t\t\t\tconnection.lineBreaks.forEach(br => {lineBreaks.push(...[br.x - offsetX, br.y - offsetY]);});\n\t\t\t\t(ctx as any).textPath(connection.title || \"\", lineBreaks);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderComponentTitleToCanvas(ctx: CanvasRenderingContext2D, component: IDataOperator, lightMode: boolean, offsetX: number, offsetY: number){\n\t\tlet {width, height} = this.getComponentSize(component);\n\t\tctx.fillStyle = lightMode ? \"#c9c9c9\" : \"#454545\";\n\t\tctx.setLineDash([0]);\n\t\tctx.font = 'normal 12px Arial'\n\t\tctx.textAlign = 'center'\n\t\tctx.textBaseline = 'alphabetic'\n\t\tctx.fillText(component.options.title, component.options.X - offsetX+width/2, component.options.Y - offsetY - 10)\n\t\n\t}\n\n\tprivate wrapSvgText(svg: SVGElement, text: string, color: string, x: number, y: number, maxWidth: number, maxHeight: number, lineHeight: number, fontSize: number, isBold = false, isItalic = false) {\n        let line = '';\n\t\tlet height = lineHeight;\n\n\t\tfor(let letter of text){\n\t\t\tvar newLine = line + letter;\n\t\t\tlet newSvgLine = this.createSvgText(newLine, color, x, y, fontSize, isBold, isItalic);\n\t\t\tsvg.appendChild(newSvgLine);\n\t\t\tlet newWidth = newSvgLine.getComputedTextLength()\n\t\t\tsvg.removeChild(newSvgLine);\n\t\t\tif(newWidth > maxWidth){\n\t\t\t\tlet newText = this.createSvgText(line, color, x, y, fontSize, isBold, isItalic);\n\t\t\t\tsvg.appendChild(newText);\n\t\t\t\tline = letter;\n\t\t\t\ty += lineHeight;\n\t\t\t\theight += lineHeight;\n\t\t\t\tif(height >= maxHeight){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tline = newLine;\n\t\t\t}\n\t\t}\n\t\tlet newText = this.createSvgText(line, color, x, y, fontSize, isBold, isItalic);\n\t\tsvg.appendChild(newText);\n\t}\n\n\tprivate createSvgText(text, color: string, x, y, fontSize, isBold = false, isItalic = false){\n\t\tlet textSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n\t\ttextSvg.setAttributeNS(null,\"x\",(x).toString());     \n\t\ttextSvg.setAttributeNS(null,\"y\",(y).toString()); \n\t\ttextSvg.setAttributeNS(null,\"font-size\",`${fontSize}px`);\n\t\ttextSvg.setAttributeNS(null,\"font-family\",'Arial');\n\t\ttextSvg.setAttributeNS(null,\"font-weight\",`${isBold ? \"bold\" : \"normal\"}`);\n\t\ttextSvg.setAttributeNS(null,\"font-style\",`${isItalic ? \"italic\" : \"normal\"}`);\n\t\ttextSvg.setAttributeNS(null,\"fill\", color);\n\t\ttextSvg.textContent = text;\n\t\treturn textSvg;\n\t}\n\n\t/**\n\t * Returns minimal and maximal x and y coordinates of the given components\n\t */\n\tprivate captureUsedArea(components: IDataOperator[]){\n\t\tlet minX = Number.MAX_VALUE;\n\t\tlet minY = Number.MAX_VALUE;\n\t\tlet maxX = 0;\n\t\tlet maxY = 0;\n\t\tfor(let component of components){\n\t\t\tlet width: number;\n\t\t\tlet height: number;\n\t\t\tif(component instanceof TextField){\n\t\t\t\twidth = component.options.width;\n\t\t\t\theight = component.options.height;\t\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlet sizes = this.getComponentSize(component);\n\t\t\t\twidth = sizes.width;\n\t\t\t\theight = sizes.height;\n\t\t\t}\n\n\t\t\tlet outputPort = component[\"outputPort\"]\n\t\t\tif(outputPort){\n\t\t\t\tlet connections = outputPort.connections;\n\t\t\t\tconnections.forEach(connection => {\n\t\t\t\t\tconnection.lineBreaks.forEach(lineBreak => {\n\t\t\t\t\t\tminX = Math.min(minX, lineBreak.x);\n\t\t\t\t\t\tminY = Math.min(minY, lineBreak.y);\n\t\t\t\t\t\tmaxX = Math.max(maxX, lineBreak.x);\n\t\t\t\t\t\tmaxY = Math.max(maxY, lineBreak.y);\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tminX = Math.min(minX, component.options.X);\n\t\t\tminY = Math.min(minY, component.options.Y);\n\t\t\tmaxX = Math.max(maxX, component.options.X + width);\n\t\t\tmaxY = Math.max(maxY, component.options.Y + height);\n\t\t}\n\t\treturn {minX, minY, maxX, maxY};\n\t}\n\n\tasync getSvg(components: IDataOperator[], options: ExportSvgOptions){\n\t\tif(components.length == 0)\n\t\t\treturn null;\n\t\tlet svg = document.createElementNS(this.svgns, \"svg\") as SVGElement;\n\t\tdocument.getElementsByTagName(\"body\")[0].appendChild(svg);\n\t\tlet offsetX = 0;\n\t\tlet offsetY = 0;\n\t\t// Crop the board\n\t\tlet {minX, minY, maxX, maxY} = this.captureUsedArea(components);\n\t\toffsetX = Math.max(0, minX - 40);\n\t\toffsetY = Math.max(0, minY - 40);\n\t\tsvg.setAttribute(\"width\", `${Math.min(this.placingService.boardWidth, maxX + 40 - offsetX)}`);\n\t\tsvg.setAttribute(\"height\", `${Math.min(this.placingService.boardHeight, maxY + 40 - offsetY)}`);\n\t\tfor(let component of components){\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\n\t\t\t// Render image\n\t\t\tif(component instanceof TextField){\n\t\t\t\tlet rect = document.createElementNS(this.svgns, 'rect');\n\t\t\t\trect.setAttributeNS(null, 'x', (component.options.X - offsetX).toString());\n\t\t\t\trect.setAttributeNS(null, 'y', (component.options.Y - offsetY).toString());\n\t\t\t\trect.setAttributeNS(null, 'width', component.options.width.toString());\n\t\t\t\trect.setAttributeNS(null, 'height', component.options.height.toString());\n\t\t\t\trect.setAttributeNS(null, 'fill', component.options.backgroundColor);\n\t\t\t\trect.setAttributeNS(null, 'stroke-width', '2');\n\t\t\t\trect.setAttributeNS(null, 'stroke', \"rgba(0, 0, 0, 0.1)\");\n\t\t\t\tsvg.appendChild(rect);\n\t\t\t\tthis.wrapSvgText(svg, component.options.title, component.options.color, component.options.X - offsetX + 3, component.options.Y - offsetY + component.options.fontSize + 3, component.options.width - 6, component.options.height - 6, component.options.fontSize, component.options.fontSize, component.options.isBold, component.options.isItalic);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlet rect = document.createElementNS(this.svgns, 'rect');\n\t\t\t\trect.setAttributeNS(null, 'x', (component.options.X - offsetX).toString());\n\t\t\t\trect.setAttributeNS(null, 'y', (component.options.Y - offsetY).toString());\n\t\t\t\trect.setAttributeNS(null, 'rx', \"3\");\n\t\t\t\trect.setAttributeNS(null, 'ry', \"3\");\n\t\t\t\trect.setAttributeNS(null, 'width', width.toString());\n\t\t\t\trect.setAttributeNS(null, 'height', height.toString());\n\t\t\t\trect.setAttributeNS(null, 'fill',  component.color);\n\t\t\t\tsvg.appendChild(rect);\n\t\t\t\tlet img = document.createElementNS(this.svgns,'image') as SVGImageElement;\n\t\t\t\timg.setAttributeNS(null,'height','26');\n\t\t\t\timg.setAttributeNS(null,'width','26');\n\t\t\t\timg.setAttributeNS('http://www.w3.org/1999/xlink','href', `https://honzaap.github.io/Systemizer/assets/${this.savingService.getComponentType(component).toLowerCase()}.svg`);\n\t\t\t\timg.setAttributeNS(null,'x', (component.options.X - offsetX + width/2 - 20 + 7).toString());\n\t\t\t\timg.setAttributeNS(null,'y', (component.options.Y - offsetY + height/2 - 20 + 7).toString());\n\t\t\t\timg.setAttributeNS(null, 'visibility', 'visible');\n\t\t\t\t\n\t\t\t\tsvg.appendChild(img);\n\t\t\t\tif(options.showTitles)\n\t\t\t\t\tthis.renderComponentTitleToSvg(svg, component, options.lightTitles, offsetX, offsetY);\n\t\t\t}\n\n\t\t\tif(component[\"inputPort\"]){ \n\t\t\t\tthis.renderConnectionsToSvg(svg, component, options.lightTitles, offsetX, offsetY);\n\t\t\t}\n\t\t}\n\t\tfor(let component of components){\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tif(component.options.technology != null && component.options.technology != 0 && options.showTechnologies){\n\t\t\t\tlet img = document.createElementNS(this.svgns,'image') as SVGImageElement;\n\t\t\t\timg.setAttributeNS(null,'height','20');\n\t\t\t\timg.setAttributeNS(null,'width','20');\n\t\t\t\timg.setAttributeNS('http://www.w3.org/1999/xlink','href', `https://honzaap.github.io/Systemizer/assets/technologies/${this.convertTechnology(component.options.technology)}.svg`);\n\t\t\t\timg.setAttributeNS(null,'x', (component.options.X - offsetX + width -10).toString());\n\t\t\t\timg.setAttributeNS(null,'y', (component.options.Y - offsetY - 10).toString());\n\t\t\t\timg.setAttributeNS(null, 'visibility', 'visible');\n\t\t\t\t\n\t\t\t\tsvg.appendChild(img);\n\t\t\t}\n\t\t}\n\t\tthis.renderPortsToSvg(svg, components, options.lightTitles, offsetX, offsetY);\n\t\treturn svg;\n\t}\n\n\tprivate renderPortsToSvg(svg: SVGElement, components: IDataOperator[], lightMode: boolean, offsetX: number, offsetY: number){\n\t\tfor(let component of components){ // Render ports (render then over connections)\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tif(component[\"inputPort\"] && component[\"inputPort\"].connections.length > 0){ // Render input port\n\t\t\t\tlet port = document.createElementNS(this.svgns,\"circle\");\n\t\t\t\tport.setAttribute(\"cx\", (component.options.X - offsetX - 12).toString());\n\t\t\t\tport.setAttribute(\"cy\", (component.options.Y - offsetY + height/2).toString());\n\t\t\t\tport.setAttribute(\"r\", \"7.5\");\n\t\t\t\tport.setAttribute(\"fill\", lightMode ? \"#fff\" : \"#282A37\");\n\t\t\t\tport.setAttribute(\"stroke\", component.color);\n\t\t\t\tport.setAttribute(\"stroke-width\", \"2\");\n\t\t\t\tsvg.appendChild(port);\n\t\t\t}\n\t\t\tif(component[\"outputPort\"] && component[\"outputPort\"].connections.length > 0){ // Render output port\n\t\t\t\tlet port = document.createElementNS(this.svgns,\"circle\");\n\t\t\t\tport.setAttribute(\"cx\", (component.options.X - offsetX + width + 12).toString());\n\t\t\t\tport.setAttribute(\"cy\", (component.options.Y - offsetY + height/2).toString());\n\t\t\t\tport.setAttribute(\"r\", \"7.5\");\n\t\t\t\tport.setAttribute(\"fill\", lightMode ? \"#fff\" : \"#282A37\");\n\t\t\t\tport.setAttribute(\"stroke\", component.color);\n\t\t\t\tport.setAttribute(\"stroke-width\", \"2\");\n\t\t\t\tsvg.appendChild(port);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderConnectionsToSvg(svg: SVGElement, component: IDataOperator, lightMode: boolean, offsetX: number, offsetY: number){\n\t\t// Render connections\n\t\tfor(let connection of (component[\"inputPort\"] as Port).connections){\n\t\t\tvar newLine = document.createElementNS(this.svgns,'path');\n\t\t\tlet grad = document.createElementNS(this.svgns, \"linearGradient\");\n\t\t\tlet stop1 = document.createElementNS(this.svgns, \"stop\");\n\t\t\tlet stop2 = document.createElementNS(this.svgns, \"stop\");\n\t\t\tlet id = UUID().slice(0, 6);\n\t\t\tgrad.id = id;\n\t\t\tnewLine.id = `con-${id}`;\n\t\t\tgrad.setAttribute(\"x1\", \"0\");\n\t\t\tgrad.setAttribute(\"y1\", \"0\");\n\t\t\tgrad.setAttribute(\"x2\", \"100%\");\n\t\t\tgrad.setAttribute(\"y2\", \"0\");\n\t\t\tstop1.setAttribute(\"offset\", \"0%\");\n\t\t\tstop2.setAttribute(\"offset\", \"100%\");\n\t\t\tstop1.setAttribute(\"stop-color\", connection.getOtherPort(component[\"inputPort\"]).parent.color);\n\t\t\tstop2.setAttribute(\"stop-color\", component.color);\n\t\t\tlet line = createRoundedPath(connection.lineBreaks.map(br => {return {x: br.x - offsetX, y: br.y - offsetY}}), 10, false);\n\t\t\tnewLine.setAttribute(\"d\", line);\n\t\t\tnewLine.setAttribute(\"stroke\", `url(#${id})`);\n\t\t\tnewLine.setAttribute(\"fill\", \"transparent\");\n\t\t\tnewLine.setAttribute(\"stroke-width\", \"2\");\n\t\t\tgrad.appendChild(stop1);\n\t\t\tgrad.appendChild(stop2);\n\t\t\tsvg.appendChild(grad);\n\t\t\tsvg.appendChild(newLine);\n\n\t\t\tif(connection.lineBreaks && connection.title){\n\t\t\t\tlet text = document.createElementNS(this.svgns, \"text\");\n\t\t\t\tlet textPath = document.createElementNS(this.svgns, \"textPath\");\n\t\t\t\ttext.setAttribute(\"text-anchor\", \"middle\");\n\t\t\t\ttext.setAttribute(\"fill\", lightMode ? \"#dadada\" : \"454545\");\n\t\t\t\ttext.setAttribute(\"font-size\", \"12px\");\n\t\t\t\ttext.setAttribute(\"font-family\", \"Arial\");\n\t\t\t\ttextPath.setAttribute(\"startOffset\", \"50%\");\n\t\t\t\ttextPath.setAttribute(\"href\", `#con-${id}`);\n\t\t\t\ttextPath.setAttribute(\"dominant-baseline\", \"text-after-edge\");\n\t\t\t\ttextPath.textContent = connection.title;\n\t\t\t\ttext.appendChild(textPath);\n\t\t\t\tsvg.appendChild(text);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderComponentTitleToSvg(svg: SVGElement, component: IDataOperator, lightMode: boolean, offsetX: number, offsetY: number){\n\t\tlet {width, height} = this.getComponentSize(component);\n\t\tlet newText = this.createSvgText(component.options.title, lightMode ? \"#fff\" : \"#000\", component.options.X - offsetX+width/2, component.options.Y - offsetY - 10, 12);\n\t\tnewText.setAttributeNS(null,\"text-anchor\",'middle');\n\t\tnewText.setAttributeNS(null,\"fill\", lightMode ? \"#c9c9c9\" : \"#454545\");\n\t\tsvg.appendChild(newText);\n\t}\n}\n\nexport class ExportPngOptions{\n\t/**\n\t * Capture only used part of board instead of the whole board\n\t */\n\tcaptureUsed: boolean = false;\n\ttransparentBackground: boolean = false;\n\tshowTitles: boolean = true;\n\tshowTechnologies: boolean = true;\n\tlightTitles: boolean = true;\n\tlightMode: boolean = false;\n}\n\nexport class ExportSvgOptions{\n\tshowTitles: boolean = true;\n\tshowTechnologies: boolean = true;\n\tlightTitles: boolean = true;\n}\n\nexport class EmbedIFrameOptions{\n\tshowTitles: boolean = true;\n\tdarkMode: boolean = false;\n}","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\nimport { fromEvent, merge, of } from 'rxjs';\nimport { delay, map, switchMap } from 'rxjs/operators';\n\n@Directive({\n\t// tslint:disable-next-line:directive-selector\n\tselector: '[delayed-hover]',\n})\nexport class DelayedHoverDirective implements OnInit, OnDestroy {\n\t@Input()\n\tdelay = \"1500\";\n\n\t@Output('delayed-hover') hoverEvent = new EventEmitter();\n\n\tconstructor(private readonly element: ElementRef) {}\n\n\tngOnInit() {\n\t\tconst hide$ = fromEvent(this.element.nativeElement, 'mouseleave').pipe(map(_ => false));\n\t\tconst show$ = fromEvent(this.element.nativeElement, 'mouseenter').pipe(map(_ => true));\n\n\t\tmerge(hide$, show$)\n\t\t\t.pipe(\n\t\t\t\tuntilDestroyed(this),\n\t\t\t\tswitchMap(show => {\n\t\t\t\t\tif (!show) {\n\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t}\n\t\t\t\t\treturn of(true).pipe(delay(parseInt(this.delay)));\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(show => {\n\t\t\t\tif (show) {\n\t\t\t\t\tthis.hoverEvent.emit();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngOnDestroy() {}\n}","import { sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPStatus } from \"./enums/HTTPStatus\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\nexport class SimulationState{\n    responseTime: number = 0;\n    maximumFlow: number = 0;\n    incomingFlow: number = 0;\n    rawIncomingFlow: number = 0;\n    rating: number = 100;\n    flowRatio: number = 0;\n}\n\nexport class EndpointOperator extends LogicComponent{\n    constructor() {\n        super();\n    }\n\n    outputPort: Port;\n    inputPort: Port;\n    options: EndpointOptions;\n    requestCount: number = 0;\n    simulationState: SimulationState = new SimulationState();\n    isFlowSimulationOn: boolean;\n\n    getConnectableEndpoints() : Endpoint[]{\n        let connectableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (connectableEndpoints.find(ep => ep.url === endpoint.url) != null)\n                if(!duplicate)\n                    connectableEndpoints.push(endpoint);\n            });        \n        }\n        return connectableEndpoints;\n    }\n\n    getTargetEndpoint(data: RequestData): Endpoint{\n        // Checking for 404 and 405\n        let hasEndpoint = false;\n        let notAllowed = false;\n        let targetEndpoint: Endpoint;\n        let targetUrl = data.header.endpoint.endpoint.url;\n\n        this.getEndpoints().filter(endpoint => \n            endpoint.url == targetUrl\n        ).forEach(endpoint => {\n            hasEndpoint = true;\n            if(endpoint.supportedMethods.indexOf(data.header.endpoint.method) == -1)\n                notAllowed = true;\n            else{\n                // Found wanted endpoint\n                notAllowed = false;\n                targetEndpoint = endpoint;\n                return;\n            }\n        })\n\n        if(!hasEndpoint){\n            this.fireShowStatusCode(HTTPStatus[\"Not Found\"])\n            return null;\n        }\n        if(notAllowed){\n            this.fireShowStatusCode(HTTPStatus[\"Method Not Allowed\"]);\n            return null;\n        }\n        return targetEndpoint;\n    }\n\n    /**\n     * Gets response to given request\n     * @param request request the response belongs to\n     */\n    getResponse(request: RequestData){\n        let response = new RequestData();\n        response.header = new RequestDataHeader(request.header.endpoint, request.header.protocol, request.header.stream);\n        response.origin = request.origin;\n        response.originID = this.originID;\n        response.requestId = UUID();\n        response.responseId = request.requestId;\n        return response;\n    }\n\n    getEndpoints(){\n        return this.options.endpoints;\n    }\n\n    getAvailableEndpoints(): Endpoint[]{\n        return this.getEndpoints();\n    }\n\n    /**\n     * waits until next request can be processed (determined by performance).\n     * If a timeoutLimit is specified, false will be returned after that time of waiting (if it exceeds the actual wait time). \n    */\n    async throttleThroughput(timeoutLimit: number = -1): Promise<boolean>{\n        if(!this.isFlowSimulationOn)\n            return true;\n        console.log(\"lol\")\n        // Simulate throughput (start sending data to actions every X seconds)\n        let sleepTime = this.calculateThroughputThrottleTime();\n        if(timeoutLimit > 0 && sleepTime > timeoutLimit){\n            this.inputPort.fireDropRequest({});\n            return false;\n        }\n\n        await sleep(sleepTime);\n        return true;\n    }\n\n    private calculateThroughputThrottleTime(){\n        let sleepTime = 0;\n        if(this.options.performance < 4){\n            if(this.options.performance === 1)\n                sleepTime = this.requestCount * (250 * (this.requestCount - 1));\n            else\n                sleepTime = this.requestCount * (550 * (this.requestCount + 1)) / Math.pow(this.options.performance, 2);\n        }\n        else{\n            sleepTime = (this.requestCount * Math.max(Math.log10(this.requestCount),1) * 10000) / Math.pow(this.options.performance, 3);\n        }\n        this.simulationState.responseTime = Math.max(Math.round(sleepTime / 50) * 50, 50);;\n        return sleepTime;\n    }\n\n    /**\n     * Increments currently processing requests\n     */\n    protected requestReceived(){\n        this.requestCount++;\n        if(this.isFlowSimulationOn){\n            let pre = this.simulationState.rawIncomingFlow;\n            // Incoming flow will be easier to increment at smaller flow\n            let increment = 1+1/Math.max(this.simulationState.incomingFlow, 1); \n            this.simulationState.rawIncomingFlow+= increment;\n            this.calculateSimulationState(pre);\n            setTimeout(() => {\n                let pre = this.simulationState.rawIncomingFlow;\n                this.simulationState.rawIncomingFlow-= increment;\n                this.calculateSimulationState(pre);\n            }, 5000);\n        }\n    }\n\n    /**\n     * Updates simulation state and fires event for change detection\n     */\n    private calculateSimulationState(previousRawIncomingFlow: number){\n        this.simulationState.incomingFlow = Math.ceil((previousRawIncomingFlow + this.simulationState.rawIncomingFlow) / 2 / 5);\n        this.simulationState.flowRatio = (this.simulationState.incomingFlow / this.options.performance);\n        let oldRating = this.simulationState.rating;\n        setTimeout(() => { // Prevent some cases of switching in and out infinitely due to rating\n            if(this.simulationState.rating === oldRating){\n                this.simulationState.rating = Math.max(Math.min(100 - 100 * (this.simulationState.responseTime / 550) + 100, 100), 0);\n            }\n        }, 500);\n        \n        this.fireSimulationStateUpdated(this.simulationState);\n    }\n\n    /**\n     * Decrements currently processing requests\n     */\n    protected requestProcessed(){\n        setTimeout(() => {\n            this.requestCount--;\n            this.calculateThroughputThrottleTime();\n        }, 350);\n    }\n\n    protected simulationStateUpdatedDispatcher = new EventDispatcher<SimulationState>();\n    public onSimulationStateUpdated(handler: Handler<SimulationState>) {\n        this.simulationStateUpdatedDispatcher.register(handler);\n    }\n    protected fireSimulationStateUpdated(event: SimulationState) { \n        this.simulationStateUpdatedDispatcher.fire(event);\n    }\n}\n\nexport class EndpointOptions extends Options{\n    endpoints: Endpoint[] = [];\n    performance: number = 10;\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page\">\n    <pages-header></pages-header>\n    <router-outlet></router-outlet>\n    <pages-footer></pages-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n\nexport class TutorialSlide{\n\timage: string;\n\ttitle: string;\n\ttext: string;\n\n\tconstructor(image: string, title: string, text: string){\n\t\tthis.image = image;\n\t\tthis.title = title;\n\t\tthis.text = text;\n\t}\n}\n\n@Component({\n\tselector: 'tutorial-controls',\n\ttemplateUrl: './tutorial-controls.component.html',\n\tstyleUrls: ['./tutorial-controls.component.scss']\n})\nexport class TutorialControlsComponent implements OnInit {\n\n\t@Output() closeMenu = new EventEmitter();\n\t\n\tslides: TutorialSlide[] = [];\n\tisMinimized = false;\n\tcurrentSlideIndex = 0;\n\tcurrentSlide: TutorialSlide;\n  \t\n\tconstructor() { \n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial0.gif\", \"Welcome to Systemizer!\", \"This quick tutorial will take you through the basics of this design tool.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial1.gif\", \"Moving the board\", \"To move the board, you can use right or middle mouse button. To zoom in or out, use the mouse wheel.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial2.gif\", \"Create components \", \"To create a component, simply drag & drop the component from the component menu.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial3.gif\", \"Move components\", \"To move a component on the board, simply click on the component and hold, then move it with mouse.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial4.gif\", \"Copy and paste components\", \"Copy and paste can be done by selecting component and using keyboard shortcuts, or by using top menu copy/paste buttons.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial5.gif\", \"Remove components\", 'Removing components can be done by selecting component and pressing the [del] button, or by using top menu remove button.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial8.gif\", \"Select multiple components\", 'To select multiple components, use the left mouse button and select some components. You can then do any action you would do with a single component.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial6.gif\", \"Connecting components\", 'To connect components together, click and hold on a port of component, then drag the connection to the second component port and release.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial9.gif\", \"Connection line breaking\", 'You can change the shape of connection by hovering over it, and then clicking and dragging the dots.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial10.gif\", \"Connection titles\", 'You can add captions to connection that are displayed in the center of the connection.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial7.gif\", \"Changing properties\", 'Properties of component can be altered by selecting the component, and accessing the \"Properties\" section in the options side menu.'));\n\t\tthis.currentSlide = this.slides[0];\n\t}\t\n\n\tngOnInit(): void {\n\t}\n\n  \tclose(){\n\t\tthis.closeMenu.emit();\n\t}\n\n\ttoggleMinimize(){\n\t\tthis.isMinimized = !this.isMinimized;\n\t}\n\n\tprevious(){\n\t\tthis.currentSlideIndex--;\n\t\tthis.currentSlide = this.slides[this.currentSlideIndex];\n\t}\n\n\tnext(){\n\t\tthis.currentSlideIndex++;\n\t\tthis.currentSlide = this.slides[this.currentSlideIndex];\n\t}\n}\n","<div class=\"window\" [class.minimized]=\"isMinimized\">\n    <div class=\"progress\">\n        <div class=\"progress-bar\" [style.width]=\"((currentSlideIndex+1)/slides.length)*100+'%'\">\n        </div>\n        <span class=\"progress-text\">{{currentSlideIndex+1+\"/\"+slides.length}}</span>\n    </div>\n    <div class=\"window-controls\">\n        <button class=\"close\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n        </button>\n        <button class=\"min\" (click)=\"toggleMinimize()\">\n            <i *ngIf=\"!isMinimized\" class=\"fas fa-minus\"></i>\n            <i *ngIf=\"isMinimized\" class=\"fas fa-chevron-up\"></i>\n        </button>\n    </div>\n    <div class=\"content\">\n        <div class=\"image\">\n            <img src=\"./assets/{{currentSlide.image}}\">\n        </div>\n        <p class=\"title\">{{currentSlide.title}}</p>\n        <hr class=\"line\">\n        <p class=\"text\">\n            {{currentSlide.text}}\n        </p>\n    </div>\n    <div class=\"controls\">\n        <button class=\"prev\" *ngIf=\"currentSlideIndex > 0\" (click)=\"previous()\">Previous</button>\n        <button class=\"next\" *ngIf=\"currentSlideIndex < slides.length-1\" (click)=\"next()\">Next</button>\n        <button class=\"next\" *ngIf=\"currentSlideIndex == slides.length-1\" (click)=\"close()\">Close</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'getting-started',\n\ttemplateUrl: './getting-started.component.html',\n\tstyleUrls: ['./getting-started.component.scss']\n})\nexport class GettingStartedComponent implements OnInit {\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t\tdocument.getElementsByClassName(\"page\")[0].scrollTop = 0;\n\t}\n\n}\n","<main class=\"container\">\n    <section>\n        <h1>Getting started with Systemizer</h1>\n        <p class=\"intro-text\">Welcome to introduction to basics of Systemizer. If you have used any design tool before, feel free to skip to <a onclick=\"document.getElementById('connecting').scrollIntoView()\">Connecting components</a> section, where useful informations unique to Systemizer is explained. </p>\n    </section>\n    <div class=\"container-inner\">\n        <section>\n            <h2>Moving the board</h2>\n            <p>Moving the board is done by dragging with right or middle mouse button. To zoom in or out, use either mouse wheel, or the top menu controls.</p>\n            <img src=\"./assets/images/getting_started_nav_zoom.PNG\" alt=\"Zooming\">\n        </section>\n        <section>\n            <h2>Using components</h2>\n            <p>To create a component, find it in the component menu and drag & drop it on board.</p>\n            <img class=\"gif\" src=\"./assets/gifs/tutorial2.gif\" alt=\"Creating component\">\n            <section>\n                <p>Copy/paste is done either through <span class=\"highlight\">CTRL</span>+<span class=\"highlight\">C</span>/<span class=\"highlight\">V</span> keyboard shortcut or with top menu controls. </p>\n                <img src=\"./assets/images/getting_started_nav_copy.PNG\" alt=\"Copying\">\n            </section>\n            <section>\n                <p>Deleting is done with <span class=\"highlight\">DELETE</span> key, or by clicking delete icon in the top menu. </p>\n                <img src=\"./assets/images/getting_started_nav_delete.PNG\" alt=\"Deleting\">\n            </section>\n            <section>\n                <p>Like any other tool, the undo/redo is done with <span class=\"highlight\">CTRL</span>+<span class=\"highlight\">Z</span>/<span class=\"highlight\">Y</span> keys, or by clicking icons in the top menu. </p>\n                <img src=\"./assets/images/getting_started_nav_undo_redo.PNG\" alt=\"Undo&Redo\">\n            </section>\n        </section>\n        <section id=\"connecting\">\n            <h2>Connecting components</h2>\n            <p class=\"text-center\">Every component has 1 or 2 ports. </p>\n            <div class=\"components connectig-components\">\n                <div>\n                    <div class=\"component-body\" style=\"background-color: #0EC35B;\">\n                        <img src=\"./assets/client.svg\" >\n                        <div class=\"port right\"  style=\"border-color: #0EC35B;\"></div>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"component-body\" style=\"background-color: #E94057;\">\n                        <img src=\"./assets/database.svg\" >\n                        <div class=\"port left\"  style=\"border-color: #E94057;\"></div>\n                    </div>\n                </div>\n                <div class=\"line\">\n                    <div class=\"component-body\" style=\"background-color: #4CA1AF;\">\n                        <img src=\"./assets/api.svg\" >\n                        <div class=\"port left\"  style=\"border-color: #4CA1AF;\"></div>\n                        <div class=\"port right\"  style=\"border-color: #4CA1AF;\"></div>\n                    </div>\n                </div>\n            </div>\n            <p><strong>Input port</strong>: On left side of a component, used to receive data from other component<br><strong>Output port</strong>: On right side of a component, used to send data to other components</p>\n            <p class=\"small\" style=\"margin-top: 0.7em;\">Only an output port can connect to input port, and only an input port can connect to output port. </p>\n            <div class=\"section info-section\">\n                <p>There are components that can connect only to other specific components, to learn more about a component, you can click on the question mark icon of the component in component menu.</p>\n                <div class=\"components connectig-components\">\n                    <div>\n                        <div class=\"component-body\" style=\"background-color: #E94057;\">\n                            <img src=\"./assets/database.svg\" >\n                            <span style=\"color: #B0F1E1;\" class=\"ico-info\"><i class=\"far fa-question-circle\"></i></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section>\n            <h2>Selecting multiple components</h2>\n            <p>You can use the left mouse button to start selecting multiple components.</p>\n            <img class=\"gif\" src=\"./assets/gifs/tutorial8.gif\" alt=\"Selecting multiple components\">\n        </section>\n        <section>\n            <h2>Component properties</h2>\n            <p>Properties of component can be changed in the options menu. To learn what a certain property does, you can click the question mark next to the property name.</p>\n            <img class=\"gif\" src=\"./assets/gifs/tutorial7.gif\" alt=\"Connecting component\">\n            <p>That is all for basic functions of Systemizer. You can also start <a routerLink=\"/create\" [queryParams]=\"{'showOnboardTutorial': true}\">onboard tutorial</a>, or <a routerLink=\"/create\">go designing</a> right away.</p>\n        </section>\n    </div>\n</main>","import { Directive, EventEmitter, HostListener, Output, Renderer2 } from \"@angular/core\";\n\n@Directive({\n    selector: 'textarea[resize]'\n  })\n  export class ResizableTextAreaDirective {\n    @Output() resize = new EventEmitter();\n  \n    width: number;\n    height: number;\n  \n    mouseMoveListener: Function;\n  \n    @HostListener('mousedown', ['$event.target'])\n    onMouseDown(el) {\n      this.width = el.offsetWidth;\n      this.height = el.offsetHeight;\n      this.mouseMoveListener = this.renderer.listen('document', 'mousemove', () => {\n        if (this.width !== el.offsetWidth || this.height !== el.offsetHeight) {\n          this.resize.emit({ width: el.offsetWidth, height: el.offsetHeight });\n        }\n      });\n    }\n  \n    @HostListener('document:mouseup')\n    onMouseUp(el) {\n      this.ngOnDestroy();\n    }\n  \n    constructor(private renderer: Renderer2) {}\n  \n    ngOnDestroy() {\n      if (this.mouseMoveListener) {\n        this.mouseMoveListener();\n      }\n    }\n  }","import { Component, OnInit } from '@angular/core';\nimport { CDN } from 'src/models/CDN';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'cdn',\n\ttemplateUrl: './cdn.component.html',\n\tstyleUrls: ['./cdn.component.scss']\n})\nexport class CDNComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicCDN : CDN = new CDN();\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicCDN;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new CDN();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicCDN.options.X\"\n[style.top.px]=\"LogicCDN.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/cdn.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <endpoint-select\n        [Model]=\"LogicCDN\"\n        [Type]=\"APIType.REST\"\n        [Multiple]=\"false\"\n        [HasActions]=\"false\"\n        [ModifiableMethods]=\"false\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { APIGateway } from 'src/models/APIGateway';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'apigateway',\n\ttemplateUrl: './apigateway.component.html',\n\tstyleUrls: ['./apigateway.component.scss']\n})\nexport class ApiGatewayComponent  extends OperatorComponent implements OnInit{\n\n\tpublic LogicApiGateway : APIGateway = new APIGateway();\n\n\tconnectableEndpoints: Endpoint[];\n\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tupdateSelection(){\n\t\tthis.connectableEndpoints = this.LogicApiGateway.getConnectableEndpoints();\n\t\tlet endpoints = this.LogicApiGateway.getEndpoints();\n\t\tfor(let j = 0; j < endpoints.length; j++){\n\t\t\tlet endpoint = endpoints[j]\n\t\t\tfor(let i = 0; i < endpoint.actions.length; i++){\n\t\t\t\tlet action = endpoint.actions[i];\n\t\t\t\tlet currEdp = action.endpoint;\n\t\t\t\tlet currMth = action.method;\n\t\t\t\tendpoints[j].actions[i].endpoint = null;\n\t\t\t\tif(this.connectableEndpoints.length == 0){\n\t\t\t\t\tthis.connectableEndpoints = [];\n\t\t\t\t\tendpoint.actions = [];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(currEdp != null && currMth != null){\n\t\t\t\t\tfor(let e of this.connectableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\t\t\tif(e.url == currEdp.url)\n\t\t\t\t\t\t\tendpoints[j].actions[i].endpoint = e;\n\t\t\t\t\t}\n\t\t\t\t\tendpoint.actions[i].method = currMth;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tendpoint.actions.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicApiGateway;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new APIGateway();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicApiGateway.options.X \"\n[style.top.px]=\"LogicApiGateway.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\"(mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/apigateway.svg\">\n    </div>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <!-- REST ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.REST\"\n                [Property]=\"'restEndpoints'\"\n                [Title]=\"'Endpoints (REST):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- REST ENDPOINTS -->\n\n        <!-- RPC ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.RPC\"\n                [Property]=\"'rpcEndpoints'\"\n                [Title]=\"'Endpoints (RPC):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- RPC ENDPOINTS -->\n\n        <!-- gRPC ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.gRPC\"\n                [Property]=\"'grpcEndpoints'\"\n                [Title]=\"'Endpoints (gRPC):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- gRPC ENDPOINTS -->\n\n        <!-- GraphQL ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.GraphQL\"\n                [Property]=\"'graphqlEndpoints'\"\n                [Title]=\"'Endpoints (GraphQL):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- GraphQL ENDPOINTS -->\n\n        <!-- WebSockets ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Property]=\"'websocketsEndpoints'\"\n                [Type]=\"APIType.WebSockets\"\n                [Title]=\"'Endpoints (WebSockets):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- WebSockets ENDPOINTS -->\n    </div>\n    <div #simulations>\n        <slider-described\n        [Model]=\"LogicApiGateway\"\n        [AfterChange]=\"afterChange\"\n        ></slider-described>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum BalancingAlgorithm {\n    \"Round Robin\",\n    \"IP Hash\",\n    \"Least Connections\",\n    \"URL Hash\"\n}","import { gRPCMode } from \"./enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Protocol } from \"./enums/Protocol\";\n\nexport class Endpoint{\n    url: string;\n    supportedMethods: HTTPMethod[] = [];\n    protocol: Protocol = Protocol.HTTP;\n    actions: EndpointAction[] = [];\n    grpcMode: gRPCMode = gRPCMode.Unary;\n\n    constructor(url: string, supportedMethods: HTTPMethod[] = []) {\n        this.url = url;\n        this.supportedMethods = supportedMethods;\n    }\n}\n\nexport class EndpointRef {\n    endpoint: Endpoint;\n    method: HTTPMethod = HTTPMethod.GET;\n}\n\nexport class EndpointAction {\n    endpoint: Endpoint;\n    method: EndpointActionHTTPMethod = EndpointActionHTTPMethod.Inherit;\n    asynchronous: boolean = false;\n}\n\nexport class DatabaseEndpoint extends Endpoint{\n    constructor(url: string){\n        super(url, [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.DELETE]);\n        this.actions = null;\n        this.grpcMode = gRPCMode.Unary;\n        this.protocol = Protocol.Database\n    }\n}","// Import the core angular services.\nimport { Component } from \"@angular/core\";\n \n// ----------------------------------------------------------------------------------- //\n// ----------------------------------------------------------------------------------- //\n \ntype EventTarget = Window | Document | HTMLElement;\n \ninterface EventConfig {\n\tname: string;\n\tisStop: boolean;\n\tisPrevent: boolean;\n\tisCapture: boolean;\n\tisSelf: boolean;\n\tisOnce: boolean;\n\tisPassive: boolean;\n}\n \n// I provide support for DOM event-modifiers that are inspired by Vue.js. These allow\n// for events to be qualified with the following suffixes:\n// --\n// - .stop\n// - .prevent\n// - .capture\n// - .self\n// - .once\n// - .passive\n// --\nexport class VueEventModifiersPlugin {\n \n\tprivate supportsPassive: boolean;\n \n\t// I initialize the event plug-in.\n\tconstructor() {\n \n\t\tthis.supportsPassive = this.detectPassiveSupport();\n \n\t}\n \n\t// ---\n\t// PUBLIC METHODS.\n\t// ---\n \n\t// I bind the given event handler to the given element. Returns a function that\n\t// tears-down the event binding.\n\tpublic addEventListener(\n\t\telement: HTMLElement,\n\t\thigherOrderEventName: string,\n\t\thandler: Function\n\t\t) : Function {\n \n\t\tvar eventConfig = this.parseHigherOrderEventName( higherOrderEventName );\n \n\t\treturn( this.setupEventBinding( element, eventConfig, handler ) );\n \n\t}\n \n \n\t// I bind the given event handler to the given global element selector. Returns a\n\t// function that tears-down the event binding.\n\tpublic addGlobalEventListener(\n\t\thigherOrderElement: string,\n\t\thigherOrderEventName: string,\n\t\thandler: Function\n\t\t) : Function {\n \n\t\tvar target = this.parseHigherOrderElement( higherOrderElement );\n\t\tvar eventConfig = this.parseHigherOrderEventName( higherOrderEventName );\n \n\t\treturn( this.setupEventBinding( target, eventConfig, handler ) );\n \n\t}\n \n \n\t// I determine if the given event name is supported by this plug-in. For each event\n\t// binding, the plug-ins are tested in the reverse order of the EVENT_MANAGER_PLUGINS\n\t// multi-collection. Angular will use the first plug-in that supports the event.\n\tpublic supports( eventName: string ) : boolean {\n \n\t\tvar eventPattern = /^[a-z]+(?:\\.(?:stop|prevent|capture|self|once|passive))+$/;\n \n\t\treturn( eventPattern.test( eventName ) );\n \n\t}\n \n\t// ---\n\t// PRIVATE METHODS.\n\t// ---\n \n\t// I determine if the current environment supports Passive event handlers.\n\tprivate detectPassiveSupport() : boolean {\n \n\t\tvar support = false;\n \n\t\t// This approach is more-or-less taken from the Mozilla Developer Network:\n\t\t// --\n\t\t// READ MORE: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\t\ttry {\n \n\t\t\tvar handler = function(){};\n \n\t\t\tvar options: any = {\n\t\t\t\tget passive() {\n \n\t\t\t\t\treturn( support = true );\n \n\t\t\t\t}\n\t\t\t};\n \n\t\t\twindow.addEventListener( \"test\", handler, options );\n\t\t\twindow.removeEventListener( \"test\", handler, options );\n \n\t\t} catch( error ) {\n \n\t\t\t// ...\n \n\t\t}\n \n\t\treturn( support );\n \n\t}\n \n \n\t// I parse the \"higher order\" element selector into an actual browser DOM reference.\n\tprivate parseHigherOrderElement( selector: string ) : EventTarget {\n \n\t\tswitch( selector ) {\n\t\t\tcase \"window\":\n\t\t\t\treturn( window );\n\t\t\tbreak;\n\t\t\tcase \"document\":\n\t\t\t\treturn( document );\n\t\t\tbreak;\n\t\t\tcase \"body\":\n\t\t\t\treturn( document.body );\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow( new Error( `Element selector [${ selector }] not supported.` ) );\n\t\t\tbreak;\n\t\t}\n \n\t}\n \n \n\t// I parse the \"higher order\" event name into the event configuration that will be\n\t// used to bind the underlying event handler.\n\tprivate parseHigherOrderEventName( eventName: string ) : EventConfig {\n \n\t\tvar parts = eventName.split( \".\" );\n \n\t\tvar config = {\n\t\t\tname: <string>parts.shift(), // Telling TypeScript not to worry.\n\t\t\tisStop: false,\n\t\t\tisPrevent: false,\n\t\t\tisCapture: false,\n\t\t\tisSelf: false,\n\t\t\tisOnce: false,\n\t\t\tisPassive: false\n\t\t};\n \n\t\t// While this is different in Vue.js, we're not going to care about the order in\n\t\t// which the event modifiers are defined. Each modifier will just act as an\n\t\t// independent flag to be consumed when configuring the subsequent event-handler.\n\t\twhile ( parts.length ) {\n \n\t\t\tswitch ( parts.shift() ) {\n\t\t\t\tcase \"stop\":\n\t\t\t\t\tconfig.isStop = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"prevent\":\n\t\t\t\t\tconfig.isPrevent = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"capture\":\n\t\t\t\t\tconfig.isCapture = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"self\":\n\t\t\t\t\tconfig.isSelf = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"once\":\n\t\t\t\t\tconfig.isOnce = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"passive\":\n\t\t\t\t\tconfig.isPassive = true;\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow( new Error( `Event config [${ eventName }] not supported.` ) );\n\t\t\t\tbreak;\n\t\t\t}\n \n\t\t}\n \n\t\treturn( config );\n \n\t}\n \n \n\t// I bind the given event handler to the given event target using the given event\n\t// configuration. I can be used for both local and global targets. Returns a function\n\t// that tears-down the event binding.\n\tprivate setupEventBinding(\n\t\ttarget: EventTarget,\n\t\teventConfig: EventConfig,\n\t\thandler: Function\n\t\t) : Function {\n \n\t\tvar options: any = eventConfig.isCapture;\n\t\t// If the event requires a \"passive\" modifier, then we have to change the way\n\t\t// that we define the event-phase. Passive mode requires an EventListerOptions\n\t\t// object that is only supported in some browsers.\n\t\tif ( this.supportsPassive && eventConfig.isPassive ) {\n \n\t\t\toptions = {\n\t\t\t\tpassive: true,\n\t\t\t\tcapture: eventConfig.isCapture\n\t\t\t};\n \n\t\t}\n \n\t\t// NOTE: We are remaining inside the Angular Zone (if it is loaded).\n\t\taddProxyFunction();\n \n\t\treturn( removeProxyFunction );\n \n\t\t// -- Hoisted Functions -- //\n \n\t\tfunction addProxyFunction() {\n \n\t\t\ttarget.addEventListener( eventConfig.name, proxyFunction, options );\n \n\t\t}\n \n\t\tfunction removeProxyFunction() {\n \n\t\t\ttarget.removeEventListener( eventConfig.name, proxyFunction, options );\n \n\t\t}\n \n\t\tfunction proxyFunction( event: Event ) {\n \n\t\t\t// NOTE: If the target is not Self, the handler won't be called. But, a\n\t\t\t// change-digest will still be triggered. This is because we're not bothering\n\t\t\t// to bind the handler outside of the Angular Zone (since most cases will be\n\t\t\t// a one-to-one mapping of event-to-handler invocation).\n\t\t\tif ( eventConfig.isSelf && ( event.target !== target ) ) {\n \n\t\t\t\treturn;\n \n\t\t\t}\n \n\t\t\t// If the handler is only intended to be invoked once, let's unbind before\n\t\t\t// we call the underlying handler.\n\t\t\tif ( eventConfig.isOnce ) {\n \n\t\t\t\tremoveProxyFunction();\n \n\t\t\t}\n \n\t\t\tif ( eventConfig.isStop ) {\n \n\t\t\t\tevent.stopPropagation();\n \n\t\t\t}\n \n\t\t\tif ( eventConfig.isPrevent ) {\n \n\t\t\t\tevent.preventDefault();\n \n\t\t\t}\n \n\t\t\thandler( event );\n \n\t\t}\n \n\t}\n \n}","export enum ReplacementPolicy {\n    \"Least Recently Used\",\n    \"Least Frequently Used\",\n    \"First in First out\",\n    \"First in Last out\"\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { DatabaseEndpoint, Endpoint, EndpointRef } from \"./Endpoint\";\nimport { DatabaseType } from \"./enums/DatabaseType\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\ninterface RemoveShardEvent{ }\n\nexport class Database extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port\n    options: DatabaseOptions;\n    connectionTable: {[id:string]:Connection} = {};\n    color = \"#E94057\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.outputPort = null;//new Port(this,true,true);      \n        this.options = new DatabaseOptions();  \n        this.options.title = \"Database\";\n        \n        this.options.endpoints = [\n            new DatabaseEndpoint(\"/database\")    \n        ]\n    }\n\n    async receiveData(request: RequestData, fromOutput = false) {\n        if(fromOutput) \n            return;\n        let targetEndpoint = this.getTargetEndpoint(request);\n        if(targetEndpoint == null)\n            return;\n\n        this.fireReceiveData(request);\n        this.requestReceived();\n\n        if(!await this.throttleThroughput(5000)){\n            this.requestProcessed();\n            return;\n        }\n        \n        if(this.options.isMasterShard){\n            let length = this.outputPort.connections.length;\n            if(length == 0)\n                this.options.isMasterShard = false;\n            else{\n                let shardRequest = new RequestData();\n                let conn = this.outputPort.connections[Math.round(Math.random() * (length-1))]; // Select random shard to send data to \n                let epRef = new EndpointRef();\n                epRef.method = request.header.endpoint.method;\n                epRef.endpoint = new DatabaseEndpoint(\"/shard\")\n\n                shardRequest.header = new RequestDataHeader(epRef, Protocol.HTTP);\n                shardRequest.origin = conn;\n                shardRequest.originID = this.originID;\n                shardRequest.requestId = UUID();\n                this.connectionTable[shardRequest.requestId] = shardRequest.origin;\n                await this.outputPort.sendData(shardRequest, conn);\n            }\n        }\n        this.connectionTable[request.requestId] = request.origin;\n        // Send response back\n        this.requestProcessed();\n        if(request.sendResponse)\n            await this.sendData(this.getResponse(request));\n    }\n\n    onConnectionUpdate(wasOutput: boolean = false){\n        if(wasOutput && this.outputPort != null && this.outputPort.connections.length == 0){\n            this.options.isMasterShard = false;\n            this.outputPort = null;\n            this.fireRemoveShard({});\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n\n    canConnectTo(port: Port, connectingWithOutput: boolean){\n        if(!super.canConnectTo(port, connectingWithOutput))\n            return false;\n        // Output of database can connect only to database shard of the same type\n        if(!connectingWithOutput)\n            return true;\n        \n        if(port.parent instanceof Database && this.options.isMasterShard && port.parent.options.isShard && port.parent.options.type == this.options.type)\n            return true;\n        this.fireFailedConnect({message: \"Output of a Database can only be connected to database shard of same type.\"});\n        return false;\n    }\n\n    protected removeShardDispatcher = new EventDispatcher<RemoveShardEvent>();\n    public onRemoveShard(handler: Handler<RemoveShardEvent>) {\n        this.removeShardDispatcher.register(handler);\n    }\n    protected fireRemoveShard(event: RemoveShardEvent) { \n        this.removeShardDispatcher.fire(event);\n    }\n}\n\nexport class DatabaseOptions extends EndpointOptions{\n    type: DatabaseType;\n    isMasterShard: boolean;\n    isShard: boolean;\n}","export enum APIType {\n    REST, \n    GraphQL,\n    RPC,\n    gRPC,\n    WebSockets\n}","export type Handler<E> = (event: E) => void;\n\nexport class EventDispatcher<E> { \n    private handlers: Handler<E>[] = [];\n    fire(event: E) { \n        for (let h of this.handlers)\n            h(event);\n    }\n    register(handler: Handler<E>) { \n        this.handlers.push(handler);\n    }\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals } from \"src/shared/ExtensionMethods\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class Client extends LogicComponent implements IDataOperator{\n\n    outputPort: Port;\n    options: ClientOptions;\n    isConnectedToEndpoint: boolean = false; // For streaming/websockets\n    connectedId: string;\n    color = \"#0EC35B\";\n\n    constructor() {\n        super();\n        this.outputPort = new Port(this, true, false);        \n        this.options = new ClientOptions();\n        this.options.title = \"Client\";\n    }\n\n    receiveData(data: RequestData): void {\n        this.fireReceiveData(data);\n        if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"]){\n            if(data.header.stream == true){\n                if(this.connectedId == null) \n                    return;\n                this.isConnectedToEndpoint = true;\n            }\n            else{\n                this.isConnectedToEndpoint = false;\n                this.connectedId = null;\n            }\n        }\n    }\n\n    async sendData(data: RequestData) {\n        this.updateEndpoint();\n        return await this.outputPort.sendData(data);\n    }\n\n    getAvailableEndpoints(): Endpoint[]\n    {\n        let availableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (availableEndpoints.find(ep => ep.url === endpoint.url && arrayEquals(endpoint.supportedMethods, ep.supportedMethods)) != null)\n                if(!duplicate)\n                    availableEndpoints.push(endpoint);\n            });        \n        }\n        return availableEndpoints;\n    }\n\n    updateEndpoint(){\n        let availableEndpoints = this.getAvailableEndpoints();\n        if(this.options.endpointRef.endpoint == null){ // Set default endpoint if available\n            if(availableEndpoints.length == 0) \n                return;\n            this.options.endpointRef.endpoint = availableEndpoints[0];\n            this.options.endpointRef.method = availableEndpoints[0].supportedMethods[0];\n        }\n        else{\n            let isAvailable = false;\n            for(let endpoint of availableEndpoints){\n                if(this.options.endpointRef.endpoint === endpoint){\n                    isAvailable = true;\n                    break;\n                }\n            }\n            if(!isAvailable){ // If current endpoint is no longer available, replace it\n                if(availableEndpoints.length == 0) \n                    return;\n                this.options.endpointRef.endpoint = availableEndpoints[0];\n                this.options.endpointRef.method = availableEndpoints[0].supportedMethods[0];\n            }\n        }\n    }\n}\n\nexport class ClientOptions extends Options{\n    protocol: Protocol = Protocol.HTTP; // Is decided by endpoint, cannot be changed from client\n    endpointRef: EndpointRef = new EndpointRef();\n    outputRate: number = 4;\n}","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { PlacingService } from 'src/app/placing.service';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { Connection } from 'src/models/Connection';\nimport { Port } from 'src/models/Port';\nimport { ConnectionComponent } from '../connection/connection.component';\n\n@Component({\n\tselector: 'port',\n\ttemplateUrl: './port.component.html',\n\tstyleUrls: ['./port.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PortComponent implements OnInit {\n\t@Input() LogicParent: IDataOperator;\n\t@Input() IsOutput: boolean;\n\tpublic LogicPort: Port;\n\t@Input() IsReadOnly: boolean = false;\n\t@ViewChild('port') public port: ElementRef<HTMLDivElement>;\n\t@ViewChild('portImage') public portImage: ElementRef;\n\tconnectionComponents: ConnectionComponent[] = [];\n\tboard: HTMLElement;\n\tline: SVGPathElement;\n\tsvgCanvas: HTMLElement;\n\n\tlineStartX = 0;\n\tlineStartY = 0;\n\tlineCurrX = 0;\n\tlineCurrY = 0;\n\tlinePrevX = 0;\n\tlinePrevY = 0;\n\n\tconstructor(public placingService : PlacingService, private cdRef: ChangeDetectorRef) { \n\t\tthis.cdRef.detach();\n\t}\n\n\tngOnInit(): void {\n    \tthis.LogicPort = this.LogicParent.getPort(this.IsOutput);\n\t\tthis.board = document.getElementById(\"board\");\n\t\tthis.svgCanvas = document.getElementById(\"svg-canvas\");\n\t\tthis.LogicPort.onDropRequest(() => {\n\t\t\tlet dirX = -1 - Math.random();\n\t\t\tlet dirY = Math.random();\n\t\t\tlet x = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth / 2;\n\t\t\tlet y = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight / 2;\n\t\t\tif(this.IsOutput)\n\t\t\t\tdirX *= -1;\n\t\t\tif(Math.random() > 0.5)\n\t\t\t\tdirY *= -1;\n\t\t\tlet data = document.createElementNS('http://www.w3.org/2000/svg','circle');\n\t\t\tdata.classList.add(\"dropped-data\");\n\t\t\tdata.setAttribute(\"r\",\"5\")\n\t\t\tthis.svgCanvas.appendChild(data);\n\t\t\tdata.style.transform = `translate(${x}px, ${y}px)`;\n\t\t\tsetTimeout(()=>{\n\t\t\t\tdata.style.transform = `translate(${x + dirX * 30}px, ${y + dirY * 30}px)`;\n\t\t\t\tdata.style.opacity = \"0\";\n\t\t\t}, 50);\n\t\t\tsetTimeout(()=>{\n\t\t\t\tdata.remove();\n\t\t\t}, 1000);\n\t\t});\n\t\tthis.cdRef.detectChanges();\n  \t}  \n\n\tremoveConnection(connection: ConnectionComponent){\n\t\tlet index = this.connectionComponents.findIndex(con => con === connection);\n\t\tif(index !== -1){\n\t\t\tthis.connectionComponents.splice(index, 1);\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\t\n\taddConnection(connection: ConnectionComponent){\n\t\tif(this.IsReadOnly && this.port != null)\n\t\t\tthis.port.nativeElement.style.display = \"block\";\n\t\tlet index = this.connectionComponents.findIndex(con => con === connection);\n\t\tif(index === -1)\n\t\t\tthis.connectionComponents.push(connection);\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tgetConnectionComponent(logicConnection: Connection){\n\t\treturn this.connectionComponents.find(\n\t\t\tconnection => connection.LogicConnection === logicConnection\n\t\t);\n\t}\n\n\tautoAttach(){\n\t\tif(this.placingService.isConnecting){\n\t\t\tthis.placingService.canMoveConnection = false;\n\t\t\tlet line = this.svgCanvas.children[0];\n\t\t\tlet style = line.getAttribute(\"d\");\n\t\t\tstyle = style.split(\"L\")[0] + `L${this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth / 2} ${this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight / 2}`;\n\t\t\tline.setAttribute(\"d\",style);\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tdetach(){\n\t\tthis.placingService.canMoveConnection = true;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic getPortComponent(){\n\t\treturn this;\n\t}\n\n\tpublic handleClick( event: Event ) : void {\n\t\tif(event instanceof MouseEvent){\n\t\t\tif(this.placingService.isConnecting)\n\t\t\t\tthis.placingService.stopConnecting();\n\t\t\telse{\n\t\t\t\tthis.placingService.startConnecting(this)\n\t\t\t\tthis.line = document.createElementNS('http://www.w3.org/2000/svg','path');\n\t\t\t\tthis.svgCanvas.appendChild(this.line);\n\t\t\t\tthis.lineCurrX = event.clientX;\n\t\t\t\tthis.lineCurrY = event.clientY;\n\t\t\t\tthis.linePrevX = event.clientX;\n\t\t\t\tthis.linePrevY = event.clientY;\n\n\t\t\t\tthis.lineCurrX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineCurrY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\t\t\t\tthis.lineStartX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineStartY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\n\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\tthis.line.style.stroke = \"#6059DF\";\n\t\t\t\tthis.line.style.strokeWidth = \"2\";\n\t\t\t\tthis.line.style.strokeLinecap = \"round\";\n\t\t\t\tthis.line.style.strokeDasharray = \"3\";\n\t\t\t\tthis.line.style.fill = \"none\";\n\n\t\t\t\tthis.board.onmousemove = (event) => {\n\t\t\t\t\tif(this.placingService.canMoveConnection){\n\t\t\t\t\t\tif(!this.placingService.isConnecting) \n\t\t\t\t\t\t\tthis.placingService.startConnecting(this);\n\t\t\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - event.clientX) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - event.clientY) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\t\t\tthis.linePrevX = event.clientX;\n\t\t\t\t\t\tthis.linePrevY = event.clientY;\n\t\t\t\t\t}\n\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\t\t\tif(this.placingService.isConnecting)\n\t\t\t\tthis.placingService.stopConnecting();\n\t\t\telse{\n\t\t\t\tthis.placingService.startConnecting(this)\n\t\t\t\tthis.line = document.createElementNS('http://www.w3.org/2000/svg','path');\n\t\t\t\tthis.svgCanvas.appendChild(this.line);\n\t\t\t\tthis.lineCurrX = event.touches[0].clientX;\n\t\t\t\tthis.lineCurrY = event.touches[0].clientY;\n\t\t\t\tthis.linePrevX = event.touches[0].clientX;\n\t\t\t\tthis.linePrevY = event.touches[0].clientY;\n\n\t\t\t\tthis.lineCurrX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineCurrY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\t\t\t\tthis.lineStartX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineStartY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\n\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\tthis.line.style.stroke = \"#6059DF\";\n\t\t\t\tthis.line.style.strokeWidth = \"2\";\n\t\t\t\tthis.line.style.strokeLinecap = \"round\";\n\t\t\t\tthis.line.style.strokeDasharray = \"3\";\n\t\t\t\tthis.line.style.fill = \"none\";\n\t\t\t\tthis.board.ontouchmove = (event) => {\n\t\t\t\t\tif(this.placingService.canMoveConnection){\n\t\t\t\t\t\tif(!this.placingService.isConnecting) \n\t\t\t\t\t\t\tthis.placingService.startConnecting(this);\n\t\t\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - event.touches[0].clientX) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - event.touches[0].clientY) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\t\t\tthis.linePrevX = event.touches[0].clientX;\n\t\t\t\t\t\tthis.linePrevY = event.touches[0].clientY;\n\t\t\t\t\t}\n\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t}\n\t\t\t\tthis.board.ontouchend = () =>{\n\t\t\t\t\tthis.board.ontouchmove = null;\n\t\t\t\t\tthis.board.ontouchend = null;\n\t\t\t\t\tthis.svgCanvas.innerHTML = \"\";\n\t\t\t\t\tthis.placingService.stopConnecting();\n\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\t\n\tpublic handleMouseUp(e){\n\t\tif(this.placingService.isConnecting){\n\t\t\tif(this !== this.placingService.connectingPort){\n\t\t\t\tif(this.IsOutput){\n\t\t\t\t\tif(this.placingService.connectPorts(this,this.placingService.connectingPort))\n\t\t\t\t\t\tthis.placingService.componentChanged.emit();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(this.placingService.connectPorts(this.placingService.connectingPort, this))\n\t\t\t\t\t\tthis.placingService.componentChanged.emit();\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tngAfterViewInit(){\n\t\tthis.portImage.nativeElement.style.borderColor = this.LogicParent.color;\n\t\tif(this.IsReadOnly && this.port != null)\n\t\t\tthis.port.nativeElement.style.display = \"none\";\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tdestroySelf = () => {}\n}\n","<div #port (mousedown)=\"handleClick($event)\"\n(mouseup)=\"handleMouseUp($event)\"\n(mouseover)=\"autoAttach()\" (mouseleave)=\"detach()\"\nclass=\"port\"\n>\n    <div #portImage class=\"port-image\" ></div>\n</div>","export enum Technology{\n    None,\n    Angular,\n    \"Apache Kafka\",\n    \"AWS EC2\",\n    \"AWS Lambda\",\n    \"AWS SQS\",\n    \"AWS S3\",\n    \"C#\",\n    Dart,\n    Docker,\n    Elixir,\n    Golang,\n    \"Google Cloud Storage\",\n    Java,\n    JavaScript,\n    Kotlin,\n    PHP,\n    Python,\n    RabbitMQ,\n    React,\n    Redis,\n    Ruby,\n    Swift,\n    TypeScript,\n    Vue,\n}\n\n/**\n * Always add new technology to end! It will be sorted when the mat-select is populated.\n * When new technology is added, add an svg file to src/assets/technologies with the same lowercase name without spaces.\n */","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { RequestData } from \"./RequestData\";\nimport { Port } from \"./Port\";\nimport { Endpoint } from \"./Endpoint\";\nimport { sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\n\nexport class PubSub extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    options: PubSubOptions;\n    color = \"#FF7D35\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new PubSubOptions();\n        this.options.title = \"Pub/Sub Model\";\n\n        this.options.endpoints = [\n            new Endpoint(\"post.postCreated\", [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.PATCH, HTTPMethod.DELETE])\n        ]\n    }\n\n    async receiveData(data: RequestData) {\n        if(data.requestId == \"\" || data.requestId == null )\n            throw new Error(\"requestId can not be null. Please specify property requestId of RequestData\");\n\n        this.fireReceiveData(data);\n        this.requestReceived();\n\n        // Put data to queue \n        data.header.stream = false;\n        this.sendToConsumers(data);\n\n        // Return response to publisher\n        let response = new RequestData();\n        response.responseId = data.requestId;\n        response.requestId = UUID();\n        response.header = data.header;\n        response.origin = data.origin;\n        response.originID = this.originID;\n\n        // Send response back\n        this.requestProcessed();\n        if(data.sendResponse)\n            await this.inputPort.sendData(response, data.origin);\n    }\n\n    async sendToConsumers(message: RequestData){\n        if(!await this.throttleThroughput(5000)){\n            this.requestProcessed();\n            return;\n        }\n        this.sendData(message);\n    }\n\n    async sendData(data: RequestData){\n        data.originID = this.originID;\n        data.sendResponse = false;\n        let targetEndpoint = data.header.endpoint.endpoint.url;\n        let connections = this.outputPort.connections\n        .filter(connection => connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints()\n        .find(ep => ep.url == targetEndpoint) != null);\n        for(let connection of connections){\n            data.origin = connection;\n            this.outputPort.sendData(data,data.origin);\n        }\n    }\n}\n\nexport class PubSubOptions extends EndpointOptions{\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'landing-page',\n\ttemplateUrl: './landing-page.component.html',\n\tstyleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n\tsupporters: any[] = [];\n\tcontributors: any[] = [];\n\tconstructor() { \n\t\t// Supporters are being added manually since buymeacoffee API leaks e-mail address/sensitive info and I have no backend to process it for me :/\n\t\tthis.supporters.push({name: \"Sean Cline\", amount: \"15\", imgUrl: \"https://img.buymeacoffee.com/api/?name=Sean+Cline&size=300&bg-image=bmc&background=FF813F\"});\n\t\tthis.supporters.push({name: \"Sunny Beatteay\", amount: \"15\", imgUrl: \"https://img.buymeacoffee.com/api/?name=Sunny+Beatteay&size=300&bg-image=bmc&background=FF813F\"});\n\t\n\t\t// Get contributors from GitHub API\n\t\ttry{\n\t\t\tfetch(\"https://api.github.com/repos/honzaap/systemizer/contributors\")\n\t\t\t.then(res => res.json().then(data => {\n\t\t\t\tif(!Array.isArray(data))\n\t\t\t\t\treturn;\n\t\t\t\tdata.forEach(contributor => {\n\t\t\t\t\tthis.contributors.push({\n\t\t\t\t\t\tname: contributor.login,\n\t\t\t\t\t\timgUrl: contributor.avatar_url,\n\t\t\t\t\t\tlink: contributor.html_url\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\tcatch{ }\n\t}\n\n\tngOnInit(): void {\n\t\tdocument.getElementsByClassName(\"page\")[0].scrollTop = 0;\n\t}\n\n\tscaleFontSize(name){\n\t\treturn Math.min(240/name.length, 19) + 'px';\n\t}\n}\n","<main class=\"container\">\n    <div class=\"intro\">\n        <div class=\"title\">\n            <h1>The best system design tool.</h1>\n            <h3>Systemizer provides system visualization with customizable components</h3>\n            <p class=\"caption-dark fs-6\">Are you new to design tools? This <a class=\"highlight\" routerLink=\"getting-started\">quick introduction</a> is just for you!</p>\n        </div>\n        <div class=\"animation components components-intro\">\n            <svg>\n                <linearGradient id=\"linear-1\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\n                    <stop offset=\"0%\"   stop-color=\"#0EC35B\"/>\n                    <stop offset=\"100%\" stop-color=\"#021B79\"/>\n                </linearGradient>\n                <linearGradient id=\"linear-2\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\n                    <stop offset=\"0%\"   stop-color=\"#021B79\"/>\n                    <stop offset=\"100%\" stop-color=\"#4CA1AF\"/>\n                </linearGradient>\n                <linearGradient id=\"linear-3\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\n                    <stop offset=\"0%\"   stop-color=\"#021B79\"/>\n                    <stop offset=\"100%\" stop-color=\"#4CA1AF\"/>\n                </linearGradient>\n                <linearGradient id=\"linear-4\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\n                    <stop offset=\"0%\"   stop-color=\"#021B79\"/>\n                    <stop offset=\"100%\" stop-color=\"#4CA1AF\"/>\n                </linearGradient>\n                <path stroke=\"url(#linear-1)\" #mainPath d=\"M120.1 105.1 L80 105\"></path>\n                <path stroke=\"url(#linear-2)\" #mainPath d=\"M250.1 30.1 L205 105\"></path>\n                <path stroke=\"url(#linear-3)\" #mainPath d=\"M250.1 180.1 L205 105\"></path>\n                <path stroke=\"url(#linear-4)\" #mainPath d=\"M250.1 105.1 L200 105\"></path>\n                <circle id=\"anim-data\" cx=\"80\" cy=\"105\" r=\"5\" fill=\"#31B78D\"></circle>\n            </svg>\n            <div class=\"component-body\" style=\"background-color: #0EC35B;\">\n                <img src=\"./assets/client.svg\" alt=\"Client visualization\">\n                <div style=\"border-color: #0EC35B;\" class=\"port right\"></div>\n            </div>\n            <div class=\"component-body\" style=\"margin-left: 4em; background-color: #021B79;\">\n                <img src=\"./assets/loadbalancer.svg\" alt=\"Load Balancer visualization\">\n                <div style=\"border-color: #021B79;\" class=\"port left\"></div>\n                <div style=\"border-color: #021B79;\" class=\"port right\"></div>\n            </div>\n            <div style=\"margin-left: 4em; margin-top: -4em;\">\n                <div class=\"component-body\" style=\"background-color: #4CA1AF;\">\n                    <img src=\"./assets/api.svg\" alt=\"API visualization\">\n                    <div style=\"border-color: #4CA1AF;\" class=\"port left\"></div>\n                </div>\n                <div class=\"component-body\" style=\"margin-top: 1em; background-color: #4CA1AF;\">\n                    <img src=\"./assets/api.svg\" alt=\"API visualization\">\n                    <div style=\"border-color: #4CA1AF;\" class=\"port left\"></div>\n                </div>\n                <div class=\"component-body\" style=\"margin-top: 1em; background-color: #4CA1AF;\">\n                    <img src=\"./assets/api.svg\" alt=\"API visualization\">\n                    <div style=\"border-color: #4CA1AF;\" class=\"port left\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"animation-board-container\">\n        <svg viewBox=\"0 0 500 300\" xmlns=\"http://www.w3.org/2000/svg\" class=\"animation-board\" >\n            <g class=\"menu\">\n                <rect x=\"0\" y=\"0\" width=\"200\" height=\"300\" class=\"main\"></rect>\n                <g class=\"client\">\n                    <rect x=\"2\" y=\"2\" width=\"197\" height=\"30\" class=\"section\"></rect>\n                    <text x=\"10\" y=\"20\">Client-side</text>\n                    <g class=\"content\">\n                        <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"40\" height=\"40\" fill=\"#0EC35B\"></rect>\n                        <image height=\"26\" width=\"26\" xlink:href=\"https://honzaap.github.io/Systemizer/assets/client.svg\" x=\"7\" y=\"7\" visibility=\"visible\"></image>\n                    </g>\n                </g>\n                <g class=\"server\">\n                    <rect x=\"2\" y=\"0\" width=\"197\" height=\"30\" class=\"section\"></rect>\n                    <text x=\"10\" y=\"20\">Server-side</text>\n                    <g class=\"content\">\n                        <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"40\" height=\"40\" fill=\"#009FFF\"></rect>\n                        <image height=\"26\" width=\"26\" xlink:href=\"https://honzaap.github.io/Systemizer/assets/webserver.svg\" x=\"7\" y=\"7\" visibility=\"visible\"></image>\n                        <rect x=\"45\" y=\"0\" rx=\"5\" ry=\"5\" width=\"40\" height=\"40\" fill=\"#2C5364\"></rect>\n                        <image height=\"26\" width=\"26\" xlink:href=\"https://honzaap.github.io/Systemizer/assets/apigateway.svg\" x=\"52\" y=\"7\" visibility=\"visible\"></image>\n                        <rect x=\"90\" y=\"0\" rx=\"5\" ry=\"5\" width=\"40\" height=\"40\" fill=\"#4CA1AF\"></rect>\n                        <image height=\"26\" width=\"26\" xlink:href=\"https://honzaap.github.io/Systemizer/assets/api.svg\" x=\"97\" y=\"7\" visibility=\"visible\"></image>\n                    </g>\n                </g>\n            </g>\n            <line class=\"connection drag\" x1=\"316\" y1=\"105\" x2=\"369\" y2=\"105\"></line>\n            <line class=\"connection full\" x1=\"316.1\" y1=\"105.1\" x2=\"369\" y2=\"105\" stroke=\"url(#linear-grad-anim)\"></line>\n            <g class=\"comp-client\" style=\"transform: translate(200px, 200px)\">\n                <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"40\" height=\"40\" fill=\"#0EC35B\"></rect>\n                <image height=\"26\" width=\"26\" xlink:href=\"https://honzaap.github.io/Systemizer/assets/client.svg\" x=\"7\" y=\"7\" visibility=\"visible\"></image>\n                <circle r=\"6.5\" class=\"port\" cx=\"50\" cy=\"20\" stroke=\"#0EC35B\"></circle>\n            </g>\n            <g class=\"comp-api\" style=\"transform: translate(250px, 250px)\">\n                <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"40\" height=\"40\" fill=\"#4CA1AF\"></rect>\n                <image height=\"26\" width=\"26\" xlink:href=\"https://honzaap.github.io/Systemizer/assets/api.svg\" x=\"7\" y=\"7\" visibility=\"visible\"></image>\n                <circle r=\"6.5\" class=\"port\" cx=\"-10\" cy=\"20\" stroke=\"#4CA1AF\"></circle>\n            </g>\n            <g class=\"cursor normal\">\n                <foreignObject height=\"30\" width=\"30\"><i class=\"fas fa-mouse-pointer\"></i></foreignObject>\n            </g>\n            <g class=\"cursor pointer\">\n                <foreignObject height=\"30\" width=\"30\"><i class=\"fas fa-hand-pointer\"></i></foreignObject>\n            </g>\n            <linearGradient id=\"linear-grad-anim\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\n                <stop offset=\"0%\"   stop-color=\"#0EC35B\"/>\n                <stop offset=\"100%\" stop-color=\"#4CA1AF\"/>\n            </linearGradient>\n        </svg>\n    </div>\n    <div class=\"components\">\n        <div class=\"components-showcase\">\n            <div class=\"component-container\">\n                <span class=\"title\">Client</span>\n                <div style=\"background-color: #0EC35B;\" class=\"component-body\">\n                    <img src=\"./assets/client.svg\" alt=\"Client visualization\">\n                    <div style=\"border-color: #0EC35B;\" class=\"port right\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">Web Server</span>\n                <div style=\"border: 2px solid #009FFF; background-color: transparent;\" class=\"component-body\">\n                    <span style=\"background-color: #009FFF; border-color: #009FFF;\" class=\"img bg-webserver\"></span>\n                    <div style=\"border-color: #009FFF;\" class=\"port left\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">Load Balancer</span>\n                <div style=\"background-color: #021B79;\" class=\"component-body\">\n                    <img src=\"./assets/loadbalancer.svg\" alt=\"Load Balancer visualization\">\n                    <div style=\"border-color: #021B79;\" class=\"port left\"></div>\n                    <div style=\"border-color: #021B79;\" class=\"port right\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">API Gateway</span>\n                <div style=\"background-color: #2C5364;\" class=\"component-body high\">\n                    <img src=\"./assets/apigateway.svg\" alt=\"API Gateway visualization\">\n                    <div style=\"border-color: #2C5364;\" class=\"port left\"></div>\n                    <div style=\"border-color: #2C5364;\" class=\"port right\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">API Service</span>\n                <div style=\"background-color: #4CA1AF;\" class=\"component-body\">\n                    <img src=\"./assets/api.svg\" alt=\"API visualization\">\n                    <div style=\"border-color: #4CA1AF;\" class=\"port left\"></div>\n                    <div style=\"border-color: #4CA1AF;\" class=\"port right\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">Pub/Sub Model</span>\n                <div style=\"background-color: #FF7D35;\" class=\"component-body\">\n                    <img src=\"./assets/pubsub.svg\" alt=\"Publisher Subscriber visualization\">\n                    <div style=\"border-color: #FF7D35;\" class=\"port left\"></div>\n                    <div style=\"border-color: #FF7D35;\" class=\"port right\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">Database</span>\n                <div style=\"background-color: #E94057;\" class=\"component-body\">\n                    <img src=\"./assets/database.svg\" alt=\"Database visualization\">\n                    <div style=\"border-color: #E94057;\" class=\"port left\"></div>\n                    <div style=\"border-color: #E94057;\" class=\"port right\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">Cache</span>\n                <div style=\"background-color: #b21f1f;\" class=\"component-body\">\n                    <img src=\"./assets/cache.svg\" alt=\"Cache visualization\">\n                    <div style=\"border-color: #b21f1f;\" class=\"port left\"></div>\n                    <div style=\"border-color: #b21f1f;\" class=\"port right\"></div>\n                </div>\n            </div>\n\n            <div class=\"component-container\">\n                <span class=\"title\">Message Queue</span>\n                <div style=\"border: 2px solid #F2994A; background-color: transparent;\" class=\"component-body long mq\">\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div class=\"cell\"></div>\n                    <div style=\"border-color: #F2994A;\" class=\"port left\"></div>\n                    <div style=\"border-color: #F2994A;\" class=\"port right\"></div>\n                </div>\n            </div>\n        </div>\n        <div>\n            <h2 class=\"fs-3\">Create and visualize your backend system</h2>\n            <p class=\"caption-dark fs-5\">Many different components with customizable properties and more to come.</p>\n        </div>\n    </div>\n    <div class=\"get-started\">\n        <a class=\"btn-main\" routerLink=\"create\">Get started</a>\n    </div>\n    <div class=\"open-source text-center\">\n        <h3>Open source & Open to contributions!</h3>\n        <div class=\"mt-1\">\n            <a href=\"https://github.com/honzaap/Systemizer\">\n                <img alt=\"GitHub contributors\" src=\"https://img.shields.io/github/contributors/honzaap/Systemizer?color=df9300&label=Contributors&style=flat-square\">\n                <img alt=\"GitHub issues\" src=\"https://img.shields.io/github/issues-raw/honzaap/Systemizer?color=7767d4&label=Open%20issues&style=flat-square\">\n                <img alt=\"GitHub forks\" src=\"https://img.shields.io/github/forks/honzaap/Systemizer?color=080a1a&label=Fork%20us&style=flat-square\">\n                <img alt=\"GitHub Repo stars\" src=\"https://img.shields.io/github/stars/honzaap/Systemizer?color=9278ff&label=Star%20us&style=flat-square\">\n            </a>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Database, DatabaseOptions } from 'src/models/Database';\nimport { DatabaseEndpoint } from 'src/models/Endpoint';\nimport { Port } from 'src/models/Port';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'database',\n\ttemplateUrl: './database.component.html',\n\tstyleUrls: ['./database.component.scss']\n})\nexport class DatabaseComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicDatabase : Database = new Database();\n\tSHARDS_PER_SHRARD = 3;\n\n\tngAfterViewInit(): void {\n\t\tif(this.LogicDatabase.options.isMasterShard){\n\t\t\tthis.LogicDatabase.outputPort = new Port(this.LogicDatabase,true,true);\n\t\t}\n\t\tsuper.Init();\n\t\tthis.LogicDatabase.onRemoveShard(()=>{\n\t\t\tthis.outputPortRef.destroySelf()\n\t\t\tthis.outputPortRef = null;\n\t\t})\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicDatabase;\n\t}\n\n\tchangeDatabaseType(){\n\t\tif(this.LogicDatabase.outputPort == null)\t\n\t\t\treturn;\n\t\tfor(let conn of this.LogicDatabase.outputPort.connections){\n\t\t\tlet options = conn.getOtherPort(this.LogicDatabase.outputPort).parent.options;\n\t\t\tif(options instanceof  DatabaseOptions)\n\t\t\t\t(options as DatabaseOptions).type = this.LogicDatabase.options.type;\n\t\t}\n\t}\n\n\tcreateOutputPort(){\n\t\tthis.LogicDatabase.outputPort = new Port(this.LogicDatabase,true,true);\n\t\tthis.cdRef.detectChanges();\n\t\tthis.createPort(true);\n\t}\n\n\tshard(){\n\t\tthis.LogicDatabase.options.isMasterShard = true;\n\t\tthis.createOutputPort();\n\n\t\tlet dirX = 0;\n\t\tlet dirY = 0;\n\t\tlet initX = this.LogicDatabase.options.X;\n\t\tlet initY = this.LogicDatabase.options.Y;\n\t\tif(this.LogicDatabase.options.X <= 1920){ // Positioning shards\n\t\t\tdirY = this.LogicDatabase.options.Y <= 960 - this.SHARDS_PER_SHRARD * 80 ? 1 : -1;\n\t\t\tinitY = dirY > 0 ? Math.min(Math.max(this.LogicDatabase.options.Y-70,0), 960) : Math.min(Math.max(this.LogicDatabase.options.Y,0), 960);\n\t\t\tinitX += 120;\n\t\t}\n\t\telse if(this.LogicDatabase.options.X <= 1960 - this.SHARDS_PER_SHRARD * 80 && this.LogicDatabase.options.Y >= 60){\n\t\t\tdirX = 1;\n\t\t\tinitY = this.LogicDatabase.options.Y-40;\n\t\t}\n\t\telse{\n\t\t\tdirX = -1;\n\t\t\tinitY = this.LogicDatabase.options.Y + (this.LogicDatabase.options.Y <= 960-70 ? 70 : -70);\n\t\t}\n\t\tlet ep = new DatabaseEndpoint(\"/shard\");\n\t\tfor(let i = 0; i < this.SHARDS_PER_SHRARD; i++){\n\t\t\tlet comp = this.placingService.createComponent(DatabaseComponent, initX + dirX * 80 * i, initY + dirY * 70 * i, { type: this.LogicDatabase.options.type, isShard: true, title: `Shard ${i+1}`, endpoints: [ep] });\n\t\t\tcomp.onViewInit.push(() => {\n\t\t\t\tthis.placingService.connectPorts(this.getPortComponent(true), comp.getPortComponent(false));\n\t\t\t\tthis.placingService.pushComponent.emit(comp);\n\t\t\t});\n\t\t\tcomp.onAfterDestroySelf = () => {\n\t\t\t\tif(this.LogicDatabase.outputPort.connections.length == 0)\n\t\t\t\t\tthis.LogicDatabase.options.isMasterShard = false;\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.afterChange();\n\t\t\tthis.cdRef.detectChanges();\n\t\t}, 300);\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new Database();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicDatabase.options.X\"\n[style.top.px]=\"LogicDatabase.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/database.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of the database. This does not have any effect on the visualization.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"changeDatabaseType(); afterChange()\" [disabled]=\"LogicDatabase.options.isShard\" [(ngModel)]=\"LogicDatabase.options.type\">\n                      <mat-option *ngFor=\"let type of DatabaseTypeKeys\" [value]=\"type\">{{DatabaseType[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <endpoint-select\n        [Model]=\"LogicDatabase\"\n        [Type]=\"APIType.REST\"\n        [DatabaseEndpoints]=\"true\"\n        [Multiple]=\"false\"\n        [HasActions]=\"false\"\n        [ModifiableMethods]=\"false\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n    <div #actions>\n        <div class=\"options-actions\">\n            <div class=\"actions-container\">\n                <button [disabled]=\"LogicDatabase.options.isMasterShard || LogicDatabase.options.isShard\"\n                 (click)=\"shard()\">Shard Database</button>\n            </div>\n        </div>\n    </div>\n    <div #simulations>\n        <slider-described\n        [Model]=\"LogicDatabase\"\n        [AfterChange]=\"afterChange\"\n        ></slider-described>\n    </div>\n</div>","import { ViewChild } from '@angular/core';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { download, downloadPng, downloadSvg } from 'src/shared/ExtensionMethods';\nimport { BoardComponent } from '../board/board.component';\nimport { PlacingService } from '../placing.service';\nimport { EmbedIFrameOptions, ExportPngOptions, ExportSvgOptions } from '../export.service';\nimport { BoardUIComponent } from '../board/boardUI/boardUI.component';\nimport { SavingService } from '../saving.service';\nimport { ViewingService } from '../viewing.service';\n\n@Component({\n\tselector: 'app-create',\n\ttemplateUrl: './create.component.html',\n\tstyleUrls: ['./create.component.scss'],\n})\nexport class CreateComponent implements OnInit {\n\t@Input() queryParams?: Params | null\n\n\tisTutorialMenuOpen = false;\n\tshowOnboardIntro = false;\n\tshowMobileDisclaimer = false;\n\tshowReadOnlyViewer = false;\n\tshowReadOnlyViewerError = false;\n\tshowBoard = true;\n\tshowEdit = false;\n\n\tviewerSave: any;\n\tviewerEditLink: string;\n\n\t@ViewChild(BoardComponent) board:BoardComponent;\n\t@ViewChild(BoardUIComponent) ui:BoardUIComponent;\n\n  \tconstructor(private route: ActivatedRoute, private placingService: PlacingService, private savingService: SavingService, private viewingService: ViewingService) { }\n\n\tngOnInit(): void {\n\t\tlet seenIntroTutorial = localStorage.getItem(\"seenIntroTutorial\");\n\t\tthis.route.queryParams\n\t\t\t.subscribe(params => {\n\t\t\t\tif(params.viewer){\n\t\t\t\t\tthis.showBoard = false;\n\t\t\t\t\ttry{\n\t\t\t\t\t\tthis.viewerEditLink = `https://honzaap.github.io/Systemizer/create?edit=${params.viewer}`;\n\t\t\t\t\t\tlet json = atob(params.viewer);\n\t\t\t\t\t\tlet save = JSON.parse(json);\n\t\t\t\t\t\tif(Array.isArray(save)){\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tthis.viewingService.setDarkMode(save.darkMode, false);\n\t\t\t\t\t\t\tthis.viewingService.setTitlesHidden(!save.showTitles, false);\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save.comp);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.showReadOnlyViewer = true;\n\t\t\t\t\t}\n\t\t\t\t\tcatch{\n\t\t\t\t\t\tthis.showReadOnlyViewerError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(params.edit){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tlet json = atob(params.edit);\n\t\t\t\t\t\tlet save = JSON.parse(json)\n\t\t\t\t\t\tif(Array.isArray(save)){\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tthis.viewingService.setDarkMode(save.darkMode, false);\n\t\t\t\t\t\t\tthis.viewingService.setTitlesHidden(!save.showTitles, false);\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save.comp);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.showReadOnlyViewer = false;\n\t\t\t\t\t\tthis.showEdit = true;\n\t\t\t\t\t}\n\t\t\t\t\tcatch{\n\t\t\t\t\t\tthis.showReadOnlyViewerError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.showOnboardIntro = params[\"showOnboardTutorial\"] == \"true\";\n\t\t\t}\n\t\t);\n\n\t\tif(seenIntroTutorial != \"true\" || this.showOnboardIntro){\n\t\t\tthis.openTutorialMenu();\n\t\t\tlocalStorage.setItem(\"seenIntroTutorial\", \"true\");\n\t\t}\n\t}\n\n\tgetComponents(){\n\t\treturn () => {\n\t\t\treturn this.board.allLogicComponents;\n\t\t};\n\t}\n\n\tnewFile(){\n\t\tthis.board.newFile();\n\t}\n\n\tsaveFile(name: string){\n\t\tif(this.board.allLogicComponents.length == 0){\n\t\t\tthis.placingService.showSnack(\"There is nothing to save...\");\n\t\t\treturn;\n\t\t}\n\t\tlet file = this.savingService.getBoardJson(this.board.allLogicComponents, name, this.board.currentBoardId);\n\t\tthis.save();\n\t\tdownload(`${name}.json`, file);\t\n\t}\n\n\tloadFile(json: string){\n\t\t// Pass the file to board component\n\t\tthis.board.loadFromJson(json);\n\t}\n\n\tshowSaved(){\n\t\tthis.board.openSavedBoards();\n\t}\n\n\tsave(){\n\t\tthis.board.save(true);\n\t}\n\n\tasync exportPng(options: ExportPngOptions){\n\t\tlet canvas = await this.board.getCurrentBoardCanvas(options);\n\t\tif(canvas == null){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tdownloadPng(this.ui.name+\".png\", canvas.toDataURL('image/png', 1));\n\t}\n\n\tasync exportSvg(options: ExportSvgOptions){\n\t\tlet svg = await this.board.getCurrentBoardSvg(options);\n\t\tif(svg == null){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tdownloadSvg(this.ui.name+\".svg\", svg);\n\t}\n\n\tcopy(){\n\t\tthis.board.copyItem();\n\t}\n\n\tpaste(){\n\t\tthis.board.pasteItem();\n\t}\n\n\tselectAll(){\n\t\tthis.board.selectAll();\n\t}\n\n\tcut(){\n\t\tthis.board.cutItem();\n\t}\n\n\tdeleteComponent(){\n\t\tthis.board.delete();\n\t}\n\n\tundo(){\n\t\tthis.board.undo();\n\t}\n\n\tredo(){\n\t\tthis.board.redo();\n\t}\n\n\tclearBoard(){\n\t\tthis.board.clearBoard(false);\n\t\tthis.board.componentChanged();\n\t}\n\n\tfullscreen(){\n\t\tdocument.body.requestFullscreen();\n\t}\n\n\tzoomIn(){\n\t\tthis.board.zoomIn();\n\t}\n\n\tzoomOut(){\n\t\tthis.board.zoomOut();\n\t}\n\n\tresetView(){\n\t\tthis.board.resetView();\n\t}\n\n\topenTutorialMenu(){\n\t\tthis.isTutorialMenuOpen = true;\n\t}\n\n\tcloseTutorialMenu(){\n\t\tthis.isTutorialMenuOpen = false;\n\t}\n\n\tstartSimulation(){\n\t\tthis.board.startSimulation();\n\t}\n\n\tstopSimulation(){\n\t\tthis.board.stopSimulation();\n\t}\n\n\tchangeSystemName(name: string){\n\t\tif(this.ui == null){\n\t\t\tsetTimeout(() => {this.changeSystemName(name)}, 50);\n\t\t}\n\t\telse{\n\t\t\tthis.ui.changeName(name);\n\t\t}\n\t}\n\n\thandleScaleChange(scale: number){\n\t\tthis.placingService.boardScale = scale;\n\t\tthis.board.updateBoardTransform();\n\t}\n}\n","<div class=\"page\" *ngIf=\"showBoard\">\n    <board-ui\n        (newFile)=\"newFile()\"\n        (saveFile)=\"saveFile($event)\" \n        (loadFile)=\"loadFile($event)\"\n        (showSaved)=\"showSaved()\"\n        (save)=\"save()\" \n        (exportPng)=\"exportPng($event)\"\n        (exportSvg)=\"exportSvg($event)\"\n        (copyComponent)=\"copy()\"\n        (pasteComponent)=\"paste()\"\n        (selectAllComponents)=\"selectAll()\"\n        (cutComponent)=\"cut()\"\n        (delComponent)=\"deleteComponent()\"\n        (undo)=\"undo()\"\n        (redo)=\"redo()\"\n        (clearBoard)=\"clearBoard()\"\n        (fullscreen)=\"fullscreen()\"\n        (zoomIn)=\"zoomIn()\"\n        (zoomOut)=\"zoomOut()\"   \n        (changeScale)=\"handleScaleChange($event)\"\n        (resetView)=\"resetView()\"     \n        (onboardTutorial1)=\"openTutorialMenu()\" \n        (startSimulation)=\"startSimulation()\"\n        (stopSimulation)=\"stopSimulation()\"\n        [getComponents]=\"getComponents()\"\n        >\n    </board-ui>\n    <app-board (changeSystemName)=\"changeSystemName($event)\" *ngIf=\"!showEdit; else editTemplate\"></app-board>\n    <ng-template #editTemplate>\n        <app-board [loadedSave]=\"viewerSave\" (changeSystemName)=\"changeSystemName($event)\"></app-board>\n    </ng-template>\n    <app-componentmenu></app-componentmenu>\n    <app-optionsmenu></app-optionsmenu>\n    <div class=\"onboard-tutorial-container\">\n        <tutorial-controls *ngIf=\"isTutorialMenuOpen\" (closeMenu)=\"closeTutorialMenu()\"></tutorial-controls>\n    </div>\n</div>\n<div class=\"page\" *ngIf=\"showReadOnlyViewer\">\n    <app-board [loadedSave]=\"viewerSave\" [isReadOnly]=\"true\" [viewerEditLink]=\"viewerEditLink\"></app-board>\n</div>\n<div class=\"viewer-error\" *ngIf=\"showReadOnlyViewerError\">\n    <h5>System preview is not available</h5>\n    <p>The system is either corrupted or outdated.</p>\n    <p>If you want to provide a feedback, please do so in our GitHub <a href=\"https://github.com/honzaap/Systemizer/discussions\" target=\"_blank\">Discussions</a>  or <a href=\"https://github.com/honzaap/Systemizer/issues\" target=\"_blank\">Issues</a>.</p>\n</div>\n\n<!-- GitHub Corner. Provided by https://github.com/cedoor -->\n<a href=\"https://github.com/honzaap/Systemizer\" target=\"_blank\" class=\"github-corner\" style=\"z-index: 5000; position: absolute; top: 0; border: 0; right: 0;\">\n    <svg width=\"60\" height=\"60\" viewBox=\"0 0 250 250\" style=\"fill:#222; color:#fff;\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </svg>\n</a>\n<style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>\n<!-- End GitHub Corner. -->","export enum gRPCMode{\n    \"Unary\",\n    \"Client Streaming\",\n    \"Server Streaming\",\n    \"Bidirectional Streaming\"\n}","import { Connection } from \"./Connection\";\nimport { EndpointRef } from \"./Endpoint\";\nimport { Protocol } from \"./enums/Protocol\";\n\nexport class RequestData{\n    header: RequestDataHeader;\n    origin: Connection;\n    originID: string;\n    requestId: string;\n    responseId: string;\n    sendResponse: boolean = true;\n}\n\nexport class RequestDataHeader {\n    endpoint: EndpointRef;\n    protocol: Protocol;\n    stream: boolean;\n\n    constructor(endpointRef: EndpointRef, protocol: Protocol, stream = false) {\n        this.endpoint = endpointRef;\n        this.protocol = protocol;\n        this.stream = stream;\n    }\n}","import { AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { EndpointOperator } from 'src/models/EndpointOperator';\nimport { clone, sleep, UUID } from 'src/shared/ExtensionMethods';\nimport { ChangesService } from '../changes.service';\nimport { ExportPngOptions, ExportService, ExportSvgOptions } from '../export.service';\nimport { PlacingService } from '../placing.service';\nimport { SavingService } from '../saving.service';\nimport { SelectionService } from '../selection.service';\nimport { SimulationService } from '../simulation.service';\nimport { ViewingService } from '../viewing.service';\nimport { ApiComponent } from './components/api/api.component';\nimport { ApiGatewayComponent } from './components/apigateway/apigateway.component';\nimport { CacheComponent } from './components/cache/cache.component';\nimport { CDNComponent } from './components/cdn/cdn.component';\nimport { ClientComponent } from './components/client/client.component';\nimport { ClientclusterComponent } from './components/clientcluster/clientcluster.component';\nimport { CloudStorageComponent } from './components/cloudstorage/cloudstorage.component';\nimport { DatabaseComponent } from './components/database/database.component';\nimport { LoadbalancerComponent } from './components/loadbalancer/loadbalancer.component';\nimport { MessagequeueComponent } from './components/messagequeue/messagequeue.component';\nimport { ProxyComponent } from './components/proxy/proxy.component';\nimport { PubsubComponent } from './components/pubsub/pubsub.component';\nimport { OperatorComponent } from './components/Shared/OperatorComponent';\nimport { TextfieldComponent } from './components/textfield/textfield.component';\nimport { WebserverComponent } from './components/webserver/webserver.component';\n\nclass SavedBoard{\n\ttitle: string;\n\tboard: IDataOperator[];\n\tsave: any;\n\n\tconstructor(title: string, board: IDataOperator[], save: any) {\n\t\tthis.title = title;\n\t\tthis.board = board;\n\t\tthis.save = save;\n\t}\n}\n\n@Component({\n\tselector: 'app-board',\n\ttemplateUrl: './board.component.html',\n\tstyleUrls: ['./board.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BoardComponent implements AfterViewChecked  {\n\n\tboard : HTMLElement;\n\tposX = 0;\n\tposY = 0;\n\tboardMoved: boolean = false;\n\n\tisLoading = false;\n\tisAutosaving = false;\n\tcurrentBoardId: string = UUID();\n\tisAllClientsSendingData = false;\n\tcanToggleClientsSendingData = true;\n\tlastTouch: Touch;\n\n\t@Input() isReadOnly = false;\n\t@Input() loadedSave: any;\n\t@Input() viewerEditLink: string;\n\n\tAUTOSAVE_INTERVAL = 30;\n\t/**\n\t * Converting types of logic component to angular component\n\t */\n\tcomponentTypes = { \n\t\tClient: ClientComponent,\n\t\tClientCluster: ClientclusterComponent,\n\t\tAPI: ApiComponent,\n\t\tAPIGateway: ApiGatewayComponent,\n\t\tCache: CacheComponent,\n\t\tCloudStorage: CloudStorageComponent,\n\t\tDatabase: DatabaseComponent,\n\t\tLoadBalancer: LoadbalancerComponent,\n\t\tMessageQueue: MessagequeueComponent,\n\t\tPubSub: PubsubComponent,\n\t\tProxy: ProxyComponent,\n\t\tTextField: TextfieldComponent,\n\t\tWebServer: WebserverComponent,\n\t\tCDN: CDNComponent\n\t}\n\n\t@ViewChild(\"conn\", { read: ViewContainerRef }) conn;\n\t@ViewChild(\"savedBoardsRef\") savedBoardsRef: ElementRef;\n\n\t@Output() changeSystemName = new EventEmitter();\n\n\tallLogicComponents: IDataOperator[] = [];\n\tallComponents: OperatorComponent[] = [];\n\n\t/**\n\t * The Json representation of the board before change was made\n\t */\n\tbeforeState: any = \"\";\n\n\tshowSavedBoards: boolean;\n\tshowSavedBoardsPopup: boolean;\n\tsavedBoards: SavedBoard[] = [];\n\tselectedSavedBoard: SavedBoard;\n\n\tshowContextMenu: boolean = false;\n\tshowComponentContextMenu: boolean = false;\n\tcontextMenuX: number;\n\tcontextMenuY: number;\n\n\tconstructor(public placingService : PlacingService,\n\tprivate selectionService: SelectionService, \n\tprivate snackBar: MatSnackBar,\n\tprivate savingService: SavingService,\n\tprivate changeRef: ChangeDetectorRef,\n\tprivate changesService: ChangesService,\n\tprivate exportService: ExportService,\n\tprivate viewingService: ViewingService,\n\tpublic simulationService: SimulationService,\n\tprivate renderer: Renderer2) { }\n\t\n\tscroll(event){\n\t\tevent.preventDefault();\n\t\tif(event.deltaY < 0)\n\t\t\tthis.zoomIn();\n\t\telse\n\t\t\tthis.zoomOut();\n\t}\n\t\n\tngOnInit(): void {\n\t\tthis.board = document.getElementById(\"board\");\n\t\tthis.board.style.width = `${this.placingService.boardWidth}px`;\n\t\tthis.board.style.height = `${this.placingService.boardHeight}px`;\n\t\tthis.board.onwheel = (e) => {this.scroll(e)};\n\n\t\tthis.updateBoardTransform();\n\n\t\tthis.board.addEventListener(\"resize\", e => {\n\t\t\te.preventDefault();\n\t\t});\n\n\t\tif(!this.isReadOnly){ // These events will not be used in readonly board\n\t\t\tthis.selectionService.onStopSelecting.subscribe((e) => {\n\t\t\t\tfor(let component of this.allComponents){\n\t\t\t\t\tlet logicComponent = component.getLogicComponent();\n\n\t\t\t\t\tlet size = this.exportService.getComponentSize(logicComponent);\n\t\t\t\t\tlet pos = {top: logicComponent.options.Y, left: logicComponent.options.X};\n\t\t\t\t\tif(pos.top >= e.top && pos.left >= e.left && pos.left + size.width < e.left + e.width && pos.top + size.height < e.top + e.height){\n\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\tthis.selectionService.addSelection(component, true);\n\t\t\t\t\t\t}, 20);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.board.addEventListener(\"mouseup\",(e)=>{\n\t\t\t\tif(this.placingService.isCreating){\n\t\t\t\t\tlet component = this.placingService.createComponent(this.placingService.creatingItem, e.offsetX - 20, e.offsetY - 20, this.placingService.creatingItemOptions);\n\t\t\t\t\tthis.pushComponent(component);\n\t\t\t\t\tthis.placingService.stopCreating();\n\t\t\t\t\tthis.componentChanged();\n\t\t\t\t}\n\t\t\t});\n\t\t\twindow.addEventListener(\"touchstart\",(e) => {this.lastTouch = e.touches[0];});\n\t\t\twindow.addEventListener(\"touchmove\", (e) => {this.lastTouch = e.touches[0];});\n\t\t\n\t\t\twindow.addEventListener(\"touchend\",(e: any)=>{\n\t\t\t\tif(this.placingService.isCreating){\n\t\t\t\t\tlet posX = (this.posX - this.placingService.boardWidth * (this.placingService.boardScale - 1) / 2);\n\t\t\t\t\tlet posY = (this.posY - this.placingService.boardHeight * (this.placingService.boardScale - 1) / 2);\n\t\t\t\t\tvar x = Math.max(Math.min((this.lastTouch.pageX - posX) / this.placingService.boardScale - 20, this.placingService.boardWidth), 0);\n\t\t\t\t\tvar y =  Math.max(Math.min((this.lastTouch.pageY - posY) / this.placingService.boardScale - 80 / this.placingService.boardScale, this.placingService.boardWidth), 0);\n\t\t\t\t\tlet component = this.placingService.createComponent(this.placingService.creatingItem, x, y, this.placingService.creatingItemOptions);\n\t\t\t\t\tthis.pushComponent(component);\n\t\t\t\t\tthis.placingService.stopCreating();\n\t\t\t\t\tthis.componentChanged();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tthis.placingService.componentChanged.subscribe(()=>{\n\t\t\t\t// Some component just got changed, change will be added for undo\n\t\t\t\tthis.componentChanged();\n\t\t\t})\n\t\t\tthis.placingService.pushComponent.subscribe((component: OperatorComponent)=>{\n\t\t\t\t// A component was created somewhere else and needs to be added to the state of the board\n\t\t\t\tthis.pushComponent(component);\n\t\t\t})\n\t\t\tthis.placingService.showComponentContextMenu.subscribe((e)=>{\n\t\t\t\t// Display a context menu on component\n\t\t\t\tthis.showComponentContextMenu = true;\n\t\t\t\tthis.showContextMenu = false;\n\t\t\t\tthis.contextMenuX = e.x;\n\t\t\t\tthis.contextMenuY = e.y;\n\t\t\t})\n\t\t\tsetInterval(()=>{\n\t\t\t\tif(this.allLogicComponents.length != 0){\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\t\t\t}, this.AUTOSAVE_INTERVAL * 1000);\n\t\t}\n\t}\n\n\tcopyItem(){\n\t\tlet selections = [];\n\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\tlet outputConnectionsList = []\n\t\t\tlet component = selection.getLogicComponent();\n\t\t\tlet outputPort = selection.getPortComponent(true);\n\t\t\tif(outputPort){\n\t\t\t\toutputConnectionsList = outputConnectionsList.concat(\n\t\t\t\t\toutputPort.LogicPort.connections.map(conn => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tfrom: outputPort.LogicParent.originID,\n\t\t\t\t\t\t\tto: conn.getOtherPort(outputPort.LogicPort).parent.originID,\n\t\t\t\t\t\t\tlineBreaks: conn.lineBreaks,\n\t\t\t\t\t\t\ttitle: conn.title\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} \n\t\t\tselections.push({ \n\t\t\t\tcomponent: selection.constructor, \n\t\t\t\tlogicComponent: selection.getLogicComponent(),\n\t\t\t\toptions: clone(component.options),\n\t\t\t\toutputConnectionsList: outputConnectionsList\n\t\t\t})\n\t\t}\n\t\tthis.placingService.copyItems(selections);\n\t}\n\n\tpasteItem(x: number = -1, y: number = -1){\n\t\tthis.selectionService.clearSelection();\n\t\tthis.selectionService.clearCurrentConnectionSelections();\n\t\tfor(let component of this.placingService.pasteItem(x,y)){\n\t\t\tthis.pushComponent(component);\n\t\t\tcomponent.onViewInit.push(()=>{\n\t\t\t\tthis.selectionService.addSelection(component, true);\n\t\t\t});\n\t\t}\n\t\tthis.componentChanged();\n\t}\n\n\tcutItem(){\n\t\tthis.copyItem();\n\t\tthis.delete();\n\t}\n\n\tselectAll(){\n\t\tfor(let component of this.allComponents){\n\t\t\tthis.selectionService.addSelection(component, true);\n\t\t}\n\t}\n\n\tngAfterViewChecked(): void { this.changeRef.detectChanges();}\n\t\n\tasync ngAfterViewInit(){\n\t\tthis.placingService.connectionRef = this.conn;\n\t\tthis.placingService.snackBar = this.snackBar;\n\t\tif(this.loadedSave){\n\t\t\tthis.loadFromSave(this.loadedSave);\n\t\t}\n\t\telse if(!this.isReadOnly){\n\t\t\tthis.loadLatestBoard();\n\t\t}\n\n\t\tif(!this.isReadOnly){\n\t\t\t// Loading saved boards\n\t\t\tlet savedBoardsJson = this.savingService.getSavedBoardsJson();\n\t\t\tif(savedBoardsJson == null)\n\t\t\t\treturn;\n\t\t\tlet savedBoards = JSON.parse(savedBoardsJson) as any[];\n\t\t\tif(savedBoards.length == 0)\n\t\t\t\treturn;\n\t\t\tfor(let board of savedBoards){ // Convert all boards to IDataOperator[]\n\t\t\t\tlet convertedBoard = this.savingService.getComponentsFromSave(board.components);\n\t\t\t\tif(convertedBoard)\n\t\t\t\t\tthis.savedBoards.push(new SavedBoard(board.name || \"Untitled System\", convertedBoard, board));\n\t\t\t}\n\t\t\tfor(let savedBoard of this.savedBoards){\n\t\t\t\tthis.displaySavedBoard(savedBoard);\n\t\t\t}\n\t\t\tthis.showSavedBoardsPopup = true;\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.showSavedBoardsPopup = false;\n\t\t\t}, 6500);\n\t\t}\n\t\telse{\n\t\t\tthis.resetView();\n\t\t}\n\t}\n\n\tasync displaySavedBoard(savedBoard: SavedBoard){\n\t\tlet divContainer = this.renderer.createElement('div');\n\t\tdivContainer.className = \"saved-board\";\n\t\tdivContainer.id = savedBoard.save.id;\n\n\t\tdivContainer.onclick = () => {\n\t\t\t// Display options\n\t\t\tif(this.selectedSavedBoard){\n\t\t\t\tdocument.getElementById(this.selectedSavedBoard.save.id).classList.remove(\"selected\")\n\t\t\t}\n\t\t\tthis.selectedSavedBoard = savedBoard;\n\t\t\tdocument.getElementById(this.selectedSavedBoard.save.id).classList.add(\"selected\")\n\t\t}\n\t\tdivContainer.ondblclick  = () => {\n\t\t\t// Load board\n\t\t\tthis.closeSavedBoards();\n\t\t\tthis.loadFromSave(savedBoard.save);\n\t\t}\n\t\tlet canvas = await this.exportService.getCanvas(savedBoard.board, new ExportPngOptions())\n\t\tcanvas.style.width = \"100%\";\n\t\tcanvas.style.marginBottom = \"-5px\";\n\n\t\tlet title = this.renderer.createElement(\"span\");\n\t\ttitle.innerText = savedBoard.title;\n\t\ttitle.className = \"saved-board-title\";\n\n\t\tlet existing = document.getElementById(savedBoard.save.id);\n\t\tif(existing)\n\t\t\tthis.savedBoardsRef.nativeElement.removeChild(existing);\n\n\t\tthis.renderer.appendChild(divContainer, canvas);\n\t\tthis.renderer.appendChild(divContainer, title);\n\t\tthis.renderer.appendChild(this.savedBoardsRef.nativeElement, divContainer);\n\t}\n\n\topenSavedBoards(){\n\t\tthis.showSavedBoards = true;\n\t\tthis.showSavedBoardsPopup = false;\n\t\tlet savedBoard = this.savedBoards.find(board => board.save.id == this.currentBoardId);\n\t\tif(savedBoard)\n\t\t\tthis.displaySavedBoard(savedBoard);\n\t}\n\n\tcloseSavedBoards(){\n\t\tthis.showSavedBoards = false;\n\t}\n\n\tdeleteSelectedSavedBoard(){\n\t\tthis.savedBoardsRef.nativeElement.removeChild(document.getElementById(this.selectedSavedBoard.save.id));\n\n\t\tthis.savedBoards.splice(this.savedBoards.findIndex(board => board === this.selectedSavedBoard), 1);\n\t\tthis.selectedSavedBoard = null;\n\t\tthis.savingService.saveBoards(this.savedBoards.map(board => board.save));\n\t}\n\n\tloadSelectedSavedBoard(){\n\t\tthis.changesService.reset();\n\t\tif(this.allLogicComponents.length != 0)\n\t\t\tthis.saveCurrentBoardToAllBoards();\n\t\tthis.closeSavedBoards();\n\t\tthis.loadFromSave(this.selectedSavedBoard.save);\n\t}\n\n\tasync getCurrentBoardCanvas(options: ExportPngOptions){\n\t\treturn await this.exportService.getCanvas(this.allLogicComponents, options);\n\t}\n\n\tasync getCurrentBoardSvg(options: ExportSvgOptions){\n\t\treturn await this.exportService.getSvg(this.allLogicComponents, options);\n\t}\n\n\tloadLatestBoard(){\n\t\tlet latestBoardJson = this.savingService.getLatestBoardJson();\n\t\tif(latestBoardJson){\n\t\t\ttry{\n\t\t\t\tthis.loadFromJson(latestBoardJson, false);\n\t\t\t}\n\t\t\tcatch(e){\n\t\t\t\tconsole.log(e);\n\t\t\t\tthis.isLoading = false;\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.beforeState = this.getCurrentBoardJson();\n\t\t}, 1000);\n\t}\n\n\tpublic handleMousedown(e: Event) {\n\t\tif(e instanceof MouseEvent){\n\t\t\tif(e.button == 0 && !this.isReadOnly){\n\t\t\t\t// Start selecting\n\t\t\t\tthis.showContextMenu = false;\n\t\t\t\tthis.showComponentContextMenu = false;\n\t\t\t\tthis.selectionService.startSelecting(e, this.placingService.boardScale)\n\t\t\t}\n\t\t\telse if(this.isReadOnly || e.button == 1 || e.button == 2){\n\t\t\t\te.preventDefault();\n\t\t\t\tif(!this.placingService.canDrag()) \n\t\t\t\t\treturn;\n\t\t\t\tthis.board.classList.add(\"moving\")\n\t\t\t\tthis.board.addEventListener( \"mousemove\", this.handleMousemove );\n\t\t\t\twindow.addEventListener( \"mouseup\", this.handleMouseup );\n\t\t\t}\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\te.preventDefault();\n\t\t\tif(!this.placingService.canDrag()) \n\t\t\t\treturn;\n\t\t\tthis.lastTouchMoveX = e.touches[0].clientX;\n\t\t\tthis.lastTouchMoveY = e.touches[0].clientY;\n\t\t\tthis.board.classList.add(\"moving\")\n\t\t\tthis.board.addEventListener( \"touchmove\", this.handleMousemove );\n\t\t\twindow.addEventListener( \"touchend\", this.handleMouseup );\n\t\t}\n\t\t\n\t}\n\n\tlastTouchMoveX: number = 0;\n\tlastTouchMoveY: number = 0;\n\n\tpublic handleMousemove = ( e: Event ): void => {\n\t\tif(e instanceof MouseEvent){\n\t\t\tthis.boardMoved = true;\n\t\t\tthis.showContextMenu = false;\n\t\t\tthis.showComponentContextMenu = false;\n\t\t\tthis.posX += e.movementX;\n\t\t\tthis.posY += e.movementY;\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\tthis.boardMoved = true;\n\t\t\tthis.showContextMenu = false;\n\t\t\tthis.showComponentContextMenu = false;\n\t\t\tthis.posX += e.touches[0].clientX - this.lastTouchMoveX;\n\t\t\tthis.posY += e.touches[0].clientY - this.lastTouchMoveY;\n\t\t\tthis.lastTouchMoveX = e.touches[0].clientX;\n\t\t\tthis.lastTouchMoveY = e.touches[0].clientY;\n\t\t}\n\n\t\tthis.updateBoardTransform();\n\t}\n\n\tpublic handleMouseup = (e: Event) : void => {\n\t\tif(e instanceof MouseEvent){\n\t\t\tif(e.button === 2 && !this.boardMoved && !this.isReadOnly){\n\t\t\t\tthis.showContextMenu = true;\n\t\t\t\tthis.showComponentContextMenu = false;\n\t\t\t\tthis.contextMenuX = e.offsetX;\n\t\t\t\tthis.contextMenuY = e.offsetY;\n\t\t\t}\n\t\t\tthis.boardMoved = false;\n\t\t\tthis.board.classList.remove(\"moving\")\n\t\t\tthis.board.removeEventListener( \"mousemove\", this.handleMousemove );\n\t\t\twindow.removeEventListener( \"mouseup\", this.handleMouseup );\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\tthis.boardMoved = false;\n\t\t\tthis.board.classList.remove(\"moving\")\n\t\t\tthis.board.removeEventListener( \"touchmove\", this.handleMousemove );\n\t\t\twindow.removeEventListener( \"touchend\", this.handleMouseup );\n\t\t}\n\t\n\t}\n\n\tpublic updateBoardTransform(){\n\t\tthis.board.style.transform = `translateX(${this.posX}px) translateY(${this.posY}px) scale(${this.placingService.boardScale})`;\n\t}\n\n\tpublic handleClick = () : void => {\n\t\tif(this.placingService.isConnecting){\n\t\t\tthis.placingService.stopConnecting();\n\t\t\tthis.board.onmousemove = null;\n\t\t\tdocument.getElementsByClassName(\"svg-canvas\")[0].innerHTML = \"\";\n\t\t}\n\t}\n\n\tpublic handleSelfClick(){\n\t\tthis.selectionService.clearSelection();\n\t\tthis.selectionService.clearConnectionSelection();\n\t\tthis.selectionService.clearCurrentConnectionSelections();\n\t\tthis.selectionService.clearLineBreakSelection();\n\t}\n\n\tzoomOut(modifier: number = 1){\n\t\tthis.placingService.boardScale = Math.max(this.placingService.boardScale - (0.1 / modifier),0.1) ;\n\t\tthis.updateBoardTransform();\n\t}\n\n\tzoomIn(modifier: number = 1){\n\t\tthis.placingService.boardScale = Math.min(this.placingService.boardScale + (0.1 / modifier),2);\n\t\tthis.updateBoardTransform();\n\t}\n\n\ttoggleTitles(){\n\t\tthis.viewingService.setTitlesHidden(\n\t\t\t!this.viewingService.isTitlesHidden(), false\n\t\t);\n\t}\n\n\tresetView(){\n\t\tif(this.allLogicComponents.length == 0 || !this.isReadOnly){\n\t\t\tthis.posX = (window.innerWidth - this.placingService.boardWidth) / 2;\n\t\t\tthis.posY = (window.innerHeight - this.placingService.boardHeight) / 2;\n\t\t\tthis.placingService.boardScale = 1;\n\t\t}\n\t\telse{\n\t\t\tlet minX = Number.MAX_VALUE;\n\t\t\tlet minY = Number.MAX_VALUE;\n\t\t\tlet maxX = 0;\n\t\t\tlet maxY = 0;\n\n\t\t\tfor(let component of this.allLogicComponents){\n\t\t\t\tminX = Math.min(component.options.X, minX);\n\t\t\t\tminY = Math.min(component.options.Y, minY);\n\t\t\t\tlet {width, height} = this.exportService.getComponentSize(component);\n\t\t\t\tmaxX = Math.max(component.options.X + width, maxX);\n\t\t\t\tmaxY = Math.max(component.options.Y + height, maxY);\n\t\t\t}\n\t\t\t// Size of components\n\t\t\tlet width = maxX - minX + 80;\n\t\t\tlet height = maxY - minY + 30;\n\n\t\t\t// Adjust scale to fit size\n\t\t\tthis.placingService.boardScale = Math.max(Math.min(Math.round((window.innerWidth / width) / 0.1) * 0.1, 2), 0.3);\n\t\t\tthis.placingService.boardScale = Math.max(Math.min(Math.round((window.innerHeight / height) / 0.1) * 0.1, this.placingService.boardScale), 0.3);\n\n\t\t\tlet xFromCenter = (this.placingService.boardWidth / 2) - minX;\n\t\t\tlet yFromCenter = (this.placingService.boardHeight / 2) - minY;\n\t\t\t\n\t\t\tthis.posX = - minX + xFromCenter + (window.innerWidth - width * this.placingService.boardScale) / 2 + 20;\n\t\t\tthis.posY = - minY + yFromCenter + (window.innerHeight - height * this.placingService.boardScale) / 2 + 15;\n\t\t\t\n\t\t\t// Get the board in view\n\t\t\tfor(let i = 2; i > this.placingService.boardScale; i -= 0.1){\n\t\t\t\tthis.posX -= xFromCenter / 10;\n\t\t\t\tthis.posY -= yFromCenter / 10;\n\t\t\t}\n\t\t}\n\t\tthis.updateBoardTransform();\n\t}\n\n\t/**\n\t * Triggers every client in the board to send data automatically\n\t */\n\tasync startAllClients(){\n\t\tif(this.isAllClientsSendingData || !this.canToggleClientsSendingData)\n\t\t\treturn;\n\t\tthis.canToggleClientsSendingData = false;\n\t\tthis.isAllClientsSendingData = true;\n\t\tfor(let component of this.allComponents){\n\t\t\tif(component instanceof ClientComponent){\n\t\t\t\tif(component.canEstablishConnection){\n\t\t\t\t\tcomponent.establishConnection();\n\t\t\t\t}\n\t\t\t\tcomponent.toggleAutomaticSend();\n\t\t\t\tawait sleep(300); // Make some delay between\n\t\t\t}\n\t\t\telse if(component instanceof ClientclusterComponent){\n\t\t\t\tcomponent.LogicClientCluster.startSendingData();\n\t\t\t\tawait sleep(300); // Make some delay between\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.canToggleClientsSendingData = true;\n\t\t}, 400);\n\t}\n\n\tstopAllClients(){\n\t\tif(!this.isAllClientsSendingData || !this.canToggleClientsSendingData)\n\t\t\treturn;\n\t\tthis.canToggleClientsSendingData = false;\n\t\tthis.isAllClientsSendingData = false;\n\t\tfor(let component of this.allComponents){\n\t\t\tif(component instanceof ClientComponent){\n\t\t\t\tif(component.canEndConnection){\n\t\t\t\t\tcomponent.endConnection();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcomponent.toggleAutomaticSend();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(component instanceof ClientclusterComponent){\n\t\t\t\tcomponent.LogicClientCluster.stopSendingData();\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.canToggleClientsSendingData = true;\n\t\t}, 400);\n\t}\n\n\t/**\n\t * Starts flow simulation\n\t */\n\tstartSimulation(){\n\t\tthis.simulationService.startFlowSimulation();\n\t\tfor(let component of this.allComponents){\n\t\t\tlet logicComponent = component.getLogicComponent()\n\t\t\tif(logicComponent instanceof EndpointOperator){\n\t\t\t\tlogicComponent.isFlowSimulationOn = true;\n\t\t\t\tcomponent.cdRef.detectChanges();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stops flow simulation\n\t */\n\tstopSimulation(){\n\t\tthis.simulationService.stopFlowSimulation();\n\t\tfor(let component of this.allComponents){\n\t\t\tlet logicComponent = component.getLogicComponent()\n\t\t\tif(logicComponent instanceof EndpointOperator){\n\t\t\t\tlogicComponent.isFlowSimulationOn = false;\n\t\t\t\tcomponent.cdRef.detectChanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentChanged(){\n\t\tthis.changesService.pushChange(this.beforeState);\n\t\tthis.beforeState = this.getCurrentBoardJson();\n\t}\n\n\tgetCurrentBoardJson(){\n\t\treturn this.savingService.getBoardJson(this.allLogicComponents, this.savingService.systemName, this.currentBoardId);\n\t}\n\n\tundo(){\n\t\tlet undoState = this.changesService.getUndo(this.getCurrentBoardJson());\n\t\tif(undoState)\n\t\t\tthis.loadFromJson(undoState, false);\n\t\tsetTimeout(()=>{\n\t\t\tthis.beforeState = this.getCurrentBoardJson();\n\t\t}, 400)\n\t}\n\n\tredo(){\n\t\tlet redoState = this.changesService.getRedo();\n\t\tif(redoState)\n\t\t\tthis.loadFromJson(redoState, false);\n\t\tsetTimeout(()=>{\n\t\t\tthis.beforeState = this.getCurrentBoardJson();\n\t\t}, 400)\n\t}\n\n\tdelete(){\n\t\tlet components = this.selectionService.currentSelections; \n\t\tfor(let component of components){ \n\t\t\tlet logicComponent = component.getLogicComponent();\n\t\t\tthis.allComponents.splice(this.allComponents.findIndex(comp => comp === component),1);\n\t\t\tthis.allLogicComponents.splice(this.allLogicComponents.findIndex(comp => comp.originID == logicComponent.originID),1);\n\t\t}\n\n\t\tif(this.selectionService.deleteSelection())\n\t\t\tthis.componentChanged();\n\t}\n\n\tnewFile(){\n\t\tif(this.allLogicComponents.length != 0)\n\t\t\tthis.saveCurrentBoardToAllBoards();\n\t\tthis.currentBoardId = UUID();\n\t\tthis.changeSystemName.emit(\"Untitled system\");\n\t\tthis.clearBoard(true);\n\t\tthis.resetView();\n\t\tthis.changesService.reset();\n\t}\n\n\tsave(showIcon = false){\n\t\tif(this.isReadOnly)\n\t\t\treturn;\n\t\tthis.savingService.save(this.allLogicComponents, this.currentBoardId);\n\t\tthis.saveCurrentBoardToAllBoards();\n\t\tif(showIcon){\n\t\t\tthis.isAutosaving = true;\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.isAutosaving = false;\n\t\t\t}, 1000)\n\t\t}\n\t}\n\n\tloadFromJson(json: string, showInfo = true){\n\t\ttry{\n\t\t\tlet file = JSON.parse(json);\n\t\t\tthis.loadFromSave(file);\n\t\t}\n\t\tcatch(e){\n\t\t\tconsole.log(e);\n\t\t\tif(showInfo)\n\t\t\t\tthis.placingService.showSnack(\"This file could not be loaded because it is corrupted or not supported.\")\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.isLoading = false;\n\t\t\t}, 100);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Loads the board from save object generated by saving service\n\t */\n\tloadFromSave(save: any, showInfo = true){\n\t\tthis.clearBoard();\n\t\tthis.isLoading = true;\n\t\tlet wasError = false;\n\t\tlet components: any[];\n\t\tcomponents = save;\n\t\tif(save.components)\n\t\t\tcomponents = save.components;\n\t\tif(components == null || components.length == 0){\n\t\t\tthis.isLoading = false;\n\t\t\treturn;\n\t\t}\n\t\tif(save.name)\n\t\t\tthis.changeSystemName.emit(save.name);\n\t\tif(save.id != null && save.id != \"undefined\")\n\t\t\tthis.currentBoardId = save.id;\n\t\telse\n\t\t\tthis.currentBoardId = UUID();\n\n\t\tlet connectionTable: any[] = [];\n\t\tlet outputPortsTable: any = {};\n\t\tlet index = 0;\n\t\tfor(let logicComponent of components){\n\t\t\tlet type = this.getComponentTypeFromName(logicComponent.type);\n\t\t\tif(type == null || logicComponent.options == null){\n\t\t\t\twasError = true;\n\t\t\t\tif(index == components.length - 1){\n\t\t\t\t\tthis.connectLoadedComponents(connectionTable, outputPortsTable);\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet left = logicComponent.options.X;\n\t\t\tlet top = logicComponent.options.Y;\n\t\t\tlet component = this.placingService.createComponent(type as any, left, top, logicComponent.options, this.isReadOnly);\n\n\t\t\tthis.pushComponent(component);\n\t\t\tconst currentComponentIndex = index;\n\t\t\tcomponent.onViewInit.push(() => {\n\t\t\t\tif(component instanceof DatabaseComponent && component.getLogicComponent().options.isMasterShard){\n\t\t\t\t\tcomponent.createOutputPort()\n\t\t\t\t}\n\t\t\t\tlet outputPort = component.getPortComponent(true);\n\t\t\t\tlet inputPort = component.getPortComponent(false);\n\t\t\t\tif(outputPort){\n\t\t\t\t\toutputPortsTable[logicComponent.id] = outputPort;\n\t\t\t\t}\n\t\t\t\tif(inputPort){\n\t\t\t\t\tlet connection: any = {};\n\t\t\t\t\tconnection.port = inputPort;\n\t\t\t\t\tconnection.id = logicComponent.id;\n\t\t\t\t\tconnection.to = logicComponent.connections;\n\t\t\t\t\tconnectionTable.push(connection);\n\t\t\t\t}\n\t\t\t\tif(currentComponentIndex == components.length - 1){\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.connectLoadedComponents(connectionTable, outputPortsTable);\n\t\t\t\t\t}, 150);\n\t\t\t\t}\n\t\t\t});\n\t\t\tindex++;\n\t\t}\n\t\tif(wasError && showInfo)\n\t\t\tthis.placingService.showSnack(\"There were errors loading the file and some components couldn't be loaded.\")\n\t}\n\n\tsaveCurrentBoardToAllBoards(){\n\t\tlet boardSave = this.savingService.getBoardSave(this.allLogicComponents, this.savingService.systemName, this.currentBoardId);\n\t\tlet currentBoardIndex = this.savedBoards.findIndex(board => board.save.id == this.currentBoardId);\n\t\tlet savedBoard = new SavedBoard(boardSave.name, this.allLogicComponents, boardSave);\n\t\tif(currentBoardIndex != -1)\n\t\t\tthis.savedBoards.splice(currentBoardIndex, 1);\n\t\telse\n\t\t\tthis.displaySavedBoard(savedBoard);\n\t\tthis.savedBoards.push(savedBoard);\n\t\tthis.savingService.saveBoards(this.savedBoards.map(board => board.save));\n\t}\n\n\tconnectLoadedComponents(connectionTable: any[], outputPortsTable: any){\n\t\tfor(let connection of connectionTable){\n\t\t\tconnection.to.filter(con => con.isFromOutput == null || !con.isFromOutput).forEach(con => {\n\t\t\t\tthis.placingService.connectPorts(outputPortsTable[con.to], connection.port, this.isReadOnly, con.lineBreaks, con.title);\n\t\t\t});\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.isLoading = false;\n\t\t\tthis.save();\n\t\t\tthis.updateComponents();\n\t\t}, 100);\n\t}\n\n\tupdateComponents(){\n\t\tfor(let component of this.allComponents){\n\t\t\tif((component as any).updateSelection){\n\t\t\t\t(component as any).updateSelection();\n\t\t\t}\n\t\t}\n\t}\n\n\tclearBoard(clearLocalStorage = false){\n\t\tfor(let component of this.allComponents){\n\t\t\tthis.selectionService.currentSelections = [component]; \n\t\t\ttry{ // Deleting element while sending data could throw error\n\t\t\t\tthis.selectionService.deleteSelection();\n\t\t\t}\n\t\t\tcatch{}\n\t\t}\n\t\tif(clearLocalStorage)\n\t\t\tlocalStorage.setItem(this.savingService.LOCALSTORAGE_AUTOSAVE_KEY,\"\");\n\t\tthis.allComponents = [];\n\t\tthis.allLogicComponents = [];\n\t\tthis.simulationService.stopFlowSimulation();\n\t}\n\n\tgetComponentTypeFromName(name: string){\n\t\treturn this.componentTypes[name];\n\t}\n\n\tpushComponent(component: OperatorComponent){\n\t\tthis.allComponents.push(component);\n\t\tthis.allLogicComponents.push(component.getLogicComponent());\n\t}\n}","<div #board class=\"board infocus\" id=\"board\" oncontextmenu=\"return false;\"\n (mousedown.self)=\"handleMousedown( $event )\" (click.self)=\"handleSelfClick()\" (click)=\"handleClick()\"\n (touchstart.self)=\"handleMousedown($event); handleSelfClick()\" (pinchout)=\"zoomIn(8)\" (pinchin)=\"zoomOut(8)\">\n    <template #conn></template>\n    <svg class=\"svg-canvas\" id=\"svg-canvas\" >\n    </svg>\n    <div [style.transform]=\"'scale(' + 1/placingService.boardScale + ')'\" oncontextmenu=\"return false;\" class=\"context-menu\" *ngIf=\"showContextMenu\" [style.top.px]=\"contextMenuY\" [style.left.px]=\"contextMenuX\">\n        <div class=\"menu\">\n            <div class=\"item\" (click)=\"pasteItem(contextMenuX, contextMenuY); showContextMenu = false\">Paste here</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"selectAll(); showContextMenu = false\">Select all</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"zoomIn(); showContextMenu = false\">Zoom in</div>\n            <div class=\"item\" (click)=\"zoomOut(); showContextMenu = false\">Zoom out</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"undo(); showContextMenu = false\">Undo</div>\n            <div class=\"item\" (click)=\"redo(); showContextMenu = false\">Redo</div>\n            <div class=\"item\" (click)=\"save(true); showContextMenu = false\">Save</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"resetView(); showContextMenu = false\">Reset view</div>\n        </div>\n    </div>\n    <div [style.transform]=\"'scale(' + 1/placingService.boardScale + ')'\" oncontextmenu=\"return false;\" class=\"context-menu\" *ngIf=\"showComponentContextMenu\" [style.top.px]=\"contextMenuY\" [style.left.px]=\"contextMenuX\">\n        <div class=\"menu\">\n            <div class=\"item\" (click)=\"delete(); showComponentContextMenu = false\">Delete</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"copyItem(); showComponentContextMenu = false\">Copy</div>\n            <div class=\"item\" (click)=\"cutItem(); showComponentContextMenu = false\">Cut</div>\n        </div>\n    </div>\n    <div [style.top]=\"simulationService.Model.options.Y + 'px'\" [style.left]=\"simulationService.Model.options.X + 'px'\" class=\"simulation-card\" *ngIf=\"simulationService.isSimulationCardOpen\">\n        <div class=\"card-top\">\n            <span class=\"title\">\n                <span *ngIf=\"simulationService.Model.options.title.length > 20; else fullTitle\">\n                    {{ simulationService.Model.options.title | slice:0:20 }}...\n                </span>\n                <ng-template #fullTitle>\n                    {{ simulationService.Model.options.title}}\n                </ng-template>\n                \n                <small><br>\n                    ({{ simulationService.Model.options['performance'] < 4 ? 'Low' : simulationService.Model.options['performance'] < 8 ? 'Medium' : 'High' }} performance)\n                </small>\n            </span>\n        </div>\n        <div class=\"card-body\">\n            <p>Response time: <b>{{ simulationService.Model['simulationState'].responseTime > 5000 ? '>5000' : '~' + simulationService.Model['simulationState'].responseTime }}</b>ms</p>\n            <p>Maximum flow: <b>{{ simulationService.Model.options['performance'] }}</b></p>\n            <p>Incoming flow: <b [style.color]=\"'hsl(' + simulationService.Model['simulationState'].rating + ', 74%, 36%)'\">{{ simulationService.Model['simulationState'].incomingFlow }}</b></p>\n            <p>Currently processing <b>{{ simulationService.Model['requestCount'] }}</b> requests</p>\n        </div>\n        <svg class=\"svg-meter\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 20\" height=\"20\" width=\"24\">\n            <path [attr.fill]=\"'hsl(' + simulationService.Model['simulationState'].rating + ', 74%, 36%)'\"\n                d=\"M 12 0 C 5.3830004 0 2.3684758e-15 5.383 0 12 C -0.0013500031 14.7847 0.97151 17.4822 2.75 19.625 L 3.03125 20 L 20.970703 20 L 21.251953 19.625 C 23.030053 17.482 24.0016 14.7846 24 12 C 24 5.383 18.617 0 12 0 z M 12 2 C 17.535 2 22 6.465 22 12 C 22 14.266 21.2075 16.324 19.9375 18 L 4.0625 18 C 2.7925 16.324 2 14.266 2 12 C 2 6.465 6.4650004 2 12 2 z M 12 3 C 11.45 3 11 3.45 11 4 C 11 4.55 11.45 5 12 5 C 12.55 5 13 4.55 13 4 C 13 3.45 12.55 3 12 3 z M 8 4.0625 C 7.45 4.0625 7 4.5115 7 5.0625 C 7 5.6125 7.45 6.0625 8 6.0625 C 8.55 6.0625 9 5.6125 9 5.0625 C 9 4.5115 8.55 4.0625 8 4.0625 z M 16 4.0625 C 15.45 4.0625 15 4.5115 15 5.0625 C 15 5.6125 15.45 6.0625 16 6.0625 C 16.55 6.0625 17 5.6125 17 5.0625 C 17 4.5115 16.55 4.0625 16 4.0625 z M 5.0625 7 C 4.5125 7 4.0625 7.45 4.0625 8 C 4.0625 8.55 4.5125 9 5.0625 9 C 5.6135 9 6.0625 8.55 6.0625 8 C 6.0625 7.45 5.6135 7 5.0625 7 z M 18.9375 7 A 0.9999994 0.9999994 0 0 0 17.9375 8 A 0.9999994 0.9999994 0 0 0 18.9375 9 A 0.9999994 0.9999994 0 0 0 19.9375 8 A 0.9999994 0.9999994 0 0 0 18.9375 7 z M 4 11 C 3.45 11 3 11.45 3 12 C 3 12.55 3.45 13 4 13 C 4.55 13 5 12.55 5 12 C 5 11.45 4.55 11 4 11 z M 20 11 C 19.45 11 19 11.45 19 12 C 19 12.55 19.45 13 20 13 C 20.55 13 21 12.55 21 12 C 21 11.45 20.55 11 20 11 z M 5.0625 15 C 4.5125 15 4.0625 15.45 4.0625 16 C 4.0625 16.55 4.5125 17 5.0625 17 C 5.6135 17 6.0625 16.55 6.0625 16 C 6.0625 15.45 5.6135 15 5.0625 15 z M 18.9375 15 C 18.3865 15 17.9375 15.45 17.9375 16 C 17.9375 16.55 18.3865 17 18.9375 17 C 19.4875 17 19.9375 16.55 19.9375 16 C 19.9375 15.45 19.4875 15 18.9375 15 z \"\n            />\n            <line [style.transform]=\" 'rotateZ(' + (180 - (simulationService.Model['simulationState'].rating / 100) * 180) + 'deg)' \" \n            class=\"hand\" x1=\"4\" y1=\"12\" x2=\"12\" y2=\"12\"></line>\n         </svg>\n         \n        <span class=\"close\" (click)=\"simulationService.closeSimulationCard()\">\n            <i class=\"fas fa-times\"></i>\n        </span>\n    </div>\n</div>\n<div class=\"backdrop-centralized loading\" *ngIf=\"isLoading\">\n    Loading...\n    <img src=\"./assets/logo.svg\">\n</div>\n<div *ngIf=\"!isReadOnly\">\n    <div class=\"autosave\" *ngIf=\"isAutosaving\">\n        <i class=\"far fa-save\"></i>\n    </div>\n    <div class=\"backdrop-centralized\" [style.display]=\"showSavedBoards ? 'flex' : 'none'\" (click.self)=\"closeSavedBoards()\">\n        <div class=\"saved-boards\">\n            <button class=\"close\" (click)=\"closeSavedBoards()\">×</button>\n            <div class=\"saved-boards-top\">\n                <h3 class=\"title\">Your saved systems</h3>\n                <span class=\"note\">Note that these systems are saved in your browser and aren't permanent!</span>\n            </div>\n            <div class=\"saved-boards-main-container\">\n                <div class=\"saved-boards-main\" #savedBoardsRef>\n                    <span *ngIf=\"savedBoards == null || savedBoards.length == 0\">You don't have any saved boards...</span>\n                </div>\n                <div class=\"saved-boards-side\">\n                    <span class=\"selected-title\">{{ selectedSavedBoard == null ? \"Select a board\" : selectedSavedBoard.title }}</span>\n                    <div class=\"selected-info\">\n                        <span *ngIf=\"selectedSavedBoard != null\"><span class=\"highlight\">{{ selectedSavedBoard.board.length }}</span> component{{ selectedSavedBoard.board.length == 1 ? \"\" : \"s\" }}</span>\n                    </div>\n                    <div class=\"selected-actions\">\n                        <button (click)=\"deleteSelectedSavedBoard()\" [disabled]=\"selectedSavedBoard == null\" class=\"delete\">Delete</button>\n                        <button (click)=\"loadSelectedSavedBoard()\" [disabled]=\"selectedSavedBoard == null\" class=\"load\">Load</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"saved-boards-popup\" [style.transform]=\"showSavedBoardsPopup ? 'translateX(0)' : 'translateX(calc(100% - 2.15em))' \">\n        <span class=\"hidden\">{{ savedBoards.length }}</span>\n        <div class=\"show\" >\n            <span class=\"text\">You have {{ savedBoards.length }} saved system<span *ngIf=\"savedBoards.length != 1\">s</span></span>\n            <button (click)=\"openSavedBoards()\">Show all</button>\n        </div>\n    </div>\n</div>\n<div class=\"read-only-controls\" *ngIf=\"isReadOnly\">\n    <div class=\"controls\">\n        <button *ngIf=\"!isAllClientsSendingData\" (click)=\"startAllClients()\" matTooltip=\"{{ 'Start animation' }}\"><i class=\"fas fa-play\"></i></button>\n        <button *ngIf=\"isAllClientsSendingData\" (click)=\"stopAllClients()\" matTooltip=\"{{ 'Stop animation' }}\"><i class=\"fas fa-stop\"></i></button>\n        <button (click)=\"zoomIn()\" matTooltip=\"{{ 'Zoom in' }}\"><i class=\"fas fa-search-plus\"></i></button>\n        <button (click)=\"zoomOut()\" matTooltip=\"{{ 'Zoom out' }}\"><i class=\"fas fa-search-minus\"></i></button>\n        <button (click)=\"resetView()\" matTooltip=\"{{ 'Reset view' }}\"><i class=\"fas fa-search\"></i></button>\n        <button (click)=\"toggleTitles()\" matTooltip=\"{{ 'Toggle titles' }}\"><i class=\"fas fa-heading\"></i></button>\n        <a target=\"_blank\" href=\"{{viewerEditLink}}\" matTooltip=\"{{ 'Edit board' }}\"><i class=\"fas fa-edit\"></i></a>\n    </div>\n</div>\n<p class=\"read-only-watermark\" *ngIf=\"isReadOnly\">\n    Visualization provided by <a target=\"_blank\" href=\"https://honzaap.github.io/Systemizer\">Systemizer</a>\n</p>\n<p class=\"read-only-tip\" *ngIf=\"isReadOnly\" matTooltip=\"{{ 'You can also hover over individual Clients to send data' }}\">\n    ?\n</p>","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals, getRateFromOutputRate, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\n\nexport class ClientCluster extends LogicComponent implements IDataOperator{\n\n    outputPort: Port;\n    options: ClientClusterOptions;\n    streamingConnections: StreamingConnection[] = [];\n    isSendingData: boolean;\n    color = \"#2ebf91\";\n\n    constructor() {\n        super();\n        this.outputPort = new Port(this, true, true);        \n        this.options = new ClientClusterOptions();\n        this.options.title = \"Client Cluster\";\n    }\n\n    receiveData(data: RequestData): void {\n        this.fireReceiveData(data);\n        if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"]){\n            if(data.header.stream != true){ // Disconnect from stream\n                let streamConnection = this.streamingConnections.find(con => con.connectionId === data.responseId);\n                if(streamConnection != null)\n                    this.streamingConnections.splice(this.streamingConnections.findIndex(con => con.connectionId === data.responseId), 1);\n            }\n        }\n    }\n\n    /**\n     * Starts sending data to random available endpoints\n     */\n    startSendingData(){\n        this.isSendingData = true;    \n        this.sendNewRequest();\n    }\n\n    stopSendingData(){\n        for(let streamConnection of this.streamingConnections){\n            this.stopStream(streamConnection.connectionId);\n        }\n        this.streamingConnections = [];\n        this.isSendingData = false;\n    }\n\n    async sendNewRequest(){\n        await sleep( (1 / getRateFromOutputRate(this.options.outputRate)) * 1000 )\n        if(!this.isSendingData)\n            return;\n        this.sendNewRequest();\n        if(this.outputPort.connections.length == 0)\n            return;\n        let connection = this.outputPort.connections[Math.floor(Math.random() * this.outputPort.connections.length)];\n        let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n        if(endpoints.length == 0)\n            return;\n        let targetEndpoint = endpoints[Math.floor(Math.random() * endpoints.length)];\n        let request = new RequestData();\n        request.origin = connection;\n        request.originID = this.originID;\n        request.requestId = UUID();\n        let epRef = new EndpointRef();\n        epRef.endpoint = targetEndpoint;\n        epRef.method = targetEndpoint.supportedMethods[Math.floor(Math.random() * targetEndpoint.supportedMethods.length)];\n        request.header = new RequestDataHeader(epRef, targetEndpoint.protocol);\n        if(targetEndpoint.grpcMode != gRPCMode.Unary || targetEndpoint.protocol == Protocol.WebSockets){ \n            // Stream endpoint \n            let streamConnection = this.streamingConnections.find(con => con.endpoint === targetEndpoint);\n            if(streamConnection != null){ \n                // Already streaming to this connection -> end stream\n                this.stopStream(streamConnection.connectionId);\n                this.streamingConnections.splice(this.streamingConnections.findIndex(con => con.connectionId == streamConnection.connectionId), 1);\n            }\n            else{ \n                // Estabilish new stream to given connection \n                this.streamingConnections.push(new StreamingConnection(request.requestId, targetEndpoint, connection));\n                this.stream(request, request.requestId);\n            }\n        }\n        else{ \n            // Basic endpoint\n            this.sendData(request);\n        }\n    }\n\n    async sendData(data: RequestData) {\n        return await this.outputPort.sendData(data, data.origin);\n    }\n\n    getAvailableEndpoints(): Endpoint[] {\n        let availableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (availableEndpoints.find(ep => ep.url === endpoint.url && arrayEquals(endpoint.supportedMethods, ep.supportedMethods)) != null)\n                if(!duplicate)\n                    availableEndpoints.push(endpoint);\n            });        \n        }\n        return availableEndpoints;\n    }\n\n    stopStream(connectionId){\n        let streamConnection = this.streamingConnections.find(con => con.connectionId == connectionId);\n        if(streamConnection == null || streamConnection.endpoint.grpcMode == gRPCMode.Unary && streamConnection.endpoint.protocol != Protocol.WebSockets)\n            return;\n        let data = new RequestData();\n        let epRef = new EndpointRef();\n        epRef.endpoint = streamConnection.endpoint;\n        epRef.method = epRef.endpoint.supportedMethods[Math.floor(Math.random() * epRef.endpoint.supportedMethods.length)];\n        data.header = new RequestDataHeader(epRef, epRef.endpoint.protocol, false);\n        data.requestId = connectionId;\n        data.origin = streamConnection.connection;\n        data.originID = this.originID;\n        this.sendData(data);\n    }\n\n    async stream(data: RequestData, connectionId: string){\n        let streamConnection = this.streamingConnections.find(con => con.connectionId == connectionId);\n        if(!this.isSendingData || streamConnection == null || streamConnection.endpoint.grpcMode == gRPCMode.Unary && streamConnection.endpoint.protocol != Protocol.WebSockets)\n            return;\n        data.requestId = connectionId;\n        data.origin = streamConnection.connection;\n        data.header.stream = true;\n        this.sendData(data);\n        await sleep(700);\n        await this.stream(data, connectionId);\n    }\n}\n\nexport class ClientClusterOptions extends Options{\n    outputRate: number = 5;\n}\n\nclass StreamingConnection {\n    connectionId: string ;\n\tendpoint: Endpoint ;\n\tconnection: Connection;\n\n    constructor(connectionId: string, endpoint: Endpoint, connection: Connection) {\n        this.connectionId = connectionId;\n        this.connection = connection;\n        this.endpoint = endpoint;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { API } from 'src/models/API';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { APIType } from 'src/models/enums/APIType';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'api',\n\ttemplateUrl: './api.component.html',\n\tstyleUrls: ['./api.component.scss']\n})\nexport class ApiComponent  extends OperatorComponent implements OnInit{\n\n\tpublic LogicApi: API = new API();\n\t\n\tconnectableEndpoints: Endpoint[] = [];\n\t\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tupdateSelection(){\n\t\tthis.connectableEndpoints = this.LogicApi.getConnectableEndpoints();\n\t\tfor(let j = 0; j < this.LogicApi.options.endpoints.length; j++){\n\t\t\tlet endpoint = this.LogicApi.options.endpoints[j];\n\t\t\tfor(let i = 0; i < endpoint.actions.length; i++){\n\t\t\t\tlet action = endpoint.actions[i];\n\t\t\t\tlet currEdp = action.endpoint;\n\t\t\t\tlet currMth = action.method;\n\t\t\t\tthis.LogicApi.options.endpoints[j].actions[i].endpoint = null;\n\t\t\t\tif(this.connectableEndpoints.length == 0){\n\t\t\t\t\tthis.connectableEndpoints = [];\n\t\t\t\t\tendpoint.actions = [];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(currEdp != null && currMth != null){\n\t\t\t\t\tfor(let e of this.connectableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\t\t\tif(e.url == currEdp.url)\n\t\t\t\t\t\t\tthis.LogicApi.options.endpoints[j].actions[i].endpoint = e;\n\t\t\t\t\t}\n\t\t\t\t\tendpoint.actions[i].method = currMth;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tendpoint.actions.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTypeChange(){\n\t\tlet type = this.LogicApi.options.type;\n\t\tlet endpoint: Endpoint;\n\t\tif(type == APIType.REST){\n\t\t\tendpoint = new Endpoint(\"api/posts\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE]);\n\t\t}\n\t\telse if(type == APIType.GraphQL){\n\t\t\tendpoint = new Endpoint(\"/graphql\",[HTTPMethod.GET,HTTPMethod.POST]);\n\t\t}\n\t\telse if(type == APIType.RPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t}\n\t\telse if(type == APIType.gRPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t\tendpoint.grpcMode = gRPCMode.Unary;\n\t\t}\n    \telse if(type == APIType.WebSockets){\n\t\t\tendpoint = new Endpoint(\"api/sendMessage\", [HTTPMethod.GET]);\n\t\t\tendpoint.protocol = Protocol.WebSockets;\n\t\t}\n\t\tthis.LogicApi.options.endpoints = [endpoint];\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicApi;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new API();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicApi.options.X \"\n[style.top.px]=\"LogicApi.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/api.svg\">\n    </div>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div>\n            <div class=\"options-type-container\">\n                <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of an API. This can change the behaviour of endpoints.'\"></info-tooltip></span>\n                <div>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select (selectionChange)=\"handleTypeChange(); afterChange()\" [(ngModel)]=\"LogicApi.options.type\">\n                            <mat-option *ngFor=\"let type of APITypeKeys\" [value]=\"type\">{{APIType[type]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <endpoint-select\n            [Model]=\"LogicApi\"\n            [Type]=\"LogicApi.options.type\"\n            [AfterChange]=\"afterChange\"\n            [ConnectableEndpoints]=\"connectableEndpoints\"\n            ></endpoint-select>\n        </div>\n    </div>\n    <div #simulations>\n        <slider-described\n        [Model]=\"LogicApi\"\n        [AfterChange]=\"afterChange\"\n        ></slider-described>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Cache } from \"src/models/Cache\";\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n    selector: 'cache',\n    templateUrl: './cache.component.html',\n    styleUrls: ['./cache.component.scss']\n})\nexport class CacheComponent extends OperatorComponent implements OnInit {\n    \n    public LogicCache : Cache = new Cache();\n\n    public getLogicComponent(){\n        return this.LogicCache;\n    }\n\n    static getColor(): string{\n\t\tlet c = new Cache();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicCache.options.X\"\n[style.top.px]=\"LogicCache.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/cache.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Write Policy: <info-tooltip [Message]=\"'Changes the write policy of the cache. This changes behaviour of writes.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicCache.options.writePolicy\">\n                      <mat-option *ngFor=\"let type of WritePolicyKeys\" [value]=\"type\">{{WritePolicy[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Replacement Policy: <info-tooltip [Message]=\"'Changes the replacement policy of the cache. This does not have any effect on the visualization.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicCache.options.replacementPolicy\">\n                      <mat-option *ngFor=\"let type of ReplacementPolicyKeys\" [value]=\"type\">{{ReplacementPolicy[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"simulation-icon\" (click)=\"showCard()\" *ngIf=\"simulationService.isFlowSimulationOn\">\n    <i *ngIf=\"Model['simulationState'].responseTime <= 550\" class=\"fas fa-check success\"></i>\n    <i *ngIf=\"Model['simulationState'].responseTime > 550 && Model['simulationState'].responseTime < 1000\" class=\"fas fa-exclamation-triangle warning\"></i>\n    <i *ngIf=\"Model['simulationState'].responseTime >= 1000\" class=\"fas fa-exclamation-triangle danger\"></i>\n</div>\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { SimulationService } from 'src/app/simulation.service';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\n\n@Component({\n\tselector: 'simulation-card',\n\ttemplateUrl: './simulation-card.component.html',\n\tstyleUrls: ['./simulation-card.component.scss']\n})\nexport class SimulationCardComponent implements OnInit {\n\n\t@Input() Model: IDataOperator;\n\n\tconstructor(private cdRef: ChangeDetectorRef, public simulationService: SimulationService) { }\n\n\tngOnInit(): void {\n\t}\n\n\tshowCard(){\n\t\tthis.simulationService.openSimulationCard(this.Model);\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tcloseCard(){\n\t\tthis.simulationService.closeSimulationCard();\n\t\tthis.cdRef.detectChanges();\n\t}\n}\n","<input *ngIf=\"!viewingService.isTitlesHidden()\" type=\"text\" class=\"component-title\" [(ngModel)]=\"Model.options.title\" spellcheck=\"false\">\n<img *ngIf=\"Model.options.technology != null && Model.options.technology != 0 && !viewingService.isTechnologiesHidden()\" class=\"technology-image\" src=\"./assets/technologies/{{exportService.convertTechnology(Model.options.technology)}}.svg\" alt=\"{{Model.options.technology}}\">","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { ExportService } from 'src/app/export.service';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\n\n@Component({\n\tselector: 'component-title',\n\ttemplateUrl: './title.component.html',\n\tstyleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n\n\t@Input() Model: IDataOperator\n\n\tconstructor(public viewingService: ViewingService, public exportService: ExportService, private cdRef: ChangeDetectorRef) { \n\t\tviewingService.ViewUpdated.subscribe(() => {\n\t\t\tthis.cdRef.detectChanges();\n\t\t})\n\t}\n\n\tngOnInit(): void { \n\t\tthis.cdRef.detectChanges();\n\t}\n}","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { SelectionService } from 'src/app/selection.service';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { Connection, LineBreak } from 'src/models/Connection';\nimport { createRoundedPath, UUID } from 'src/shared/ExtensionMethods';\nimport { PortComponent } from '../port/port.component';\n\n@Component({\n\tselector: 'connection',\n\ttemplateUrl: './connection.component.html',\n\tstyleUrls: ['./connection.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConnectionComponent implements OnInit {\n  \n\tpublic portComponent1 : PortComponent;\n\tpublic portComponent2 : PortComponent;\n\t\n\tpublic LogicConnection : Connection;\n\n\tisReadOnly = false;\n\tline: string = \"\";\n\n\t@ViewChild(\"svg\") svg: ElementRef;\n\t@ViewChild(\"mainPath\") mainPath: ElementRef;\n\t@ViewChild(\"secondPath\") secondPath: ElementRef;\n\t@ViewChild(\"data\") data: ElementRef;\n\t@ViewChild(\"dataAnim\") dataAnim: ElementRef;\n\tconnectionID: string = UUID();\n\n\tlineCurrX: number = 0;\n\tlineCurrY: number = 0;\n\tlinePrevX: number = 0;\n\tlinePrevY: number = 0;\n\n\ttitlePopupX: number = 0;\n\ttitlePopupY: number = 0;\n\n\tconstructor(private cdRef: ChangeDetectorRef, public selectionService: SelectionService, private viewingService: ViewingService){\n\t\tcdRef.detach();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.cdRef.detectChanges();\n\t\tthis.portComponent1.LogicPort.onRemoveConnection((conn) => {\n\t\t\tif(conn === this.LogicConnection){\n\t\t\t\tthis.destroyComponent();\n\t\t\t\tthis.portComponent1.removeConnection(this);\n\t\t\t}\n\t\t});\n\n\t\tthis.portComponent2.LogicPort.onRemoveConnection((conn) => {\n\t\t\tif(conn === this.LogicConnection){\n\t\t\t\tthis.destroyComponent();\n\t\t\t\tthis.portComponent2.removeConnection(this);\n\t\t\t}    \n\t\t});\n\n\t\tthis.LogicConnection.onSendData((port)=>{\n\t\t\tlet dataSvg = document.createElementNS('http://www.w3.org/2000/svg','circle');\n\t\t\tdataSvg.style.opacity = \"0\";\n\t\t\tthis.svg.nativeElement.appendChild(dataSvg);\n\t\t\tlet anim = document.createElementNS('http://www.w3.org/2000/svg','animateMotion');\n\t\t\tlet delay = Math.max(this.mainPath.nativeElement.getTotalLength(), 230);\n\n\t\t\tif(this.viewingService.isResponsesHidden() && port !== this.portComponent1.LogicPort){\n\t\t\t\tthis.LogicConnection.getSendDataDelay = () => {return delay}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tanim.setAttribute(\"attributeName\", \"cx\");\n\n\t\t\tanim.setAttribute(\"dur\", `${delay+20}ms`);\n\n\t\t\tanim.setAttribute(\"begin\", \"0\");\n\n\t\t\tanim.setAttribute(\"rotate\", \"auto\");\n\n\t\t\tanim.setAttribute(\"calcMode\", \"linear\");\n\n\t\t\tanim.setAttribute(\"path\", this.line);\n\n\t\t\tdataSvg.setAttribute(\"r\",\"5\")\n\t\t\tdataSvg.setAttribute(\"fill\",\"#31B78D\")\n\n\t\t\tif(port !== this.portComponent1.LogicPort){\n\t\t\t\tanim.setAttribute(\"keyPoints\", \"1;0\");\n\t\t\t\tanim.setAttribute(\"keyTimes\", \"0;1\");\n\t\t\t}\n\n\t\t\tdataSvg.appendChild(anim);\n\n\t\t\t(anim as any).beginElement();\n\t\t\tsetTimeout(() => {\n\t\t\t\tdataSvg.style.opacity = \"1\";\n\t\t\t}, 10)\n\t\t\tsetTimeout(()=>{\n\t\t\t\tdataSvg.remove();\n\t\t\t},delay)\n\n\t\t\tthis.LogicConnection.getSendDataDelay = () => {return delay}\n\t\t})\n\t}\n\n\thandleClick(){\n\t\tthis.selectionService.setConnectionSelection(this);\n\t\tlet startX = this.LogicConnection.lineBreaks[0].x;\n\t\tlet startY = this.LogicConnection.lineBreaks[0].y;\n\t\tlet endX = this.LogicConnection.lineBreaks[this.LogicConnection.lineBreaks.length-1].x;\n\t\tlet endY = this.LogicConnection.lineBreaks[this.LogicConnection.lineBreaks.length-1].y;\n\t\tthis.titlePopupX = startX + (endX - startX) / 2 - 60;\n\t\tthis.titlePopupY = startY + (endY - startY) / 2 - 55;\n\t}\n\n\tngAfterViewInit(){\n\t\tthis.portComponent1.addConnection(this);\n\t\tthis.portComponent2.addConnection(this);\n\t\tif(this.LogicConnection.lineBreaks == null || this.LogicConnection.lineBreaks.length === 0){\n\t\t\tthis.LogicConnection.lineBreaks = [\n\t\t\t\tnew LineBreak((this.portComponent1.port.nativeElement.offsetLeft+this.portComponent1.port.nativeElement.clientWidth/2),(this.portComponent1.port.nativeElement.offsetTop+this.portComponent1.port.nativeElement.clientHeight/2)),\n\t\t\t\tnew LineBreak((this.portComponent2.port.nativeElement.offsetLeft+this.portComponent2.port.nativeElement.clientWidth/2),(this.portComponent2.port.nativeElement.offsetTop+this.portComponent2.port.nativeElement.clientHeight/2))\n\t\t\t]\n\t\t}\n\t}\n\n\tdestroySelf = () => {\n\t\tthis.LogicConnection.destroy();\n\t\tthis.destroyComponent();\n\t}\n\n\tdestroyComponent = () => {}\n\n\tngAfterViewChecked(){\n\t\tthis.cdRef.detectChanges();\n\t\tif(this.portComponent1.port && this.portComponent2.port){\n\t\t\tthis.LogicConnection.lineBreaks[0] = \n\t\t\t\tnew LineBreak((this.portComponent1.port.nativeElement.offsetLeft+this.portComponent1.port.nativeElement.clientWidth/2)+0.1,(this.portComponent1.port.nativeElement.offsetTop+this.portComponent1.port.nativeElement.clientHeight/2)+0.1),\n\t\t\tthis.LogicConnection.lineBreaks[this.LogicConnection.lineBreaks.length-1] =\n\t\t\t\tnew LineBreak((this.portComponent2.port.nativeElement.offsetLeft+this.portComponent2.port.nativeElement.clientWidth/2),(this.portComponent2.port.nativeElement.offsetTop+this.portComponent2.port.nativeElement.clientHeight/2))\n\t\t\tthis.line = createRoundedPath(this.LogicConnection.lineBreaks, 10, false);\n\t\t}\n\t}\n\n\tbreakLine(previous: LineBreak, next: LineBreak, event: Event){\n\t\tlet line = new LineBreak(\n\t\t\t(previous.x + next.x)/2,\n\t\t\t(previous.y + next.y)/2);\n\t\tlet index = this.LogicConnection.lineBreaks.findIndex(br => br.x === previous.x && br.y === previous.y);\n\t\tif(index == -1){\n\t\t\treturn;\n\t\t}\n\t\tthis.LogicConnection.lineBreaks.splice(index + 1, 0, line);\n\t\tthis.moveLine(line, event);\n\t}\n\n\tmoveLine(line: LineBreak, event: Event){\n\t\tif(this.selectionService.currentConnectionSelections.length === 0)\n\t\t\tthis.selectionService.setLineBreakSelection(line, this.LogicConnection.lineBreaks);\n\t\tlet index = this.LogicConnection.lineBreaks.findIndex(br => br.x === line.x && br.y === line.y);\n\t\tlet prev = this.LogicConnection.lineBreaks[index-1];\n\t\tlet next = this.LogicConnection.lineBreaks[index+1];\n\t\tlet board = document.getElementById(\"board\");\n\t\tthis.lineCurrX = line.x;\n\t\tthis.lineCurrY = line.y;\n\t\tthis.linePrevX = 0;\n\t\tthis.linePrevY = 0;\n\n\t\tif(event instanceof MouseEvent){\n\t\t\tthis.linePrevX = event.clientX;\n\t\t\tthis.linePrevY = event.clientY;\n\n\t\t\tboard.onmousemove = (e: MouseEvent) => {\n\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - e.clientX) / this.portComponent1.placingService.boardScale;\n\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - e.clientY) / this.portComponent1.placingService.boardScale;\n\t\n\t\t\t\tlet moveX = true;\n\t\t\t\tlet moveY = true;\n\t\n\t\t\t\tconst SNAP_ANGLE = 10;\n\t\n\t\t\t\tlet diffNextX = Math.abs(this.lineCurrX - next.x);\n\t\t\t\tlet diffNextY = Math.abs(this.lineCurrY - next.y);\n\t\t\t\tlet diffPrevX = Math.abs(this.lineCurrX - prev.x);\n\t\t\t\tlet diffPrevY = Math.abs(this.lineCurrY - prev.y);\n\t\t\t\tif(diffNextY < SNAP_ANGLE){\n\t\t\t\t\tline.y = next.y;\n\t\t\t\t\tmoveY = false\n\t\t\t\t}\n\t\t\t\telse if(diffNextX < SNAP_ANGLE){\n\t\t\t\t\tline.x = next.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(diffPrevY < SNAP_ANGLE){\n\t\t\t\t\tline.y = prev.y;\n\t\t\t\t\tmoveY = false;\n\t\t\t\t}\n\t\t\t\telse if(diffPrevX < SNAP_ANGLE){\n\t\t\t\t\tline.x = prev.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(moveX)\n\t\t\t\t\tline.x = this.lineCurrX;\n\t\t\t\tif(moveY)\n\t\t\t\t\tline.y = this.lineCurrY;\n\t\n\t\t\t\tthis.linePrevX = e.clientX;\n\t\t\t\tthis.linePrevY = e.clientY;\n\t\t\t}\n\t\t\twindow.onmouseup = () => {\n\t\t\t\tboard.onmousemove = null;\n\t\t\t\twindow.onmouseup = null;\n\t\t\t}\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\t\t\tthis.linePrevX = event.touches[0].clientX;\n\t\t\tthis.linePrevY = event.touches[0].clientY;\n\t\t\t\n\t\t\tboard.ontouchmove = (e: TouchEvent) => {\n\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - e.touches[0].clientX) / this.portComponent1.placingService.boardScale;\n\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - e.touches[0].clientY) / this.portComponent1.placingService.boardScale;\n\n\t\t\t\tlet moveX = true;\n\t\t\t\tlet moveY = true;\n\n\t\t\t\tconst SNAP_ANGLE = 10;\n\n\t\t\t\tlet diffNextX = Math.abs(this.lineCurrX - next.x);\n\t\t\t\tlet diffNextY = Math.abs(this.lineCurrY - next.y);\n\t\t\t\tlet diffPrevX = Math.abs(this.lineCurrX - prev.x);\n\t\t\t\tlet diffPrevY = Math.abs(this.lineCurrY - prev.y);\n\t\t\t\tif(diffNextY < SNAP_ANGLE){\n\t\t\t\t\tline.y = next.y;\n\t\t\t\t\tmoveY = false\n\t\t\t\t}\n\t\t\t\telse if(diffNextX < SNAP_ANGLE){\n\t\t\t\t\tline.x = next.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(diffPrevY < SNAP_ANGLE){\n\t\t\t\t\tline.y = prev.y;\n\t\t\t\t\tmoveY = false;\n\t\t\t\t}\n\t\t\t\telse if(diffPrevX < SNAP_ANGLE){\n\t\t\t\t\tline.x = prev.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(moveX)\n\t\t\t\t\tline.x = this.lineCurrX;\n\t\t\t\tif(moveY)\n\t\t\t\t\tline.y = this.lineCurrY;\n\n\t\t\t\tthis.linePrevX = e.touches[0].clientX;\n\t\t\t\tthis.linePrevY = e.touches[0].clientY;\n\t\t\t}\n\t\t\n\t\t\twindow.ontouchend = () => {\n\t\t\t\tboard.ontouchmove = null;\n\t\t\t\twindow.ontouchend = null;\n\t\t\t}\n\t\t}\n\t}\n}\n","<svg #svg *ngIf=\"portComponent1 && portComponent2 && portComponent1.port != null && portComponent2.port != null\" [class.read-only]=\"isReadOnly\">\n\t<linearGradient id=\"linear-{{connectionID}}\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\n\t\t<stop offset=\"0%\"   [attr.stop-color]=\"portComponent1.LogicPort.parent.color\"/>\n\t\t<stop offset=\"100%\" [attr.stop-color]=\"portComponent2.LogicPort.parent.color\"/>\n\t</linearGradient>\n\t<path id=\"conn-{{connectionID}}\" #mainPath class=\"main\" [attr.d]=\"line\" [attr.stroke]=\"'url(#linear-' + connectionID + ')'\"/>\n\t<text text-anchor=\"middle\" class=\"title\">\n\t\t<textPath startOffset=\"50%\" [attr.href]=\"'#conn-' + connectionID\">\n\t\t\t{{LogicConnection.title}}\n\t\t</textPath>\n\t</text>\n\t<g class=\"line-breaks-container\" [class.active]=\"LogicConnection.lineBreaks.includes(selectionService.currentLineBreakSelection)\">\n\t\t<path #secondPath class=\"interactive\"(click)=\"handleClick()\" [attr.d]=\"line\"/>\n\t\t<ng-container *ngFor=\"let break of LogicConnection.lineBreaks; index as i\">\n\t\t\t<circle class=\"break\" [class.is-current-selection]=\"selectionService.currentLineBreakSelection != null && selectionService.currentLineBreakSelection.x === break.x && selectionService.currentLineBreakSelection.y === break.y\" \n\t\t\t\tr=\"6\" *ngIf=\"i > 0 && i < LogicConnection.lineBreaks.length - 1\"\n\t\t\t\t[attr.cx]=\"break.x\" [attr.cy]=\"break.y\"\n\t\t\t\t(mousedown)=\"moveLine(break, $event)\" (touchstart)=\"moveLine(break, $event)\">\n\t\t\t</circle>\n\t\t\t<circle *ngIf=\"i < LogicConnection.lineBreaks.length - 1\" class=\"break-available\" r=\"4\"\n\t\t\t\t[attr.cx]=\"(break.x + LogicConnection.lineBreaks[i+1].x)/2\"\n\t\t\t\t[attr.cy]=\"(break.y + LogicConnection.lineBreaks[i+1].y)/2\"\n\t\t\t\t(mousedown)=\"breakLine(break, LogicConnection.lineBreaks[i+1], $event)\"\n\t\t\t\t(touchstart)=\"breakLine(break, LogicConnection.lineBreaks[i+1], $event)\">\n\t\t\t</circle>\t\t\n\t\t</ng-container>\n\t</g>\n</svg>\n<div *ngIf=\"selectionService.currentConnectionSelection === this\" [style.top.px]=\"titlePopupY\" [style.left.px]=\"titlePopupX\"class=\"title-popup\">\n\t<span>Title: </span>\n\t<input type=\"text\" [(ngModel)]=\"LogicConnection.title\"/>\n</div>\n","import { IDataOperator, ReceiveDataEvent } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { RequestData } from \"./RequestData\";\nimport { Port } from \"./Port\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\nexport class MessageQueue extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    options: MessageQueueOptions;\n    roundRobinIndex = 0;\n    isSendingData = false;\n    fillColor = false;\n    color = \"#F2994A\";\n\n    messages: RequestData[] = []\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new MessageQueueOptions();\n        this.options.title = \"Message Queue\";\n\n        this.options.endpoints = [\n            new Endpoint(\"MessageQueue\", [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.DELETE, HTTPMethod.PATCH])\n        ];\n    }\n\n    async receiveData(data: RequestData) {\n        if(data.requestId == \"\" || data.requestId == null )\n            throw new Error(\"requestId can not be null. Please specify property requestId of RequestData\");\n\n\n        // Put data to queue \n        data.header.stream = false;\n        this.messages.push(data);\n        if(!this.isSendingData)\n            this.sendToConsumer();\n\n        this.fireReceiveData(data);\n        this.requestReceived();\n\n        // Return response to publisher\n        let response = new RequestData();\n        response.responseId = data.requestId;\n        response.requestId = UUID();\n        response.header = data.header;\n        response.origin = data.origin;\n        response.originID = this.originID;\n        // Send response back\n        this.requestProcessed();\n        if(data.sendResponse)\n            await this.inputPort.sendData(response, data.origin);\n    }\n\n    async sendToConsumer(){\n        if(this.messages.length == 0 || this.outputPort.connections.length == 0)\n            return;\n        console.log(\"send\")\n        this.isSendingData = true;\n        if(!this.isFlowSimulationOn){\n            await sleep(400);\n        }\n        else{\n            if(!await this.throttleThroughput(5000)){\n                console.log(\"drop\");\n                this.requestProcessed();\n                return;\n            }\n        }\n        console.log(\"continue\");\n\n        let message = this.messages.pop();\n        let epRef = new EndpointRef();\n        epRef.endpoint = new Endpoint(this.options.endpoints[0].url, [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.PATCH, HTTPMethod.DELETE]);\n        epRef.method = HTTPMethod.POST;\n        message.header.endpoint = epRef;\n        message.sendResponse = false;\n\n        this.sendData(message);\n        this.fireSendData({});\n    \n        if(this.messages.length == 0)\n            this.isSendingData = false;\n        else \n            this.sendToConsumer();\n    }\n\n    async sendData(data: RequestData){\n        data.originID = this.originID;\n        await this.roundRobin(data);\n    }\n\n    async roundRobin(data: RequestData){\n        let connections = this.outputPort.connections\n        .filter(conn => conn.getOtherPort(this.outputPort).parent.getAvailableEndpoints()\n        .find(ep => ep.url === this.options.endpoints[0].url) != null);\n        let nodesLength = connections.length;\n        if(nodesLength === 0){\n            this.messages.push(data);\n            return;\n        }\n        this.fireSendData({});\n        this.roundRobinIndex++;\n        if(this.roundRobinIndex >= nodesLength)\n            this.roundRobinIndex = 0;\n        data.origin = this.outputPort.connections[this.roundRobinIndex];\n        await this.outputPort.sendData(data,data.origin);\n    }\n\n    onConnectionUpdate(wasOutput: boolean = false){\n        this.sendToConsumer();\n    }\n\n    private sendDataDispatcher = new EventDispatcher<ReceiveDataEvent>();\n    public onSendData(handler: Handler<ReceiveDataEvent>) {\n        this.sendDataDispatcher.register(handler);\n    }\n    private fireSendData(event: ReceiveDataEvent) { \n        this.sendDataDispatcher.fire(event);\n    }\n}\n\nexport class MessageQueueOptions extends EndpointOptions{\n}\n\n","import { Renderer2, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { PlacingService } from 'src/app/placing.service';\nimport { SelectionService } from 'src/app/selection.service';\nimport { Technology } from 'src/models/enums/Technology';\nimport { TextfieldComponent } from '../components/textfield/textfield.component';\n\n@Component({\n\tselector: 'app-optionsmenu',\n\ttemplateUrl: './optionsmenu.component.html',\n\tstyleUrls: ['./optionsmenu.component.scss'],\n})\nexport class OptionsmenuComponent implements OnInit {\n\n\tisActive:boolean;\n\n\topenGeneral: boolean = true;\n\topenProps: boolean = true;\n\topenActions: boolean = true;\n\topenSimulations: boolean = true;\n\n\thasActions: boolean = false;\n\thasSimulations: boolean = false;\n\n\tmultipleSelectionsTitle: string = \"Title\";\n\n\tmultipleSelectionsX: number;\n\tmultipleSelectionsY: number;\n\tmultipleSelectionsOldX: number;\n\tmultipleSelectionsOldY: number;\n\tmultipleSelectionsTechnology: Technology;\n\n\t@ViewChild(\"optionsWrapper\") optionsWrapper;\n\t@ViewChild(\"actionsWrapper\") actionsWrapper;\n\t@ViewChild(\"simulationsWrapper\") simulationsWrapper;\n\n\tpublic Technology: typeof Technology = Technology;\n\tpublic TechnologyKeys = Object.values(Technology).filter(k => !isNaN(Number(k)));\n\n\tsortedTechnologies = [];\n\n\tconstructor(public selectionService: SelectionService, private renderer: Renderer2, private placingService: PlacingService) \n\t{\n\t\tselectionService.onChangeSelection( ()=>{\n\t\t\tthis.optionsWrapper.nativeElement.innerHTML = \"\";\n\t\t\tthis.actionsWrapper.nativeElement.innerHTML = \"\";\n\t\t\tthis.simulationsWrapper.nativeElement.innerHTML = \"\";\n\t\t\tthis.multipleSelectionsX = Number.MAX_VALUE;\n\t\t\tthis.multipleSelectionsY = Number.MAX_VALUE;\n\t\t\tif(this.selectionService.currentSelections.length == 0){\n\t\t\t\tthis.isActive = false;\n\t\t\t}\n\t\t\telse if(this.selectionService.currentSelections.length == 1){\n\t\t\t\tlet selection = this.selectionService.currentSelections[0];\n\t\t\t\tthis.isActive = true;\n\n\t\t\t\tlet optionsElement = selection.getOptionsElement();\n\t\t\t\tif(optionsElement)\n\t\t\t\t\tthis.renderer.appendChild(this.optionsWrapper.nativeElement,optionsElement.nativeElement);\n\n\t\t\t\tlet actionsElement = selection.getActionsElement();\n\t\t\t\tif(actionsElement){\n\t\t\t\t\tthis.hasActions = true;\n\t\t\t\t\tthis.renderer.appendChild(this.actionsWrapper.nativeElement,actionsElement.nativeElement);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.hasActions = false;\n\n\t\t\t\tlet simulationsElement = selection.getSimulationsElement();\n\t\t\t\tif(simulationsElement){\n\t\t\t\t\tthis.hasSimulations = true;\n\t\t\t\t\tthis.renderer.appendChild(this.simulationsWrapper.nativeElement,simulationsElement.nativeElement);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.hasSimulations = false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isActive = true;\n\t\t\t\tthis.multipleSelectionsTitle = this.selectionService.currentSelections[0].getLogicComponent().options.title;\n\t\t\t\tthis.multipleSelectionsTechnology = this.selectionService.currentSelections[0].getLogicComponent().options.technology;\n\t\t\t\tlet sameTitles = true;\n\t\t\t\tlet sameTechs = true;\n\t\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\t\tlet options = selection.getLogicComponent().options;\n\t\t\t\t\tif(options.X < this.multipleSelectionsX)\n\t\t\t\t\t\tthis.multipleSelectionsX = options.X;\n\t\t\t\t\tif(options.Y < this.multipleSelectionsY)\n\t\t\t\t\t\tthis.multipleSelectionsY = options.Y;\n\t\t\t\t\tif(options.title != this.multipleSelectionsTitle){\n\t\t\t\t\t\tsameTitles = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(options.technology != this.multipleSelectionsTechnology){\n\t\t\t\t\t\tsameTechs = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.multipleSelectionsOldX = this.multipleSelectionsX;\n\t\t\t\tthis.multipleSelectionsOldY = this.multipleSelectionsY;\n\t\t\t\tif(!sameTitles)\n\t\t\t\t\tthis.multipleSelectionsTitle = \"Title\";\n\t\t\t\tif(!sameTechs){\n\t\t\t\t\tthis.multipleSelectionsTechnology = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.sortedTechnologies = this.TechnologyKeys.map(key => Technology[key])\n\t\t.filter(key => key !== \"None\").sort(function (a, b) {\n\t\t\treturn a.toLowerCase().localeCompare(b.toLowerCase());\n\t\t}).map(key => Technology[key]);\n\t}\n\n\tisSelectionTextField(){\n\t\treturn this.selectionService.currentSelections.length == 1 && this.selectionService.currentSelections[0] instanceof TextfieldComponent;\n\t}\n\t\n\tngOnInit(): void {\n\t}\n\n\thandleTechChange(){\n\t\tif(this.selectionService.currentSelections[0].getLogicComponent().options.technology == 0){\n\t\t\tthis.selectionService.currentSelections[0].getLogicComponent().options.technology = null;\n\t\t}\n\t}\n\n\tupdateTitles(){\n\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\tselection.getLogicComponent().options.title = this.multipleSelectionsTitle;\n\t\t}\n\t}\n\n\tupdatePosition(x, y){\n\t\tif(this.selectionService.currentSelections.length == 1){\n\t\t\tx = parseInt(x);\n\t\t\ty = parseInt(y);\n\t\t\tif(x < 0 || x > this.placingService.boardWidth - 40 || y < 0 || y > this.placingService.boardHeight - 40){\n\t\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\t\tselection.setPosition(x,y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet realX = Math.max(Math.min(this.multipleSelectionsX, this.placingService.boardWidth - 40), 0);\n\t\t\tlet realY = Math.max(Math.min(this.multipleSelectionsY, this.placingService.boardHeight - 40), 0);\n\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\tselection.setPosition(\n\t\t\t\t\tselection.getLogicComponent().options.X + realX - this.multipleSelectionsOldX, \n\t\t\t\t\tselection.getLogicComponent().options.Y + realY - this.multipleSelectionsOldY\n\t\t\t\t); \n\t\t\t}\n\t\t\t\n\t\t\tthis.multipleSelectionsOldX = realX;\n\t\t\tthis.multipleSelectionsOldY = realY;\n\t\t}\n\t}\n\n\tupdateTechs(){\n\t\tif(this.multipleSelectionsTechnology == 0){\n\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\tselection.getLogicComponent().options.technology = null;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\tselection.getLogicComponent().options.technology = this.multipleSelectionsTechnology;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n}\n","<div class=\"options-menu-window\" [style.display]=\"isActive? 'block' : 'none' \">\n    <div class=\"main\">\n        <div class=\"section\" [class.active]=\"openGeneral\">\n            <div class=\"header\" (click)=\"openGeneral = !openGeneral\">\n                <span class=\"title\">General</span>\n                <span class=\"icon\" *ngIf=\"openGeneral; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\" *ngIf=\"isActive && selectionService.currentSelections.length == 1\">\n                <div *ngIf=\"!isSelectionTextField(); else textFieldTitle\">\n                    <span class=\"property-name\">Title:</span>\n                    <input type=\"text\" spellcheck=\"false\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.title\">\n                </div>\n                <ng-template #textFieldTitle>\n                    <div *ngIf=\"isSelectionTextField()\">\n                        <div>\n                            <span class=\"property-name\">Content:</span>\n                            <textarea maxlength=\"250\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.title\"></textarea>\n                        </div>\n                    </div>\n                </ng-template>\n                <div class=\"small\">\n                    <span class=\"property-name\">X:</span>\n                    <input #x (input)=\"updatePosition(x.value, y.value)\" step=\"10\" type=\"number\" min=\"0\" max=\"1960\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.X\">\n                </div>\n                <div class=\"small\">\n                    <span class=\"property-name\">Y:</span>\n                    <input #y (input)=\"updatePosition(x.value, y.value)\" step=\"10\" type=\"number\" min=\"0\" max=\"960\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.Y\">\n                </div>\n                <div *ngIf=\"!isSelectionTextField()\">\n                    <span class=\"property-name\">Technology:</span>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select (selectionChange)=\"handleTechChange()\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.technology\">\n                            <mat-option [value]=\"0\">None</mat-option>\n                            <mat-option *ngFor=\"let type of sortedTechnologies\" [value]=\"type\">{{Technology[type]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"content\" *ngIf=\"isActive && selectionService.currentSelections.length > 1\">\n                <div>\n                    <span class=\"property-name\">Title:</span>\n                    <input type=\"text\" spellcheck=\"false\" (input)=\"updateTitles()\" [(ngModel)]=\"multipleSelectionsTitle\">\n                </div>\n                <div class=\"small\">\n                    <span class=\"property-name\">X:</span>\n                    <input #x (input)=\"updatePosition(multipleSelectionsX, multipleSelectionsY)\" step=\"10\" type=\"number\" min=\"0\" max=\"1960\" [(ngModel)]=\"multipleSelectionsX\">\n                </div>\n                <div class=\"small\">\n                    <span class=\"property-name\">Y:</span>\n                    <input #y (input)=\"updatePosition(multipleSelectionsX, multipleSelectionsY)\" step=\"10\" type=\"number\" min=\"0\" max=\"960\" [(ngModel)]=\"multipleSelectionsY\">\n                </div>\n                <div *ngIf=\"!isSelectionTextField()\">\n                    <span class=\"property-name\">Technology:</span>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select [(ngModel)]=\"multipleSelectionsTechnology\" (selectionChange)=\"updateTechs()\">\n                            <mat-option [value]=\"0\">None</mat-option>\n                            <mat-option *ngFor=\"let type of sortedTechnologies\" [value]=\"type\">{{Technology[type]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n        <div class=\"section\" [style.display]=\"selectionService.currentSelections.length == 1 ? 'block' : 'none'\" [class.active]=\"openProps\">\n            <div class=\"header\" (click)=\"openProps = !openProps\">\n                <span class=\"title\">Properties</span>\n                <span class=\"icon\" *ngIf=\"openProps; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\">\n                <div #optionsWrapper >\n            \n                </div>\n            </div>\n        </div>\n        <div class=\"section\" [class.active]=\"openActions\" [style.display]=\"!hasActions || selectionService.currentSelections.length > 1 ? 'none' : 'block'\">\n            <div class=\"header\" (click)=\"openActions = !openActions\">\n                <span class=\"title\">Actions</span>\n                <span class=\"icon\" *ngIf=\"openActions; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\">\n                <div #actionsWrapper >\n                    \n                </div>\n            </div>\n        </div>\n        <div class=\"section\" [class.active]=\"openSimulations\" [style.display]=\"!hasSimulations || selectionService.currentSelections.length > 1 ? 'none' : 'block'\">\n            <div class=\"header\" (click)=\"openSimulations = !openSimulations\">\n                <span class=\"title\">Simulation</span>\n                <span class=\"icon\" *ngIf=\"openSimulations; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\">\n                <div #simulationsWrapper >\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, EventEmitter, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { PlacingService } from \"src/app/placing.service\";\nimport { SelectionService } from \"src/app/selection.service\";\nimport { SimulationService } from \"src/app/simulation.service\";\nimport { ViewingService } from \"src/app/viewing.service\";\nimport { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { EndpointOperator } from \"src/models/EndpointOperator\";\nimport { APIType } from \"src/models/enums/APIType\";\nimport { BalancingAlgorithm } from \"src/models/enums/BalancingAlgorithm\";\nimport { DatabaseType } from \"src/models/enums/DatabaseType\";\nimport { gRPCMode } from \"src/models/enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"src/models/enums/HTTPMethod\";\nimport { HTTPStatus } from \"src/models/enums/HTTPStatus\";\nimport { LoadBalancerType } from \"src/models/enums/LoadBalancerType\";\nimport { Protocol } from \"src/models/enums/Protocol\";\nimport { ReplacementPolicy } from \"src/models/enums/ReplacementPolicy\";\nimport { WritePolicy } from \"src/models/enums/WritePolicy\";\nimport { Options } from \"src/models/Options\";\nimport { clone, getFormattedMethod } from \"src/shared/ExtensionMethods\";\nimport { PortComponent } from \"../port/port.component\";\nimport { SimulationCardComponent } from \"./simulation-card/simulation-card.component\";\nimport { TitleComponent } from \"./title/title.component\";\n\n@Component({\n\ttemplate: '',\n\tqueries: {\n\t\tanchorRef: new ViewChild( \"anchorRef\" ),\n\t\toptionsRef: new ViewChild( \"options\" ),\n\t\tactionsRef: new ViewChild(\"actions\"),\n\t\tsimulationsRef: new ViewChild(\"simulations\")\n\t},\n})\nexport abstract class OperatorComponent {\n\n\thasChanged = new EventEmitter();\n\tshowContextMenu = new EventEmitter();\n\n    board: HTMLElement;\n\tcomp: HTMLElement\n\n\tpublic HTTPMethod: typeof HTTPMethod = HTTPMethod;\n\tpublic HTTPMethodKeys = Object.values(HTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic EndpointActionHTTPMethod: typeof EndpointActionHTTPMethod = EndpointActionHTTPMethod;\n\tpublic EndpointActionHTTPMethodKeys = Object.values(EndpointActionHTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic Protocol: typeof Protocol = Protocol;\n\tpublic ProtocolKeys = Object.values(Protocol).filter(k => !isNaN(Number(k)));\n\tpublic APIType: typeof APIType = APIType;\n\tpublic APITypeKeys = Object.values(APIType).filter(k => !isNaN(Number(k)));\n\tpublic gRPCMode: typeof gRPCMode = gRPCMode;\n\tpublic gRPCModeKeys = Object.values(gRPCMode).filter(k => !isNaN(Number(k)));\n\tpublic LoadBalancerType: typeof LoadBalancerType = LoadBalancerType;\n\tpublic LoadBalancerTypeKeys = Object.values(LoadBalancerType).filter(k => !isNaN(Number(k)));\n\tpublic BalancingAlgorithm: typeof BalancingAlgorithm = BalancingAlgorithm;\n\tpublic BalancingAlgorithmKeys = Object.values(BalancingAlgorithm).filter(k => !isNaN(Number(k)));\n\tpublic DatabaseType: typeof DatabaseType = DatabaseType;\n\tpublic DatabaseTypeKeys = Object.values(DatabaseType).filter(k => !isNaN(Number(k)));\n\tpublic WritePolicy: typeof WritePolicy = WritePolicy;\n\tpublic WritePolicyKeys = Object.values(WritePolicy).filter(k => !isNaN(Number(k)));\n\tpublic ReplacementPolicy: typeof ReplacementPolicy = ReplacementPolicy;\n\tpublic ReplacementPolicyKeys = Object.values(ReplacementPolicy).filter(k => !isNaN(Number(k)));\n\n\t@ViewChild(\"conn\", { read: ViewContainerRef }) conn: ViewContainerRef;\n\n\tpublic anchorRef!: ElementRef;\n\n\tprivate LogicComponent: IDataOperator;\n\tpublic optionsRef: ElementRef;\n\tpublic actionsRef: ElementRef;\n\tpublic simulationsRef: ElementRef;\n\tpublic inputPortRef: PortComponent;\n\tpublic outputPortRef: PortComponent;\n\n\tprivate maxX = 0;\n\tprivate maxY = 0;\n\n\tpublic anchorRect: any;\n\n\tpublic isReadOnly = false;\n\n\tpublic beforeOptions: Options;\n\n    constructor(protected placingService: PlacingService, protected selectionService: SelectionService, protected resolver: ComponentFactoryResolver, public cdRef: ChangeDetectorRef, private viewingService: ViewingService, private simulationService: SimulationService) {\n\t\tthis.cdRef.detach();\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.Init();\n  \t}\n\n\tngOnInit(){\n\t\tthis.cdRef.detectChanges();\n\t}\n\n  \tpublic handleMousedown(event: Event): void {\n\t\tif(this.placingService.isConnecting) \n\t\t\treturn;\n\t\tevent.preventDefault();\n\t\tthis.handleClick(event);\n\t\tthis.placingService.startPlacing();\n\n\t\tthis.anchorRect = this.anchorRef.nativeElement.getBoundingClientRect();\n\t\tthis.maxX = this.placingService.boardWidth;\n\t\tthis.maxY = this.placingService.boardHeight;\n\t\tif(event instanceof MouseEvent){\n\t\t\tif(event.button != 0){\n\t\t\t\tthis.placingService.stopPlacing();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif(event.button == 2){\n\t\t\t\t\tthis.selectionService.addSelection(this, false);\n\t\t\t\t\tthis.showContextMenu.emit(event);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis.selectionService.prevX = event.clientX;\n\t\t\tthis.selectionService.prevY = event.clientY;\n\t\n\t\t\tthis.board.addEventListener( \"mousemove\", this.handleMousemove );\n\t\t\twindow.addEventListener( \"mouseup\", this.handleMouseup );\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\n\t\t\tthis.selectionService.prevX = event.touches[0].clientX;\n\t\t\tthis.selectionService.prevY = event.touches[0].clientY;\n\t\n\t\t\tthis.board.addEventListener( \"touchmove\", this.handleMousemove );\n\t\t\twindow.addEventListener( \"touchend\", this.handleMouseup );\n\t\t}\n\t}\n\n  \tpublic handleMousemove = (event: Event): void => {\n\t\tthis.selectionService.moveComponents(event, this.placingService.boardScale);\n\t}\n\n\tprivate convertPosition(number){\n\t\treturn Math.round(number / 10) * 10;\n\t}\n\n\tpublic setPosition(x: number, y: number){\n\t\tthis.LogicComponent.options.X = Math.max(Math.min( this.maxX - this.anchorRect.width  / this.placingService.boardScale, this.convertPosition(x)), 0);\n\t\tthis.LogicComponent.options.Y = Math.max(Math.min( this.maxY - this.anchorRect.height / this.placingService.boardScale, this.convertPosition(y)), 0);\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic handleMouseup = (): void => {\n\t\tthis.placingService.stopPlacing();\n\n\t\tthis.board.removeEventListener( \"mousemove\", this.handleMousemove );\n\t\twindow.removeEventListener( \"mouseup\", this.handleMouseup );\n\n\t\tif(this.beforeOptions.X !== this.LogicComponent.options.X || this.beforeOptions.Y !== this.LogicComponent.options.Y){\n\t\t\tthis.afterChange();\n\t\t}\t\t\n\t}\n\n\tpublic handleClick(event: Event){\n\t\tif(event instanceof MouseEvent || event instanceof TouchEvent)\n\t\t\tthis.selectionService.addSelection(this, event.ctrlKey);\n\t}\n\n\tpublic getLogicComponent(): IDataOperator{\n\t\treturn null;\n\t}\n\n\tpublic getPortComponent(getOutput = false){\n\t\tif(getOutput && this.outputPortRef != null)\n\t\t\treturn this.outputPortRef.getPortComponent();\n\t\telse if(!getOutput && this.inputPortRef != null)\n\t\t\treturn this.inputPortRef.getPortComponent();\n\t\treturn null;\n\t}\n\n\tpublic onViewInit = [];\n\n\t/**\n\t * \n\t * @returns options element, null if component doesn't have any options\n\t */\n\tpublic getOptionsElement(): ElementRef{\n\t\treturn this.optionsRef;\n\t}\n\n\t/**\n\t * \n\t * @returns actions element, null if component doesn't have any actions\n\t */\n\tpublic getActionsElement(): ElementRef{\n\t\treturn this.actionsRef;\n\t}\n\n\t/**\n\t * \n\t * @returns simulations element, null if component doesn't have any actions\n\t */\n\t public getSimulationsElement(): ElementRef{\n\t\treturn this.simulationsRef;\n\t}\n\n\tdestroyComponent = () => {}\n\n\tchangeTitle(title: string){\n\t\tthis.LogicComponent.options.title = title;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tshowStatusCode(code: HTTPStatus){\n\t\tlet span = document.createElement(\"span\");\n\t\tspan.classList.add(\"status-code-side\");\n\t\tlet type: string;\n\t\tif(code >= 0 && code < 1000){ // Classic status codes \n\t\t\tif(code >= 100 && code < 200)\n\t\t\t\ttype = \"info\";\n\t\t\telse if(code >= 200 && code < 300)\n\t\t\t\ttype = \"success\";\n\t\t\telse if(code >= 300 && code < 400)\n\t\t\t\ttype = \"warning\";\n\t\t\telse if(code >= 400 && code < 500)\n\t\t\t\ttype = \"error\";\n\t\t\telse\n\t\t\t\ttype = \"error\";\n\t\t\tspan.innerHTML = `<span class=\"code ${type}\">${code}</span><br/>${HTTPStatus[code]}`;\n\t\t}\n\t\telse if(code >= 1000 && code < 2000){ // Cache status codes\n\t\t\tif(code == 1200)\n\t\t\t\tspan.innerHTML = `<span class=\"code success\">HIT</span>`;\n\t\t\telse if(code == 1404)\n\t\t\t\tspan.innerHTML = `<span class=\"code error\">MISS</span>`;\n\t\t}\n\t\tthis.anchorRef.nativeElement.appendChild(span);\n\t\tsetTimeout(() => {\n\t\t\tthis.anchorRef.nativeElement.removeChild(span);\n\t\t\tthis.cdRef.detectChanges();\n\t\t}, 1500);\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tdestroySelf = () => {\n\t\tthis.LogicComponent.destroy();\n\t\tthis.destroyComponent();\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tsetReceiveDataAnimation(){\n\t\tif(this.viewingService.isPerformanceMode())\n\t\t\treturn;\n\t\tif(!this.comp.classList.contains(\"anim\")){\n\t\t\tthis.comp.classList.add(\"anim\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.comp.classList.remove(\"anim\");\n\t\t\t},500);\n\t\t}\n\t}\n\n\tInit(generateTitle: boolean = true): void {\n\t\tthis.LogicComponent = this.getLogicComponent();\n\t\tthis.board = document.getElementById(\"board\");\n\t\tthis.comp = this.anchorRef.nativeElement;\n\t\tthis.comp.classList.add(\"component\");\n\t\tif(this.LogicComponent.fillColor){\n\t\t\tthis.comp.style.backgroundColor = this.LogicComponent.color;\n\t\t}\n\t\telse{\n\t\t\tthis.comp.classList.add(\"bordered\")\n\t\t\tArray.from(this.comp.getElementsByClassName(\"img\")).forEach(el => {\n\t\t\t\t(el as HTMLElement).style.backgroundColor = this.LogicComponent.color;\n\t\t\t});\n\t\t\tthis.comp.style.border = \"2px solid \" + this.LogicComponent.color;\n\t\t}\n\t\tif(this.isReadOnly)\n\t\t\tthis.comp.classList.add(\"read-only\")\n\n\t\tthis.anchorRect = this.anchorRef.nativeElement.getBoundingClientRect();\n\t\tthis.maxX = this.placingService.boardWidth;\n\t\tthis.maxY = this.placingService.boardHeight;\n\n\t\n\n\t\tthis.LogicComponent.onShowStatusCode((code:HTTPStatus)=>{\n\t\t\tthis.showStatusCode(code);\n\t\t});\n\n\t\tthis.LogicComponent.onReceiveData((data) => {\n\t\t\tthis.setReceiveDataAnimation();\n    \t});\n\n\t\tif(this.LogicComponent instanceof EndpointOperator){\n\t\t\tif(this.simulationService.isFlowSimulationOn){\n\t\t\t\tthis.LogicComponent.isFlowSimulationOn = true;\n\t\t\t}\n\t\t\tthis.LogicComponent.onSimulationStateUpdated((state) => {\n\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t})\n\t\t\tthis.createSimulationCard();\n\t\t}\n\n\t\tthis.LogicComponent.onFailedConnect((data) => {\n\t\t\tthis.placingService.showSnack(data.message);\n    \t});\n\n\t\tthis.beforeOptions = clone(this.LogicComponent.options);\n\n\t\tlet inputPort = this.LogicComponent[\"inputPort\"];\n\t\tlet outputPort = this.LogicComponent[\"outputPort\"];\n\n\t\tif(this.conn == null){\n\t\t\tthis.cdRef.detectChanges();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(generateTitle)\n\t\t\tthis.generateTitle();\n\n\n\t\tif(inputPort != null)\n\t\t\tthis.createPort(false);\n\t\tif(outputPort != null)\n\t\t\tthis.createPort(true);\n\t\tthis.onViewInit.forEach(e => e());\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tcreatePort(output = false){\n\t\tlet factory  = this.resolver.resolveComponentFactory(PortComponent);\n\t\tlet ref = this.conn.createComponent(factory);\n\n\t\tref.instance.IsOutput = output;\n\t\tref.instance.LogicParent = this.LogicComponent;\n\t\tref.instance.IsReadOnly = this.isReadOnly;\n\t\tref.instance.LogicPort = this.LogicComponent[output ? \"outputPort\" : \"inputPort\"];\n\n\t\tref.instance.destroySelf = () => {\n\t\t\tref.destroy();\n\t\t}\n\n\t\tref.location.nativeElement.classList.add(output ? \"right\" : \"left\");\n\n\t\tif(output)\n\t\t\tthis.outputPortRef = ref.instance;\n\t\telse\n\t\t\tthis.inputPortRef = ref.instance;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tcreateSimulationCard(){\n\t\tlet factory  = this.resolver.resolveComponentFactory(SimulationCardComponent);\n\t\tlet ref = this.conn.createComponent(factory);\n\n\t\tref.instance.Model = this.LogicComponent;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tgenerateTitle(){\n\t\tlet factory  = this.resolver.resolveComponentFactory(TitleComponent);\n\t\tlet ref = this.conn.createComponent(factory);\n\t\t\n\t\tref.instance.Model = this.LogicComponent;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tformatMethod(method: HTTPMethod, isDatabase: boolean){\n\t\treturn getFormattedMethod(method, isDatabase);\n\t}\n\n\tafterChange = () => {\n\t\tthis.hasChanged.emit();\n\t\tthis.beforeOptions = clone(this.LogicComponent.options);\n\t}\n\t\n\tstatic getColor(): string{\n\t\treturn \"#6059DF\";\n\t}\n}","import { Component } from '@angular/core';\nimport { ViewingService } from './viewing.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \ttitle = 'Systemizer';\n\tconstructor(private viewingService: ViewingService){\n\t\tif(viewingService.isDarkMode())\n\t\t\tdocument.documentElement.classList.add(\"dark-mode\");\n\t}\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { PubSub } from 'src/models/PubSub';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'pubsub',\n\ttemplateUrl: './pubsub.component.html',\n  \tstyleUrls: ['./pubsub.component.scss']\n})\nexport class PubsubComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicPubSub : PubSub = new PubSub();\n\n\taddEndpoint(){\n\t\tthis.LogicPubSub.options.endpoints.push(new Endpoint(\"topic.topicCreated\", [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.PATCH, HTTPMethod.DELETE]));\n\t\tthis.afterChange();\n\t}\n\n\tremoveEndpoint(endpoint: Endpoint){\n\t\tlet idx = 0;\n\t\tfor(let ep of this.LogicPubSub.options.endpoints){\n\t\t\tif(ep === endpoint){\n\t\t\t\tthis.LogicPubSub.options.endpoints.splice(idx,1);\n\t\t\t\tthis.afterChange();\n\t\t\t\treturn;\n\t\t\t} \n\t\t\tidx++;\n\t\t}\t\n\t}\n\t\n\thandleEndpointUrlChange(endpoint){\n\t\tif(endpoint.url == null || endpoint.url.replace(/\\s/g,\"\") == \"\")\n\t\t\tendpoint.url = `topic`;\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicPubSub;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new PubSub();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicPubSub.options.X\"\n[style.top.px]=\"LogicPubSub.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/pubsub.svg\">\n    </div>   \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-container\">\n            <div class=\"options-endpoints-container\">\n                <div class=\"options-endpoints-top\">\n                    <span class=\"property-name\">Topics: <info-tooltip [Message]=\"'List of available topics the PubSub can publish data to.'\"></info-tooltip></span>\n                    <span class=\"button-icon\" (click)=\"addEndpoint()\"><i class=\"fas fa-plus\"></i></span>\n                </div>\n                <div class=\"options-endpoints\">\n                    <div class=\"options-endpoint\" *ngFor=\"let endpoint of this.LogicPubSub.options.endpoints\">\n                        <input (change)=\"afterChange()\" (blur)=\"handleEndpointUrlChange(endpoint)\" class=\"endpoint-url\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"endpoint.url\" placeholder=\"url\">\n                        <span class=\"button-icon remove-endpoint\" (click)=\"removeEndpoint(endpoint)\"><i class=\"fas fa-minus\"></i></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div #simulations>\n        <slider-described\n        [Model]=\"LogicPubSub\"\n        [AfterChange]=\"afterChange\"\n        ></slider-described>\n    </div>\n</div>","export enum HTTPStatus{\n    \"Switching Protocol\" = 101,\n    \"OK\" = 200,\n    \"Created\" = 201,\n    \"Bad Request\" = 400,\n    \"Not Found\" = 404,\n    \"Method Not Allowed\" = 405,\n    \"Too Many Requests\" = 429,\n    \"Internal Server Error\" = 500,\n    \"Service Unavailable\" = 503,\n    \"Cache Hit\" = 1200,\n    \"Cache Miss\" = 1404\n}","import { Injectable } from '@angular/core';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { API } from 'src/models/API';\nimport { APIGateway } from 'src/models/APIGateway';\nimport { Cache } from 'src/models/Cache';\nimport { Client } from 'src/models/Client';\nimport { ClientCluster } from 'src/models/ClientCluster';\nimport { CloudStorage } from 'src/models/CloudStorage';\nimport { Database } from 'src/models/Database';\nimport { LoadBalancer } from 'src/models/LoadBalancer';\nimport { MessageQueue } from 'src/models/MessageQueue';\nimport { Options } from 'src/models/Options';\nimport { Port } from 'src/models/Port';\nimport { Proxy } from 'src/models/Proxy';\nimport { PubSub } from 'src/models/PubSub';\nimport { TextField } from 'src/models/TextField';\nimport { WebServer } from 'src/models/WebServer';\nimport { CDN } from 'src/models/CDN';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class SavingService {\n\n\tLOCALSTORAGE_AUTOSAVE_KEY = \"board_autosave\";\n\tLOCALSTORAGE_BOARDS_KEY = \"all_saved_boards\";\n\tsystemName: string = \"Untitled system\";\n\n\ttypes = {\n\t\tAPI,\n\t\tAPIGateway,\n\t\tClient,\n\t\tCache,\n\t\tCloudStorage,\n\t\tDatabase,\n\t\tLoadBalancer,\n\t\tMessageQueue,\n\t\tPubSub,\n\t\tWebServer,\n\t\tTextField,\n\t\tProxy,\n\t\tClientCluster,\n\t\tCDN\n\t}\n\n\t/**\n\t * Dictionary of names that are converted to 1-3 letter names\n\t */\n\t optimizedBoardNames = {\n\t\tt: \"type\",\n\t\ti: \"id\",\n\t\ttt: \"title\",\n\t\tte: \"technology\",\n\t\to: \"options\",\n\t\tp: \"protocol\",\n\t\tc: \"connections\",\n\t\tes: \"endpoints\",\n\t\te: \"endpoint\",\n\t\teR: \"endpointRef\",\n\t\tu: \"url\",\n\t\tsM: \"supportedMethods\",\n\t\tm: \"method\",\n\t\tas: \"actions\",\n\t\tgM: \"grpcMode\",\n\t\tiCn: \"isConsumer\",\n\t\tiSb: \"isSubscriber\",\n\t\trEp: \"restEndpoints\",\n\t\trpEp: \"rpcEndpoints\",\n\t\tgEp: \"graphqlEndpoints\",\n\t\tgpEp: \"grpcEndpoints\",\n\t\twEp: \"websocketsEndpoints\",\n\t\tag: \"algorithm\",\n\t\trPl: \"replacementPolicy\",\n\t\twPl: \"writePolicy\",\n\t\tw: \"width\",\n\t\th: \"height\",\n\t\tfS: \"fontSize\",\n\t\tiB: \"isBold\",\n\t\tiI: \"isItalic\",\n\t\tiMs: \"isMasterShard\",\n\t\tiS: \"isShard\",\n\t\tbg: \"backgroundColor\",\n\t\tco: \"color\",\n\t\ta: \"asynchronous\",\n\t\tpf: \"performance\",\n\t\toR: \"outputRate\"\n\t};\n\n\t/**\n\t * Dictionary of types that are converted to 1-3 letter names\n\t */\n\toptimizedComponentTypes = {\n\t\tA: \"API\",\n\t\tAG: \"APIGateway\",\n\t\tC: \"Client\",\n\t\tCC: \"ClientCluster\",\n\t\tCA: \"Cache\",\n\t\tCS: \"CloudStorage\",\n\t\tD: \"Database\",\n\t\tLB: \"LoadBalancer\",\n\t\tMQ: \"MessageQueue\",\n\t\tP: \"Proxy\",\n\t\tPS: \"PubSub\",\n\t\tTF: \"TextField\",\n\t\tWS: \"WebServer\",\n\t\tCD: \"CDN\"\n\t};\n\n\tconstructor() { }\n\n\tgetBoardSave(allLogicComponents: IDataOperator[], systemName: string, id: string){\n\t\tlet jsonReadyComponents = [];\n\t\tfor(let component of allLogicComponents){\n\t\t\ttry{ \n\t\t\t\tlet jsonReadyComponent: any = {};\n\t\t\t\tjsonReadyComponent.type = this.getComponentType(component);\n\t\t\t\tjsonReadyComponent.id = component.originID.slice(0, 6);\n\t\t\t\tjsonReadyComponent.options = this.cloneOptions(component.options);\n\t\t\t\tjsonReadyComponent.connections = [];\n\t\t\t\tlet inputPort = component.getPort(false);\n\t\t\t\tif(inputPort != null){ // Get all connections from inputPort to JSON ready form\n\t\t\t\t\tfor(let connection of inputPort.connections){\n\t\t\t\t\t\tlet jsonReadyConnection: any = {};\n\t\t\t\t\t\tjsonReadyConnection.from = jsonReadyComponent.id;\n\t\t\t\t\t\tlet connectedComponent = connection.getOtherPort(inputPort).parent;\n\t\t\t\t\t\tjsonReadyConnection.to = connectedComponent.originID.slice(0, 6);\n\t\t\t\t\t\tjsonReadyComponent.connections.push(jsonReadyConnection);\n\t\t\t\t\t\tif(connection.lineBreaks != null && connection.lineBreaks.length != 2)\n\t\t\t\t\t\t\tjsonReadyConnection.lineBreaks = connection.lineBreaks;\n\t\t\t\t\t\tif(connection.title)\n\t\t\t\t\t\t\tjsonReadyConnection.title = connection.title;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjsonReadyComponents.push(jsonReadyComponent);\n\t\t\t}\n\t\t\tcatch(e){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\treturn \t{\n\t\t\tname: systemName, \n\t\t\tid: id || \"\",\n\t\t\tcomponents: jsonReadyComponents\n\t\t}\n\t}\n\n  \tgetBoardJson(allLogicComponents: IDataOperator[], systemName: string, id: string){\n\t\tlet jsonReadySave = this.getBoardSave(allLogicComponents, systemName, id);\n\t\treturn JSON.stringify(jsonReadySave);\n\t}\n\n\t/**\n\t * Takes in array of components that was made by getBoardSave method\n\t */\n\tgetComponentsFromSave(save: any[]): IDataOperator[]{\n\t\tlet components = [];\n\t\tlet outputsTable = {}\n\t\tlet connectionTable = []\n\t\tfor(let component of save){\n\t\t\tlet logicComponent: IDataOperator = new this.types[component.type];\n\n\t\t\tfor(let key of Object.keys(component.options)){\n\t\t\t\tlogicComponent.options[key] = component.options[key];\n\t\t\t}\n\t\t\tif(component instanceof Database && component.options.isMasterShard){\n\t\t\t\tcomponent.outputPort = new Port(component, true, true);\n\t\t\t}\n\t\t\tlet outputPort = logicComponent.getPort(true);\n\t\t\tlet inputPort = logicComponent.getPort(false);\n\t\t\tif(outputPort){\n\t\t\t\toutputsTable[component.id] = logicComponent;\n\t\t\t}\n\t\t\tif(inputPort){\n\t\t\t\tlet connection: any = {};\n\t\t\t\tconnection.component = logicComponent;\n\t\t\t\tconnection.id = logicComponent.originID;\n\t\t\t\tconnection.to = component.connections;\n\t\t\t\tconnectionTable.push(connection);\n\t\t\t}\n\t\t\tcomponents.push(logicComponent);\n\t\t}\n\t\tfor(let connection of connectionTable){\n\t\t\tconnection.to.filter(con => con.isFromOutput == null || !con.isFromOutput).forEach(con => {\n\t\t\t\tif(outputsTable[con.to]){\n\t\t\t\t\tlet logicConnection = connection.component.connectTo(outputsTable[con.to], false, true);\n\t\t\t\t\tlogicConnection.lineBreaks = con.lineBreaks;\n\t\t\t\t\tlogicConnection.title = con.title;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn components;\n\t}\n\n\tpublic getComponentType(component: any){ \n\t\treturn Object.keys(this.types).find(type => component instanceof this.types[type]) || \"Client\";\n\t}\n\n\tsave(allLogicComponents: IDataOperator[], id: string){\n\t\tlocalStorage.setItem(this.LOCALSTORAGE_AUTOSAVE_KEY, this.getBoardJson(allLogicComponents, this.systemName, id));\n\t}\n\n\tgetLatestBoardJson(){\n\t\treturn localStorage.getItem(this.LOCALSTORAGE_AUTOSAVE_KEY);\n\t}\n\n\tgetSavedBoardsJson(){\n\t\treturn localStorage.getItem(this.LOCALSTORAGE_BOARDS_KEY);\n\t}\n\n\tgetOptimizedBoardJson(allLogicComponents: IDataOperator[]){\n\t\tlet save = this.getBoardSave(allLogicComponents, \"\", \"\");\n\t\tif(save.id)\n\t\t\tdelete save.id; // Save ID is unnecessary\n\t\tfor(let component of save.components){\n\t\t\tcomponent.i = component.id.slice(0, 5);  // Slicing ID's to only 5 characters\n\t\t\tdelete component.id;\n\t\t\tcomponent.t = Object.keys(this.optimizedComponentTypes).find(\n\t\t\t\tkey => this.optimizedComponentTypes[key] == component.type\n\t\t\t); // Optimize type\n\t\t\tdelete component.type;\n\t\t\tlet optimizedConnections = []\n\t\t\tfor(let connection of component.connections){ \n\t\t\t\tlet con = [connection.from.slice(0, 5), connection.to.slice(0, 5),]\n\t\t\t\tif(connection.lineBreaks || connection.title)\n\t\t\t\t\tcon.push(connection.lineBreaks || []);\n\t\t\t\tif(connection.title)\n\t\t\t\t\tcon.push(connection.title);\n\t\t\t\toptimizedConnections.push(con);\n\t\t\t}\n\t\t\tif(optimizedConnections.length == 0)\n\t\t\t\tdelete component.connections\n\t\t\telse{\n\t\t\t\tcomponent.c = optimizedConnections;\n\t\t\t\tdelete component.connections;\n\t\t\t}\n\t\t\tcomponent.o = this.cloneOptionsOptimized(component.options);\n\t\t\tdelete component.options;\n\t\t}\n\t\tlet saveJson = JSON.stringify(save.components);\n\t\treturn saveJson;\n\t}\n\n\t/**\n\t * Takes in optimized save string that was made by getOptimizedBoardSave method\n\t */\n\tgetSaveFromOptimizedSave(save: any){\n\t\tfor(let component of save){\n\t\t\tcomponent.type = this.optimizedComponentTypes[component.t]\n\t\t\tcomponent.options = this.getOptionsFromOptimized(component.o);\n\t\t\tcomponent.id = component.i;\n\t\t\tlet normalConnections = []\n\t\t\tif(component.c != null){\n\t\t\t\tfor(let connection of component.c){ \n\t\t\t\t\tlet normalConnection: any =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfrom: connection[0],\n\t\t\t\t\t\t\tto: connection[1],\n\t\t\t\t\t\t}\n\t\t\t\t\tif(connection.length > 2)\n\t\t\t\t\t\tnormalConnection.lineBreaks = connection[2];\n\t\t\t\t\tif(connection.length > 3)\n\t\t\t\t\t\tnormalConnection.title = connection[3];\n\t\t\t\t\tnormalConnections.push(normalConnection);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponent.connections = normalConnections;\n\t\t\tdelete component.o;\n\t\t\tdelete component.i;\n\t\t\tdelete component.c;\n\t\t\tdelete component.t;\n\t\t}\n\t\treturn save;\n\t}\n\n\t/**\n\t * Saves array of save objects from getBoardSave method\n\t */\n\tsaveBoards(boards: any[]){\n\t\tlocalStorage.setItem(this.LOCALSTORAGE_BOARDS_KEY, JSON.stringify(boards));\n\t}\n\n\t\n\t/**\n\t * Returns new object that represents options of given component normalized for saving\n\t */\n\tprivate cloneOptions(options: Options): any {\n\t\tvar cloneObj = new (options.constructor as any);\n\t\tfor (var attribut in options) {\n\t\t\tif(options[attribut] != null && options[attribut].endpoint != null && options[attribut].method != null){\n\t\t\t\tcloneObj[attribut] = {\n\t\t\t\t\tendpoint: {url: options[attribut].endpoint.url, supportedMethods: options[attribut].endpoint.supportedMethods },\n\t\t\t\t\tmethod: options[attribut].method\n\t\t\t\t};\n\t\t\t\tif(options[attribut].asynchronous === true){\n\t\t\t\t\tcloneObj[attribut].asynchronous = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\tcloneObj[attribut] = this.cloneOptions(options[attribut]);\n\t\t\telse\n\t\t\t\tcloneObj[attribut] = options[attribut];\n\t\t}\n\t\treturn cloneObj;\n\t}\n\n\tcloneOptionsOptimized(options: any){\n\t\tvar cloneObj = new (options.constructor as any);\n\t\tfor (var attribut in options) {\n\t\t\tlet opt = Object.keys(this.optimizedBoardNames).find(\n\t\t\t\tkey => this.optimizedBoardNames[key] === attribut\n\t\t\t); // Optimize type\n\t\t\tif(opt){\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[opt] = this.cloneOptionsOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[opt] = options[attribut];\n\t\t\t\tdelete cloneObj[attribut];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[attribut] = this.cloneOptionsOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[attribut] = options[attribut];\n\t\t\t}\n\t\t}\n\t\treturn cloneObj;\n\t}\n\n\tgetOptionsFromOptimized(options: any){\n\t\tlet cloneObj = new (options.constructor as any);\n\t\tfor (var attribut in options) {\n\t\t\tlet opt = this.optimizedBoardNames[attribut]\n\t\t\tif(opt){\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[opt] = this.getOptionsFromOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[opt] = options[attribut];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[attribut] = this.getOptionsFromOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[attribut] = options[attribut];\n\t\t\t}\n\n\t\t}\n\t\treturn cloneObj;\n\t}\n}","import { IDataOperator, ReceiveDataEvent } from \"src/interfaces/IDataOperator\";\nimport { sleep } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { RequestData } from \"./RequestData\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\ninterface RemoveConnectionEvent { }\n\nexport class Port{\n    connections: Connection[] = [];\n    parent: IDataOperator;\n    isOutput:boolean;\n    hasMultipleConnections:boolean;\n\n    /**\n     * \n     * @param parent: parent of port\n     */\n    constructor(parent: IDataOperator, isOutput: boolean = false, hasMultipleConnections: boolean = false) {\n        this.parent = parent;\n        this.isOutput = isOutput;\n        this.hasMultipleConnections = hasMultipleConnections;\n    }\n\n    /**\n     * sendData: sends data to connection property\n     */\n    public async sendData(data: RequestData, target: Connection = null) {\n        if(this.connections.length == 0) \n            return false;\n        if(this.hasMultipleConnections){\n            if(target == null)\n                await this.connections[0].sendData(data, this);\n            else{\n                let idx = this.connections.indexOf(target);\n                if(idx == -1) \n                    return false;\n                await this.connections[idx].sendData(data, this);\n            }\n        }\n        else{\n            if(this.connections.length > 0)\n                await this.connections[0].sendData(data, this);\n        }\n        return true;\n    }\n\n    /**\n     * receiveData: sends data received from connection to parent property\n     */\n    public async receiveData(data: RequestData, delay: number = 180) {\n        await sleep(delay);\n        await this.parent.receiveData(data,this.isOutput);\n    }\n\n    /**\n     * connectTo: connects this port to given port via Connection class\n     */\n    public connectTo(port: Port) : Connection {\n        if(!this.isConnectedTo(port)){\n            if(this.hasMultipleConnections){\n                let connection = new Connection(this, port);\n                this.connections.push(connection);\n                port.connectWith(connection);\n                this.parent.onConnectionUpdate(this.isOutput);\n                return connection;\n            }\n            else{\n                let connection = new Connection(this, port);\n                this.removeConnections(false);\n                this.connections  = [connection];\n                port.connectWith(connection); \n                this.parent.onConnectionUpdate(this.isOutput);\n                return connection;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * connectWith: connects this port to given connection\n     */\n    public connectWith(connection: Connection) {\n        if(this.hasMultipleConnections){\n            this.connections.push(connection);\n        }\n        else{\n            this.removeConnections(false);\n            this.connections = [connection];\n        }\n        this.parent.onConnectionUpdate(this.isOutput);\n    }\n\n    public removeConnection(connection: Connection, removeFromOther:boolean = false, triggerOnRemove:boolean = true){\n        let connectionIndex = 0;\n        let hasConnection = false;\n        for(let connected of this.connections){\n            if(connection === connected){\n                hasConnection=true;\n                break;\n            }\n            connectionIndex++;\n        }\n        if(hasConnection){\n            this.fireRemoveConnection(this.connections[connectionIndex]);\n            if(removeFromOther)this.connections[connectionIndex].getOtherPort(this).removeConnection(this.connections[connectionIndex]);\n            this.connections.splice(connectionIndex,1);\n        }\n        if(triggerOnRemove)\n            this.parent.onConnectionUpdate(this.isOutput);\n    }\n\n    public removeConnections(triggerOnRemove = true){\n        let removed = this.connections.length > 0;\n        while(this.connections.length > 0){\n            this.removeConnection(this.connections[0], true, false);\n        }\n        if(triggerOnRemove && removed)\n            this.parent.onConnectionUpdate(this.isOutput);\n    }\n\n    /**\n     * isConnectedTo: returns true if connected to given port via Connection\n     */\n    public isConnectedTo(port: Port) : boolean {\n        for(let connection of this.connections){\n            if(connection.getOtherPort(this) === port) \n                return true;\n        }\n        return false;\n    }\n\n    private removeConnectionDispatcher = new EventDispatcher<RemoveConnectionEvent>();\n    public onRemoveConnection(handler: Handler<RemoveConnectionEvent>) {\n        this.removeConnectionDispatcher.register(handler);\n    }\n    private fireRemoveConnection(event: RemoveConnectionEvent) { \n        this.removeConnectionDispatcher.fire(event);\n    }\n\n    protected dropRequestDispatcher = new EventDispatcher<ReceiveDataEvent>();\n    public onDropRequest(handler: Handler<ReceiveDataEvent>) {\n        this.dropRequestDispatcher.register(handler);\n    }\n    public fireDropRequest(event: ReceiveDataEvent) { \n        this.dropRequestDispatcher.fire(event);\n    }\n}","export enum WritePolicy {\n    \"Write-Through\",\n    \"Write-Back (Behind)\"\n}","export enum LoadBalancerType {\n    \"Layer 7\",\n    \"Layer 4\"\n}","import { Injectable } from '@angular/core';\n\nclass Change {\n\t/**\n\t * Json state of board\n\t */\n\tBoard: any;\n\n\tconstructor(Board: any) {\n\t\tthis.Board = Board;\n\t}\n}\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ChangesService {\n\n\tprivate undoStack: Change[] = [];\n\tprivate redoStack: Change[] = [];\n\n  \tconstructor() { }\n\n\t/**\n\t * Push the state of the board to undo stack\n\t */\n\tpublic pushChange(state: string){\n\t\tif(state == null)\n\t\t\treturn;\n\t\tlet change = new Change(state);\n\t\tthis.undoStack.push(change);\n\t\tthis.redoStack = [];\n\t}\n\n\t/**\n\t * Returns the json state of board\n\t */\n\tpublic getUndo(currentState: string){\n\t\tlet change = this.undoStack.pop();\n\t\tif(change == null)\n\t\t\treturn null;\n\t\tthis.redoStack.push(new Change(currentState));\n\t\treturn change.Board;\n\t}\n\n\t/**\n\t * Returns the json state of board\n\t */\n\tpublic getRedo(): any{\n\t\tlet change = this.redoStack.pop();\n\t\tif(change == null)\n\t\t\treturn null;\n\t\treturn change.Board;\n\t}\n\n\t/**\n\t * Resets all changes \n\t */\n\tpublic reset(){\n\t\tthis.redoStack = [];\n\t\tthis.undoStack = [];\n\t}\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { EmbedIFrameOptions, ExportPngOptions, ExportService, ExportSvgOptions } from 'src/app/export.service';\nimport { PlacingService } from 'src/app/placing.service';\nimport { SavingService } from 'src/app/saving.service';\nimport { SimulationService } from 'src/app/simulation.service';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { downloadPng, downloadSvg } from 'src/shared/ExtensionMethods';\n\n@Component({\n\tselector: 'board-ui',\n\ttemplateUrl: './boardUI.component.html',\n\tstyleUrls: ['./boardUI.component.scss']\n})\nexport class BoardUIComponent implements OnInit {\n\t\n\t// File section events\n\t@Output() newFile = new EventEmitter();\n\t@Output() saveFile = new EventEmitter<string>();\n\t@Output() loadFile = new EventEmitter();\n\t@Output() showSaved = new EventEmitter();\n\t@Output() save = new EventEmitter();\n\t@Output() exportPng = new EventEmitter();\n\t@Output() exportSvg = new EventEmitter();\n\t@Output() embedIFrame= new EventEmitter();\n\n\t// Edit section events\n\t@Output() copyComponent = new EventEmitter();\n\t@Output() pasteComponent = new EventEmitter();\n\t@Output() selectAllComponents = new EventEmitter();\n\t@Output() cutComponent = new EventEmitter();\n\t@Output() delComponent = new EventEmitter();\n\t@Output() undo = new EventEmitter();\n\t@Output() redo = new EventEmitter();\n\t@Output() clearBoard = new EventEmitter();\n\n\t// View section events\n\t@Output() fullscreen = new EventEmitter();\n\t@Output() zoomIn = new EventEmitter();\n\t@Output() zoomOut = new EventEmitter();\n\t@Output() changeScale = new EventEmitter<number>();\n\t@Output() resetView = new EventEmitter();\n\n\t// Help section events\n\t@Output() onboardTutorial1 = new EventEmitter();\n\n\t// Other events\n\t@Output() startSimulation = new EventEmitter();\n\t@Output() stopSimulation = new EventEmitter();\n\n\t@Input() getComponents: () => IDataOperator[];\n\n\tname = \"Untitled System\";\n\tsaveFileName = \"Untitled System\";\n\n\tconfirmDialogText = \"\";\n\tconfirmDialogOpen: boolean = false;\n\n\tisKeyboardShortcutsOpen: boolean = false;\n\tisExportPngDialogOpen: boolean = false;\n\tisExportSvgDialogOpen: boolean = false;\n\n\tisHelpersDisabled: boolean = false;\n\tisTitlesHidden: boolean = false;\n\tisTechnologiesHidden: boolean = false;\n\tisPreviewOpen: boolean = false;\n\tisSavingOpen: boolean = false;\n\tisEmbedIFrameOpen: boolean = false;\n\tisPerformanceModeEnabled: boolean = false;\n\twasPerformanceModeBeforeSimulation: boolean = false;\n\tisResponsesHidden: boolean = false;\n\n\tembedIFrameTemplate: string = \"\";\n\tshowEmbedError: boolean = false;\n\tembedIFrameOptions: EmbedIFrameOptions = new EmbedIFrameOptions();\n\tembedIFrameJson: string = \"\";\n\n\tcanUseShortcuts: boolean = true;\n\n\texportPngOptions: ExportPngOptions = new ExportPngOptions();\n\texportSvgOptions: ExportSvgOptions = new ExportSvgOptions();\n\texportPngPreview: HTMLCanvasElement;\n\texportSvgPreview: SVGElement;\n\n\tisMobile: boolean = false;\n\n\n\tscaleControl: FormControl = new FormControl();\n\tscaleSelectList = [0.1, 0.5, 1, 1.5, 2];\n\n\tconfirmDialogReturnFunction = () => {};\n\n\t@ViewChild(\"file\") fileInput;\n\t@ViewChild(\"preview\") preview;\n\n\t/**\n\t * Dictionary of keys with assigned function when pressed with ctrl key\n\t */\n\tcontrolShortcuts = { \n\t\t\"c\": (e: Event) => {\n\t\t\tthis.copyComponent.emit();\n\t\t},\n\t\t\"v\": (e: Event) => {\n\t\t\tthis.pasteComponent.emit();\n\t\t},\n\t\t\"a\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.selectAllComponents.emit();\n\t\t},\n\t\t\"x\": (e: Event) => {\n\t\t\tthis.cutComponent.emit();\n\t\t},\n\t\t\"s\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.save.emit(true);\n\t\t},\n\t\t\"z\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.undo.emit();\n\t\t},\n\t\t\"y\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.redo.emit();\n\t\t},\n\t\t\"+\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.zoomIn.emit();\n\t\t},\n\t\t\"-\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.zoomOut.emit();\n\t\t}\n\t}\n\n\tconstructor(private placingService: PlacingService, private savingService: SavingService, public viewingService: ViewingService, private exportService: ExportService, public simulationService: SimulationService) { \n\t\tthis.isHelpersDisabled = viewingService.isHelpersDisabled();\n\t\tthis.isTitlesHidden = viewingService.isTitlesHidden();\n\t\tthis.isTechnologiesHidden = viewingService.isTechnologiesHidden();\n\t\tthis.isPerformanceModeEnabled = viewingService.isPerformanceMode();\n\t\tthis.isResponsesHidden = viewingService.isResponsesHidden();\n\t}\n\n\tload(file){\n\t\tif(file.files.length == 0)\n\t\t\treturn;\n\t\tif(!this.isJson(file.files[0].name)){\n\t\t\tthis.placingService.showSnack(\"You need to upload .json file\");\n\t\t\treturn;\n\t\t}\n\t\tlet reader = new FileReader();\n\t    reader.onload = ((f) => {\n\t\t\treturn (e)=> { \n\t\t\t\tlet data = e.target.result; \n\t\t\t\tthis.loadFile.emit(data);\n\t\t\t}; \n\t\t})(file);\n\t\treader.readAsText(file.files[0]);\n\t\tthis.fileInput.nativeElement.value = null;\n\t\tthis.canUseShortcuts = true;\n\t}\n\n\tprivate isJson(name: string){\n\t\tif(name.length == 0)\n\t\t\treturn false;\n\t\treturn name.substring(name.length - 5, name.length).toLowerCase() === \".json\";\n\t}\n\n\tonNameChange(){\n\t\tthis.savingService.systemName = this.name;\n\t}\n\n\tchangeName(name){\n\t\tthis.name = name;\n\t\tthis.saveFileName = name;\n\t\tthis.savingService.systemName = name;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.scaleControl.setValue(1);\n\t\tdocument.addEventListener(\"focusin\", () => {\n\t\t\tthis.canUseShortcuts = false;\n\t\t}); \n\t\tdocument.addEventListener(\"focusout\", () => {\n\t\t\tthis.canUseShortcuts = true;\n\t\t});\n\t\twindow.onkeydown = (e: KeyboardEvent)=>{\n\t\t\tif(!this.canUseShortcuts)\n\t\t\t\treturn;\n\t\t\tif(e.ctrlKey && this.controlShortcuts[e.key]){\n\t\t\t\tthis.controlShortcuts[e.key](e);\n\t\t\t}\n\t\t\tif(e.key === 'Delete')\n\t\t\t\tthis.delComponent.emit();\n\t\t}\n\t\tif(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n\t\t\tthis.isMobile = true;\n\t\t}\n\t}\n\n\tshowConfirmDialog(text: string, returnFunction){\n\t\tthis.confirmDialogOpen = true;\n\t\tthis.confirmDialogText = text;\n\t\tthis.confirmDialogReturnFunction = returnFunction;\n\t}\n\n\tcloseDialog(){\n\t\tthis.confirmDialogOpen = false;\n\t}\n\n\tconfirmDialog(){\n\t\tthis.confirmDialogReturnFunction();\n\t\tthis.confirmDialogOpen = false;\n\t}\n\n\tnewFileDialog(){\n\t\tthis.newFile.emit();\n\t}\n\n\topenEmbedIFrame(){\n\t\tthis.isEmbedIFrameOpen = true;\n\t\tlet components = this.getComponents();\n\t\tif(components.length <= 1){\n\t\t\tthis.showEmbedError = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.showEmbedError = false;\n\t\tthis.embedIFrameJson = this.savingService.getOptimizedBoardJson(components);\n\t\tlet obj: any = {comp: JSON.parse(this.embedIFrameJson)};\n\t\tobj.showTitles = this.embedIFrameOptions.showTitles;\n\t\tobj.darkMode = this.embedIFrameOptions.darkMode;\n\t\tthis.embedIFrameJson = JSON.stringify(obj);\n\t\tlet base64Encoded = btoa(this.embedIFrameJson);\n\t\tthis.generateEmbedIFrameTemplate(base64Encoded);\n\t}\n\n\tgenerateEmbedIFrameTemplate(encodedSave: string){\n\t\tlet url = \"https://honzaap.github.io/Systemizer/create\"\n\t\tlet template = `<iframe frameborder=\"0\" style=\"width:100%;height:600px;\" src=\"${url}?viewer=${encodedSave}\">\\n</iframe>`\n\t\tthis.embedIFrameTemplate = template;\n\t}\n\n\tchangeEmbedIFrameOptions(){\n\t\tlet obj = JSON.parse(this.embedIFrameJson);\n\t\tobj.showTitles = this.embedIFrameOptions.showTitles;\n\t\tobj.darkMode = this.embedIFrameOptions.darkMode;\n\t\tthis.embedIFrameJson = JSON.stringify(obj);\n\t\tthis.generateEmbedIFrameTemplate(btoa(this.embedIFrameJson));\n\t}\n\n\tpreviewEmbedIFrame(){\n\t\tvar win = window.open(\"\", \"Preview\");\n\t\twin.document.body.innerHTML = this.embedIFrameTemplate;\n\t}\n\n\tcloseEmbedIFrame(){\n\t\tthis.isEmbedIFrameOpen = false;\n\t\tthis.embedIFrameTemplate = \"\";\n\t}\n\n\tcopyEmbedIFrame(){\n\t\tvar copyText = document.getElementById(\"embedIframeText\") as any;\n\t\tcopyText.select();\n\t\tcopyText.setSelectionRange(0, 99999);\n\n\t\tdocument.execCommand(\"copy\");\n\n\t\talert(\"Copied to clipboard\");\n\t}\n\n\topenSaveFile(){\n\t\tthis.isSavingOpen = true;\n\t\tthis.saveFileName = this.name;\n\t}\n\n\tclearBoardDialog(){\n\t\tthis.clearBoard.emit();\n\t}\n\n\tasync exportAsPng(){\n\t\tlet components = this.getComponents()\n\t\tif(components == null || components.length == 0){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tlet canvas = await this.exportService.getCanvas(components, this.exportPngOptions);\n\t\tdownloadPng(this.name+\".png\", canvas.toDataURL('image/png', 1));\n\t\tthis.closeExportPngDialog();\n\t}\n\n\tasync openExportPngDialog(){\n\t\tthis.isExportPngDialogOpen = true;\n\t}\n\n\tcloseExportPngDialog(){\n\t\tthis.isExportPngDialogOpen = false;\n\t}\n\n\tasync exportAsSvg(){\n\t\tlet svg = await this.exportService.getSvg(this.getComponents(), this.exportSvgOptions);\n\t\tif(svg == null){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tdownloadSvg(this.name+\".svg\", svg);\n\t\tthis.closeExportSvgDialog();\n\t}\n\n\tasync openExportSvgDialog(){\n\t\tthis.isExportSvgDialogOpen = true;\n\t}\n\n\tcloseExportSvgDialog(){\n\t\tthis.isExportSvgDialogOpen = false;\n\t}\n\n\topenKeyboardShortcuts(){\n\t\tthis.isKeyboardShortcutsOpen = true;\n\t}\n\n\tcloseKeyboardShortcuts(){\n\t\tthis.isKeyboardShortcutsOpen = false;\n\t}\n\n\ttoggleHelpersDisabled(){\n\t\tthis.isHelpersDisabled = !this.isHelpersDisabled;\n\t\tthis.viewingService.setHelpersDisabled(this.isHelpersDisabled);\n\t}\n\n\ttoggleTitlesHidden(){\n\t\tthis.isTitlesHidden = !this.isTitlesHidden;\n\t\tthis.viewingService.setTitlesHidden(this.isTitlesHidden);\n\t}\n\n\ttoggleTechnologiesHidden(){\n\t\tthis.isTechnologiesHidden = !this.isTechnologiesHidden;\n\t\tthis.viewingService.setTechnologiesHidden(this.isTechnologiesHidden);\n\t}\n\n\ttogglePerformanceModeEnabled(){\n\t\tthis.viewingService.setPerformanceMode(this.isPerformanceModeEnabled);\n\t}\n\n\tstartFlowSimulation(){\n\t\t// Save performance mode state before simulation\n\t\tthis.wasPerformanceModeBeforeSimulation = this.viewingService.isPerformanceMode();\n\t\tif(!this.wasPerformanceModeBeforeSimulation)\n\t\t\tthis.viewingService.setPerformanceMode(true, false);\n\t\tthis.isPerformanceModeEnabled = true;\n\t\tthis.startSimulation.emit();\n\t}\n\n\tstopFlowSimulation(){\n\t\t// Set the state to the one before flow simulation\n\t\tthis.viewingService.setPerformanceMode(this.wasPerformanceModeBeforeSimulation, false);\n\t\tthis.isPerformanceModeEnabled = this.wasPerformanceModeBeforeSimulation;\n\t\tthis.stopSimulation.emit();\n\t}\n\n\ttoggleHideResponses(){\n\t\tthis.viewingService.setResponsesHidden(this.isResponsesHidden);\n\t}\n\t\n\tasync openPreview(png: boolean = true){\n\t\tif(png){\n\t\t\tthis.exportPngPreview = await this.exportService.getCanvas(this.getComponents(), this.exportPngOptions);\n\t\t\tif(this.exportPngPreview == null)\n\t\t\t\treturn;\n\t\t\tthis.exportPngPreview.style.width = \"100%\";\n\t\t\tthis.exportPngPreview.style.marginBottom = \"-5px\";\n\t\t\tthis.preview.nativeElement.innerHTML = \"\";\n\t\t\tthis.preview.nativeElement.appendChild(this.exportPngPreview);\n\t\t}\n\t\telse{\n\t\t\tlet components = this.getComponents();\n\t\t\tthis.exportSvgPreview = await this.exportService.getSvg(components, this.exportSvgOptions);\n\t\t\tif(this.exportSvgPreview == null)\n\t\t\t\treturn;\n\t\t\tthis.exportSvgPreview.style.marginBottom = \"-5px\";\n\t\t\tthis.preview.nativeElement.innerHTML = \"\";\n\t\t\tthis.preview.nativeElement.appendChild(this.exportSvgPreview);\n\t\t}\n\t\tthis.isPreviewOpen = true;\n\t}\n\n\tclosePreview(){\n\t\tthis.isPreviewOpen = false;\n\t}\n\n\thandleScaleChange(){\n\t\tthis.changeScale.emit(this.scaleControl.value);\n\t}\n}\n","<header>\n    <nav class=\"nav\">\n        <ul class=\"nav-list\">\n            <li>\n                <input (input)=\"onNameChange()\" [(ngModel)]=\"name\" spellcheck=\"false\" autocomplete=\"off\" type=\"text\" class=\"navbar-name\" id=\"navbar-name\" />\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"fileMenu\" aria-label=\"File menu\">\n                    File\n                </button>\n                <mat-menu #fileMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"showConfirmDialog('Do you really want to create a new file?', newFileDialog )\">\n                        <span>New file</span>\n                    </button>\n                    <button mat-menu-item (click)=\"openSaveFile()\">\n                        <span>Save file</span>\n                    </button>\n                    <label class=\"file-form\" mat-menu-item class=\"custom-file-upload\">\n                        <input #file (input)=\"load(file)\" type=\"file\" accept=\".json\" style=\"position: absolute;width: 100%;height: 100%;opacity: 0;cursor: pointer;right: 0;z-index: 100;\">\n                        Load file\n                    </label>\n                    <button mat-menu-item (click)=\"showSaved.emit(name)\">\n                        <span>Show saved boards</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"save.emit(name)\">\n                        <span>Save</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item mat-icon-button [matMenuTriggerFor]=\"exportMenu\" aria-label=\"Export menu\">\n                        Export\n                    </button>\n                    <mat-menu #exportMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"openExportPngDialog()\">\n                            <span>Export as PNG</span>\n                        </button>\n                        <button mat-menu-item (click)=\"openExportSvgDialog()\">\n                            <span>Export as SVG</span>\n                        </button>\n                    </mat-menu>\n                    <button mat-menu-item mat-icon-button [matMenuTriggerFor]=\"embedMenu\" aria-label=\"Embed menu\">\n                        Embed\n                    </button>\n                    <mat-menu #embedMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"openEmbedIFrame()\">\n                            <span>Embed IFrame</span>\n                        </button>\n                    </mat-menu>\n                </mat-menu>\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"editMenu\" aria-label=\"Edit menu\">\n                    Edit\n                </button>\n                <mat-menu #editMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"copyComponent.emit()\">\n                        <span>Copy</span>\n                    </button>\n                    <button mat-menu-item (click)=\"pasteComponent.emit()\">\n                        <span>Paste</span>\n                    </button>\n                    <button mat-menu-item (click)=\"cutComponent.emit(); \">\n                        <span>Cut</span>\n                    </button>\n                    <button mat-menu-item (click)=\"delComponent.emit()\">\n                        <span>Delete</span>\n                    </button>\n                    <button mat-menu-item (click)=\"undo.emit()\">\n                        <span>Undo</span>\n                    </button>\n                    <button mat-menu-item (click)=\"redo.emit()\">\n                        <span>Redo</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"showConfirmDialog('Do you really want to clear the board?', clearBoardDialog)\">\n                        <span>Clear board</span>\n                    </button>\n                </mat-menu>\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"viewMenu\" aria-label=\"View menu\">\n                    View\n                </button>\n                <mat-menu #viewMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"viewingService.setDarkMode(!viewingService.isDarkMode())\">\n                        <span *ngIf=\"viewingService.isDarkMode(); else lightMode\">Light mode</span>\n                        <ng-template #lightMode>\n                            <span>Dark mode</span>\n                        </ng-template>\n                    </button>\n                    <button mat-menu-item (click)=\"fullscreen.emit()\">\n                        <span>Go fullscreen</span>\n                    </button>\n                    <button mat-menu-item (click)=\"zoomIn.emit()\">\n                        <span>Zoom in</span>\n                    </button>\n                    <button mat-menu-item (click)=\"zoomOut.emit()\">\n                        <span>Zoom out</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"toggleHelpersDisabled()\">\n                        <span *ngIf=\"isHelpersDisabled; else helpersEnabled\">Enable <i class=\"far fa-question-circle\"></i> helpers</span>\n                        <ng-template #helpersEnabled>\n                            <span>Disable <i class=\"far fa-question-circle\"></i> helpers</span>\n                        </ng-template>\n                    </button>\n                    <button mat-menu-item (click)=\"toggleTitlesHidden()\">\n                        <span *ngIf=\"isTitlesHidden; else titlesVisible\">Show titles</span>\n                        <ng-template #titlesVisible>\n                            <span>Hide titles</span>\n                        </ng-template>\n                    </button>\n                    <button mat-menu-item (click)=\"toggleTechnologiesHidden()\">\n                        <span *ngIf=\"isTechnologiesHidden; else technologiesVisible\">Show technologies</span>\n                        <ng-template #technologiesVisible>\n                            <span>Hide technologies</span>\n                        </ng-template>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"resetView.emit()\">\n                        <span>Reset view</span>\n                    </button>\n                </mat-menu>\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"helpMenu\" aria-label=\"Help menu\">\n                    Help\n                </button>\n                <mat-menu #helpMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"onboardTutorial1.emit()\">\n                        <span>Quick introduction tutorial</span>\n                    </button>\n                    <a mat-menu-item href=\"https://github.com/honzaap/Systemizer\" target=\"_blank\" >\n                        <span>GitHub</span>\n                    </a>\n                    <button mat-menu-item (click)=\"openKeyboardShortcuts()\">\n                        <span>Keyboard shortcuts</span>\n                    </button>\n                    <a mat-menu-item href=\"https://github.com/honzaap/Systemizer/issues\" target=\"_blank\" >\n                        <span>Report a bug</span>\n                    </a>\n                </mat-menu>\n            </li>\n        </ul>\n        <div class=\"nav-bonus\">\n            <mat-checkbox [disabled]=\"simulationService.isFlowSimulationOn\" class=\"example-margin\" (change)=\"togglePerformanceModeEnabled()\" [(ngModel)]=\"isPerformanceModeEnabled\">Performance mode</mat-checkbox>\n            <mat-checkbox class=\"example-margin\" (change)=\"toggleHideResponses()\" [(ngModel)]=\"isResponsesHidden\">Hide responses</mat-checkbox>\n            <button [matTooltip]=\"'Start a flow simulation (still in a beta)'\" (click)=\"startFlowSimulation()\" *ngIf=\"!simulationService.isFlowSimulationOn; else stopSimulationTemp\">\n                Start simulation\n                <span class=\"badge\">Beta</span>\n            </button>\n            <ng-template #stopSimulationTemp>\n                <button (click)=\"stopFlowSimulation()\">\n                    Stop simulation\n                </button>\n            </ng-template>\n            <button (click)=\"fullscreen.emit()\" *ngIf=\"isMobile\">\n                Go fullscreen\n            </button>        \n        </div>\n    </nav>\n    <nav class=\"nav-second\">\n        <ul class=\"nav-list\">\n            <li>\n                <mat-form-field appearance=\"fill\" class=\"nav-select\">\n                    <mat-select (selectionChange)=\"handleScaleChange()\" [formControl]=\"scaleControl\">\n                      <mat-option *ngFor=\"let val of scaleSelectList\" [value]=\"val\">{{val*100}}%</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"zoomIn.emit()\" class=\"icon\"><i class=\"fas fa-search-plus\"></i></span>\n            </li>\n            <li>\n                <span (click)=\"zoomOut.emit()\" class=\"icon\"><i class=\"fas fa-search-minus\"></i></span>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"undo.emit()\" class=\"icon\"><i class=\"fas fa-undo-alt\"></i></span>\n            </li>\n            <li>\n                <span (click)=\"redo.emit()\" class=\"icon\"><i class=\"fas fa-redo\"></i></span>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"copyComponent.emit()\" class=\"icon\"><i class=\"far fa-copy\"></i></span>\n            </li>\n            <li>\n                <span (click)=\"pasteComponent.emit()\" class=\"icon\"><i class=\"fas fa-paste\"></i></span>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"delComponent.emit()\" class=\"icon\"><i class=\"fas fa-trash\"></i></span>\n            </li>\n        </ul>\n    </nav>\n</header>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeDialog()\" [style.display]=\"confirmDialogOpen ? 'flex' : 'none'\">\n    <div class=\"confirm-dialog\">\n        <p class=\"title\">{{confirmDialogText}}</p>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"closeDialog()\">No</button>\n            <button class=\"btn-confirm\" (click)=\"confirmDialog()\">Yes</button>\n        </div>\n    </div>\n</div>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeKeyboardShortcuts()\" [style.display]=\"isKeyboardShortcutsOpen ? 'flex' : 'none'\">\n    <div class=\"keyboard-shortcuts-window\">\n        <span class=\"keyboard-shortcuts-title\">Keyboard shortcuts</span>\n        <ul class=\"shortcuts-list\">\n            <li><p class=\"highlight\">CTRL C</p> <p>Copy component</p></li>\n            <li><p class=\"highlight\">CTRL V</p> <p>Paste component</p></li>\n            <li><p class=\"highlight\">DEL</p>    <p>Delete component</p></li>\n            <li><p class=\"highlight\">CTRL +</p> <p>Zoom in on board</p></li>\n            <li><p class=\"highlight\">CTRL -</p> <p>Zoom out of board</p></li>\n            <li><p class=\"highlight\">CTRL Z</p> <p>Undo change</p></li>\n            <li><p class=\"highlight\">CTRL Y</p> <p>Redo change</p></li>\n        </ul> \n        <button class=\"close\" (click)=\"closeKeyboardShortcuts()\"><i class=\"fas fa-times\"></i></button>\n    </div>\n</div>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeExportPngDialog()\" [style.display]=\"isExportPngDialogOpen ? 'flex' : 'none'\">\n    <div class=\"confirm-dialog export\">\n        <p class=\"title\">Export as PNG</p>\n        <label>\n            <span>Transparent background: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.transparentBackground\">\n        </label>\n        <label>\n            <span>Capture only used area: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.captureUsed\">\n        </label>\n        <label>\n            <span>Show component titles: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.showTitles\">\n        </label>\n        <label>\n            <span>Show technologies: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.showTechnologies\">\n        </label>\n        <label>\n            <span>Light mode: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.lightMode\">\n        </label>\n        <label>\n            <span>Light color titles: </span>\n            <input [disabled]=\"!exportPngOptions.transparentBackground || !exportPngOptions.showTitles\" type=\"checkbox\" [(ngModel)]=\"exportPngOptions.lightTitles\">\n        </label>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"closeExportPngDialog()\">Cancel</button>\n            <button class=\"btn-preview\" (click)=\"openPreview()\">Preview</button>\n            <button class=\"btn-confirm\" (click)=\"exportAsPng()\">Download</button>\n        </div>\n    </div>\n</div>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeExportSvgDialog()\" [style.display]=\"isExportSvgDialogOpen ? 'flex' : 'none'\">\n    <div class=\"confirm-dialog export\">\n        <p class=\"title\">Export as SVG</p>\n        <label>\n            <span>Show component titles: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportSvgOptions.showTitles\">\n        </label>\n        <label>\n            <span>Show technologies: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportSvgOptions.showTechnologies\">\n        </label>\n        <label>\n            <span>Light color titles: </span>\n            <input [disabled]=\"!exportSvgOptions.showTitles\" type=\"checkbox\" [(ngModel)]=\"exportSvgOptions.lightTitles\">\n        </label>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"closeExportSvgDialog()\">Cancel</button>\n            <button class=\"btn-preview\" (click)=\"openPreview(false)\">Preview</button>\n            <button class=\"btn-confirm\" (click)=\"exportAsSvg()\">Download</button>\n        </div>\n    </div>\n</div>\n<div class=\"preview-container\" (click)=\"closePreview()\" [style.display]=\"isPreviewOpen ? 'flex' : 'none'\">\n    <div #preview class=\"preview\">\n        <!-- Content added dynamically -->\n    </div>\n</div>\n<div class=\"backdrop-centralized saving\" *ngIf=\"isSavingOpen\" (click.self)=\"isSavingOpen = false\">\n    <div class=\"saving-inner confirm-dialog\">\n        <div class=\"name\">\n            <label>File name</label>\n            <input spellcheck=\"false\" required [(ngModel)]=\"saveFileName\" placeholder=\"File name\">\n        </div>\n        <button class=\"close\" (click)=\"isSavingOpen = false\">×</button>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"isSavingOpen = false\">Close</button>\n            <button class=\"btn-confirm\" (click)=\"saveFile.emit(saveFileName)\">Download</button>\n        </div>\n    </div>\n</div>\n<div class=\"backdrop-centralized embed\" *ngIf=\"isEmbedIFrameOpen\" (click.self)=\"closeEmbedIFrame()\">\n    <div class=\"confirm-dialog embed-inner\">\n        <h5>Embed as IFrame</h5>\n        <p>An IFrame HTML tag will be generated. Copy & paste it into your HTML template to display your system in read-only format.</p>\n        <label>\n            <span>Show component titles by default: </span>\n            <input (change)=\"changeEmbedIFrameOptions()\" type=\"checkbox\" [(ngModel)]=\"embedIFrameOptions.showTitles\">\n        </label>\n        <label>\n            <span>Dark mode: </span>\n            <input (change)=\"changeEmbedIFrameOptions()\" type=\"checkbox\" [(ngModel)]=\"embedIFrameOptions.darkMode\">\n        </label>\n        <textarea *ngIf=\"!showEmbedError; else iframeEmbedError\" id=\"embedIframeText\" readonly [textContent]=\"embedIFrameTemplate\"></textarea>\n        <ng-template #iframeEmbedError>\n            <p class=\"error\">You can only embed a system with 2 or more components!</p>\n        </ng-template>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-preview\" (click)=\"previewEmbedIFrame()\">Preview</button>\n            <button class=\"btn-preview\" (click)=\"closeEmbedIFrame()\">Close</button>\n            <button [disabled]=\"showEmbedError\" class=\"btn-confirm\" (click)=\"copyEmbedIFrame()\">Copy</button>\n        </div>\n    </div>\n</div>","export enum DatabaseType{\n    SQL,\n    NoSQL\n}","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSliderModule } from \"@angular/material/slider\"\nimport { MatCheckboxModule } from \"@angular/material/checkbox\"\n\nimport { BrowserModule, EVENT_MANAGER_PLUGINS, HAMMER_LOADER } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DelayedHoverDirective } from \"../shared/DelayedHoverDirective\";\nimport { ResizableTextAreaDirective } from \"../shared/resizable-textarea\";\nimport { VueEventModifiersPlugin } from \"../shared/vue-event-modifiers.plugin\";\nimport { ColorPickerModule } from 'ngx-color-picker';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BoardComponent } from './board/board.component';\nimport { ComponentmenuComponent } from './board/componentmenu/componentmenu.component';\n\nimport { ApiComponent } from './board/components/api/api.component';\nimport { ApiGatewayComponent } from './board/components/apigateway/apigateway.component';\nimport { CacheComponent } from './board/components/cache/cache.component';\nimport { ClientComponent } from './board/components/client/client.component';\nimport { CloudStorageComponent } from './board/components/cloudstorage/cloudstorage.component';\nimport { ConnectionComponent } from './board/components/connection/connection.component';\nimport { DatabaseComponent } from './board/components/database/database.component';\nimport { LoadbalancerComponent } from './board/components/loadbalancer/loadbalancer.component';\nimport { MessagequeueComponent } from './board/components/messagequeue/messagequeue.component';\nimport { PortComponent } from './board/components/port/port.component';\nimport { PubsubComponent } from './board/components/pubsub/pubsub.component';\nimport { TitleComponent } from './board/components/Shared/title/title.component';\nimport { TextfieldComponent } from './board/components/textfield/textfield.component';\nimport { WebserverComponent } from './board/components/webserver/webserver.component';\nimport { ProxyComponent } from './board/components/proxy/proxy.component';\nimport { ClientclusterComponent } from './board/components/clientcluster/clientcluster.component';\nimport { CDNComponent } from './board/components/cdn/cdn.component';\n\nimport { BoardUIComponent } from './board/boardUI/boardUI.component';\nimport { OptionsmenuComponent } from './board/optionsmenu/optionsmenu.component';\nimport { TutorialControlsComponent } from './board/tutorials/tutorial-controls/tutorial-controls.component';\nimport { CreateComponent } from './create/create.component';\nimport { InfoTooltipComponent } from './info-tooltip/info-tooltip.component';\nimport { FooterComponent } from './pages/footer/footer.component';\nimport { GettingStartedComponent } from './pages/getting-started/getting-started.component';\nimport { PagesHeaderComponent } from './pages/header/header.component';\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\nimport { PagesComponent } from './pages/pages.component';\nimport { EndpointSelectComponent } from './board/components/Shared/endpoint-select/endpoint-select.component';\nimport { SliderDescribedComponent } from './board/components/Shared/slider-described/slider-described.component';\nimport { SimulationCardComponent } from './board/components/Shared/simulation-card/simulation-card.component';  \n\nimport * as Hammer from 'hammerjs';\nimport {\nHammerModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG} \nfrom '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    BoardUIComponent,\n    ClientComponent,\n    ConnectionComponent,\n    PortComponent,\n    WebserverComponent,\n    LoadbalancerComponent,\n    ComponentmenuComponent,\n    DelayedHoverDirective,\n    OptionsmenuComponent,\n    ApiComponent,\n    ApiGatewayComponent,\n    TextfieldComponent,\n    ResizableTextAreaDirective,\n    DatabaseComponent,\n    CacheComponent,\n    MessagequeueComponent,\n    PubsubComponent,\n    CreateComponent,\n    PagesComponent,\n    FooterComponent,\n    PagesHeaderComponent,\n    TutorialControlsComponent,\n    GettingStartedComponent,\n    LandingPageComponent,\n    InfoTooltipComponent,\n    TitleComponent,\n    CloudStorageComponent,\n    ProxyComponent,\n    ClientclusterComponent,\n    CDNComponent,\n    EndpointSelectComponent,\n    SliderDescribedComponent,\n    SimulationCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatCheckboxModule,\n    ColorPickerModule,\n    HammerModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n\tproviders: [\n\t\t{\n\t\t\tprovide: EVENT_MANAGER_PLUGINS,\n\t\t\tuseClass: VueEventModifiersPlugin,\n\t\t\tmulti: true\n\t\t},\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerGestureConfig,\n    },\n    {\n      provide: HAMMER_LOADER,\n      useValue: () => new Promise(() => {})\n    }\n\t],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Proxy } from 'src/models/Proxy';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'app-proxy',\n\ttemplateUrl: './proxy.component.html',\n\tstyleUrls: ['./proxy.component.scss']\n})\nexport class ProxyComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicProxy: Proxy = new Proxy();\n\n\tgetLogicComponent(){\n\t\treturn this.LogicProxy;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new Proxy();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicProxy.options.X\"\n[style.top.px]=\"LogicProxy.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <span class=\"img bg-proxy\"></span>\n    </div>  \n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Endpoint, EndpointAction } from 'src/models/Endpoint';\nimport { EndpointOperator } from 'src/models/EndpointOperator';\nimport { APIType } from 'src/models/enums/APIType';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { EndpointActionHTTPMethod, HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { getFormattedMethod } from 'src/shared/ExtensionMethods';\n\n@Component({\n\tselector: 'endpoint-select',\n\ttemplateUrl: './endpoint-select.component.html',\n\tstyleUrls: ['./endpoint-select.component.scss']\n})\nexport class EndpointSelectComponent implements OnInit {\n\n\t@Input() Model: EndpointOperator;\n\t@Input() Type: APIType = APIType.REST;\n\t@Input() Multiple: boolean = true;\n\t@Input() HasActions: boolean = true;\n\t@Input() HasStreamActions: boolean = false;\n\t@Input() ModifiableMethods: boolean = true;\n\t@Input() ConnectableEndpoints: Endpoint[] = [];\n\t@Input() DatabaseEndpoints: boolean = false;\n\t@Input() AfterChange;\n\t@Input() Title: string = \"Endpoints: \";\n\t@Input() ShowCounter: boolean = false;\n\t@Input() Property: string = \"endpoints\";\n\n\tpublic HTTPMethod: typeof HTTPMethod = HTTPMethod;\n\tpublic HTTPMethodKeys = Object.values(HTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic EndpointActionHTTPMethod: typeof EndpointActionHTTPMethod = EndpointActionHTTPMethod;\n\tpublic EndpointActionHTTPMethodKeys = Object.values(EndpointActionHTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic Protocol: typeof Protocol = Protocol;\n\tpublic ProtocolKeys = Object.values(Protocol).filter(k => !isNaN(Number(k)));\n\tpublic APIType: typeof APIType = APIType;\n\tpublic APITypeKeys = Object.values(APIType).filter(k => !isNaN(Number(k)));\n\tpublic gRPCMode: typeof gRPCMode = gRPCMode;\n\tpublic gRPCModeKeys = Object.values(gRPCMode).filter(k => !isNaN(Number(k)));\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\n\t}\n\n\tformatMethod(method: HTTPMethod, isDatabase: boolean){\n\t\treturn getFormattedMethod(method, isDatabase);\n\t}\n\n\thandleActionEndpointChange(endpoint: Endpoint, action: EndpointAction){\n\t\taction.method = endpoint.protocol != Protocol.WebSockets && action.endpoint.protocol != Protocol.WebSockets ? EndpointActionHTTPMethod.Inherit : EndpointActionHTTPMethod[HTTPMethod[action.endpoint.supportedMethods[0]]];\n\t}\n\n\thandleEndpointMethodChange(endpoint: Endpoint){\n\t\tif(endpoint.supportedMethods.length == 0)\n\t\t\tendpoint.supportedMethods = [HTTPMethod.GET];\n\t}\n\n\thandleEndpointUrlChange(endpoint){\n\t\tif(endpoint.url == null || endpoint.url.replace(/\\s/g,\"\") == \"\")\n\t\t\tendpoint.url = `/endpoint/v${Math.floor(10*Math.random())}`;\n\t}\n\n\taddAction(endpoint: Endpoint){\n\t\tendpoint.actions.push(new EndpointAction());\n\t\tthis.AfterChange();\n\t}\n\n\tremoveAction(endpoint: Endpoint, action: EndpointAction){\n\t\tlet idx = 0;\n\t\tfor(let act of endpoint.actions){\n\t\t\tif(act === action) {\n\t\t\t\tendpoint.actions.splice(idx,1);\n\t\t\t\tthis.AfterChange();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tidx++;\n\t\t}\n\t}\n\n\taddEndpoint(){\n\t\tlet type = this.Type;\n\t\tlet endpoint: Endpoint;\n\t\tif(type == APIType.REST){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE]);\n\t\t}\n\t\telse if(type == APIType.GraphQL){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET,HTTPMethod.POST]);\n\t\t}\n\t\telse if(type == APIType.RPC){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET]);\n\t\t}\n\t\telse if(type == APIType.gRPC){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET]);\n\t\t\tendpoint.grpcMode = gRPCMode.Unary;\n\t\t}\n\t\telse if(type == APIType.WebSockets){\n\t\t\tendpoint = new Endpoint(\"/endpoint\", [HTTPMethod.GET]);\n\t\t\tendpoint.protocol = Protocol.WebSockets;\n\t\t}\n\t\tthis.Model.options[this.Property].push(endpoint);\t\t\n\t\tthis.AfterChange();\n\t}\n\n\tremoveEndpoint(endpoint: Endpoint){\n\t\tlet idx = 0;\n\t\tfor(let ep of this.Model.options[this.Property]){\n\t\t\tif(ep === endpoint) {\n\t\t\t\tthis.Model.options[this.Property].splice(idx,1);\n\t\t\t\tthis.AfterChange();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tidx++;\n\t\t}\t\n\t}\n}\n","<div class=\"options-endpoints-container\">\n    <div class=\"options-endpoints-top\">\n        <span class=\"property-name\">{{Title}} <info-tooltip [Message]=\"'List of available endpoints. Click the dropdown to show allowed methods and actions.'\"></info-tooltip></span>\n        <div>\n            <span *ngIf=\"ShowCounter\">[{{this.Model.options[Property].length}}]</span>\n            <span *ngIf=\"Multiple\" class=\"button-icon\" (click)=\"addEndpoint()\"><i class=\"fas fa-plus\"></i></span>\n        </div>\n    </div>\n    <div class=\"options-endpoints\">\n        <div class=\"options-endpoint\" *ngFor=\"let endpoint of this.Model.options[Property]\">\n            <mat-expansion-panel>\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <input (blur)=\"handleEndpointUrlChange(endpoint)\" (change)=\"AfterChange()\" class=\"endpoint-url\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"endpoint.url\" placeholder=\"url\">\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"options-endpoint-menu-top\">\n                    <mat-form-field class=\"endpoint-method\" appearance=\"fill\">\n                        <mat-select *ngIf=\"Type == APIType.REST\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" [disabled]=\"!ModifiableMethods\" [(ngModel)]=\"endpoint.supportedMethods\" multiple required>\n                            <mat-option *ngFor=\"let method of HTTPMethodKeys\" [value]=\"method\">{{ formatMethod(HTTPMethod[method], DatabaseEndpoints) }}</mat-option>\n                        </mat-select>\n                        <mat-select *ngIf=\"Type == APIType.GraphQL\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" [disabled]=\"!ModifiableMethods\" [(ngModel)]=\"endpoint.supportedMethods\" multiple required>\n                            <mat-option [value]=\"HTTPMethod.GET\">GET</mat-option>\n                            <mat-option [value]=\"HTTPMethod.POST\">POST</mat-option>\n                        </mat-select>\n                        <mat-select *ngIf=\"Type == APIType.RPC || Type == APIType.gRPC\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" [disabled]=\"!ModifiableMethods\" [(ngModel)]=\"endpoint.supportedMethods[0]\" required>\n                            <mat-option [value]=\"HTTPMethod.GET\">GET</mat-option>\n                            <mat-option [value]=\"HTTPMethod.POST\">POST</mat-option>\n                        </mat-select>\n                        <mat-select *ngIf=\"Type == APIType.WebSockets\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" disabled [(ngModel)]=\"endpoint.supportedMethods[0]\">\n                            <mat-option [value]=\"HTTPMethod.GET\">GET</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"endpoint-grpcmode\" appearance=\"fill\" *ngIf=\"Type == APIType.gRPC\">\n                        <mat-select (selectionChange)=\"AfterChange()\" [disabled]=\"endpoint.protocol == Protocol.WebSockets\" [(ngModel)]=\"endpoint.grpcMode\" required>\n                            <mat-option *ngFor=\"let mode of gRPCModeKeys\" [value]=\"mode\">{{ gRPCMode[mode] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"options-endpoint-actions-container\" *ngIf=\"HasActions && (HasStreamActions || endpoint.grpcMode == gRPCMode['Unary'] && endpoint.protocol !== Protocol.WebSockets)\">\n                    <div class=\"options-endpoint-action\">\n                        <span class=\"property-name action-endpoint\">Actions: <info-tooltip [Message]=\"'List of actions of the endpoint. Change the target endpoint and method used.'\"></info-tooltip></span>\n                        <span class=\"action-method\"></span>\n                        <span class=\"button-icon\" (click)=\"addAction(endpoint)\"><i class=\"fas fa-plus\"></i></span>\n                    </div>\n                    <div class=\"options-endpoint-actions\">\n                        <div class=\"options-endpoint-action\" *ngFor=\"let action of endpoint.actions\">\n                            <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                                <mat-select (selectionChange)=\"handleActionEndpointChange(endpoint, action); AfterChange()\" [(ngModel)]=\"action.endpoint\">\n                                    <mat-option \n                                    [disabled]=\"(((endpoint.grpcMode == gRPCMode.Unary || endpoint.grpcMode == gRPCMode['Client Streaming']) && (connendpoint.protocol == Protocol.WebSockets || connendpoint.grpcMode == gRPCMode['Server Streaming'] || connendpoint.grpcMode == gRPCMode['Bidirectional Streaming'])) || (endpoint.grpcMode == gRPCMode['Server Streaming'] && connendpoint.grpcMode == gRPCMode['Client Streaming'])) && !(Type == APIType.WebSockets && connendpoint.protocol == Protocol.WebSockets)\"\n                                    *ngFor=\"let connendpoint of ConnectableEndpoints\" [value]=\"connendpoint\">{{connendpoint.url}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\" class=\"action-method\">\n                                <mat-select (selectionChange)=\"AfterChange()\" [(ngModel)]=\"action.method\" *ngIf=\"action.endpoint != null; else emptyMethod\">\n                                    <mat-option *ngIf=\"action.endpoint.protocol != Protocol.WebSockets && endpoint.protocol != Protocol.WebSockets\" [value]=\"EndpointActionHTTPMethod.Inherit\">Inherit</mat-option>\n                                    <mat-option *ngFor=\"let method of action.endpoint.supportedMethods\" [value]=\"EndpointActionHTTPMethod[HTTPMethod[method]]\">{{ formatMethod(HTTPMethod[method+''], action.endpoint.protocol == Protocol.Database) }}</mat-option>\n                                </mat-select>\n                                <ng-template #emptyMethod>\n                                    <mat-select disabled>\n                                        <mat-option></mat-option>\n                                    </mat-select>\n                                </ng-template>\n                            </mat-form-field>\n                            <span [class.disabled]=\"action.endpoint == null || action.endpoint.protocol === Protocol.WebSockets || action.endpoint.grpcMode !== gRPCMode.Unary\" (click)=\"action.asynchronous = !(action.asynchronous || false)\" \n                                [class.checked]=\"action.asynchronous === true\" class=\"async-check\"\n                                matTooltip=\"{{ 'Make action asynchronous' }}\">\n                                    A\n                            </span>\n                            <span class=\"button-icon\" (click)=\"removeAction(endpoint, action)\"><i class=\"fas fa-minus\"></i></span>\n                        </div>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n            <span *ngIf=\"APIType.GraphQL && Multiple\" class=\"button-icon remove-endpoint\" (click)=\"removeEndpoint(endpoint)\"><i class=\"fas fa-minus\"></i></span>\n        </div>\n    </div>\n</div>","export enum HTTPMethod{\n    \"GET\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n}\n\nexport enum EndpointActionHTTPMethod{\n    \"Inherit\",\n    \"GET\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n}","import { Component, OnInit } from '@angular/core';\nimport { BalancingAlgorithm } from 'src/models/enums/BalancingAlgorithm';\nimport { LoadBalancerType } from 'src/models/enums/LoadBalancerType';\nimport { LoadBalancer } from 'src/models/LoadBalancer';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n  \tselector: 'loadbalancer',\n\ttemplateUrl: './loadbalancer.component.html',\n  \tstyleUrls: ['./loadbalancer.component.scss']\n})\nexport class LoadbalancerComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicLoadBalancer : LoadBalancer = new LoadBalancer();\n\t\n\thandleTypeChange(){\n\t\tif(this.LogicLoadBalancer.options.type == LoadBalancerType['Layer 4'] && \n\t\tthis.LogicLoadBalancer.options.algorithm == BalancingAlgorithm['URL Hash']){\n\t\t\tthis.LogicLoadBalancer.options.algorithm = BalancingAlgorithm['Round Robin'];\n\t\t}\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicLoadBalancer;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new LoadBalancer();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicLoadBalancer.options.X\"\n[style.top.px]=\"LogicLoadBalancer.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/loadbalancer.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-container\">\n            <div>\n                <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of the load balancer. This can affect available balancing algorithms.'\"></info-tooltip></span>\n                <div>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select (selectionChange)=\"handleTypeChange(); afterChange()\" [(ngModel)]=\"LogicLoadBalancer.options.type\">\n                          <mat-option *ngFor=\"let type of LoadBalancerTypeKeys\" [value]=\"type\">{{LoadBalancerType[type]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div>\n                <span class=\"property-name\">Balancing Algorithm: <info-tooltip [Message]=\"'Changes the balancing algorithm of the load balancer. This changes the data routing behaviour.'\"></info-tooltip></span>\n                <div>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicLoadBalancer.options.algorithm\">\n                          <mat-option [disabled]=\"algo == BalancingAlgorithm['URL Hash'] && LogicLoadBalancer.options.type == LoadBalancerType['Layer 4']\" *ngFor=\"let algo of BalancingAlgorithmKeys\" [value]=\"algo\">{{BalancingAlgorithm[algo]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { IDataOperator, ReceiveDataEvent, ShowStatusCodeEvent, FailedConnectEvent } from \"src/interfaces/IDataOperator\";\nimport { UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { Port } from \"./Port\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\nexport class LogicComponent {\n\n    originID: string = UUID();\n    color: string = \"#6059DF\";\n    fillColor: boolean = true;\n    isFlowSimulationOn: boolean = false;\n\n    connectTo(operator: IDataOperator, connectingWithOutput:boolean) : Connection{\n        let otherPort = operator.getPort(!connectingWithOutput);\n        if(!operator.canConnectTo(this.getPort(connectingWithOutput), !connectingWithOutput) || !this.canConnectTo(otherPort, connectingWithOutput)) \n            return null;\n        return this.getPort(connectingWithOutput).connectTo(otherPort);\n    }\n\n    canConnectTo(port: Port, connectingWithOutput: boolean){\n        // Any component must connect with either IN to OUT or OUT to IN\n        if(connectingWithOutput){\n            let outputPort = this[\"outputPort\"];\n            if(outputPort != null) {\n                if(!port.isOutput)\n                    return true;\n            }\n        }\n        else{\n            let inputPort = this[\"inputPort\"];\n            if(inputPort != null) {\n                if(port.isOutput)\n                    return true;\n            }\n        }\n        this.fireFailedConnect({message: \"You can only connect input to output.\"});\n        return false;\n    }\n\n    getPort(outputPort: boolean = false): Port{\n        if(outputPort)\n            return this[\"outputPort\"];\n        return this[\"inputPort\"];\n    }\n\n    destroy(){\n        if(this[\"outputPort\"])\n            this[\"outputPort\"].removeConnections();\n        if(this[\"inputPort\"])\n            this[\"inputPort\"].removeConnections();\n    }\n\n    onConnectionUpdate(wasOutput: boolean = false){ }\n\n    protected receiveDataDispatcher = new EventDispatcher<ReceiveDataEvent>();\n    public onReceiveData(handler: Handler<ReceiveDataEvent>) {\n        this.receiveDataDispatcher.register(handler);\n    }\n    protected fireReceiveData(event: ReceiveDataEvent) { \n        this.receiveDataDispatcher.fire(event);\n    }\n\n    protected showStatusCodeDispatcher = new EventDispatcher<ShowStatusCodeEvent>();\n    public onShowStatusCode(handler: Handler<ShowStatusCodeEvent>) {\n        this.showStatusCodeDispatcher.register(handler);\n    }\n    protected fireShowStatusCode(event: ShowStatusCodeEvent) { \n        this.showStatusCodeDispatcher.fire(event);\n    }\n\n    protected failedConnectDispatcher = new EventDispatcher<FailedConnectEvent>();\n    public onFailedConnect(handler: Handler<FailedConnectEvent>) {\n        this.failedConnectDispatcher.register(handler);\n    }\n    protected fireFailedConnect(event: FailedConnectEvent) { \n        this.failedConnectDispatcher.fire(event);\n    }\n}","import { ComponentFactory, ComponentFactoryResolver, ComponentRef, EventEmitter, Injectable, Output, Type, ViewContainerRef } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { LineBreak } from 'src/models/Connection';\nimport { Options } from 'src/models/Options';\nimport { ConnectionComponent } from './board/components/connection/connection.component';\nimport { PortComponent } from './board/components/port/port.component';\nimport { OperatorComponent } from './board/components/Shared/OperatorComponent';\n\nclass CopiedItem {\n\tcomponent: any;\n\tlogicComponent: IDataOperator;\n\toptions: Options;\n\toutputConnectionsList: any[];\n}\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class PlacingService{\n\n\t@Output() componentChanged = new EventEmitter();\n\t@Output() showComponentContextMenu = new EventEmitter<any>();\n\t@Output() pushComponent = new EventEmitter<OperatorComponent>();\n\n\tisPlacing = false;\n\tisConnecting = false;\n\tcanMoveConnection = true;\n\tisCreating = false;\n\n\tboardWidth = 2000;\n\tboardHeight = 1000;\n\n\tconnectingPort : PortComponent;\n\tconnectionRef : ViewContainerRef;\n\tsnackBar: MatSnackBar;\n\n\tcanDrag = () => { \n\t\treturn !this.isPlacing && !this.isConnecting \n\t};\n\n\tboardScale = 1;\n\n\tcreatingItem: any;\n\tcreatingItemOptions: any;\n\n\tcopiedItems: CopiedItem[] = [];\n\n\tstartCreating(creatingItem: any, options: any){\n\t\tthis.isCreating = true;\n\t\tthis.creatingItem = creatingItem;\n\t\tthis.creatingItemOptions = options;\n\t}\n\n\tstopCreating(){\n\t\tthis.isCreating = false;\n\t\tthis.creatingItem = null;\n\t\tthis.creatingItemOptions = null;\n\t}\n\n\tstartPlacing(){\n\t\tthis.isPlacing = true;\n\t}\n\n\tstopPlacing(){\n\t\tthis.isPlacing = false;\n\t}\n\n\tstartConnecting(portComponent: PortComponent){\n\t\tlet board = document.getElementById(\"board\");\n\t\tboard.classList.remove(\"infocus\");\n\t\tthis.isConnecting = true;\n\t\tthis.connectingPort = portComponent;\n\t}\n\n\tstopConnecting(){\n\t\tlet board = document.getElementById(\"board\");\n\t\tboard.classList.add(\"infocus\");\n\t\tboard.onmousemove = null;\n\t\tboard.ontouchmove = null;\n\t\tthis.isConnecting = false;\n\t\tthis.connectingPort = null;\n\t}\n\n\tshowSnack(message: string){\n\t\tthis.snackBar.open(message,\"×\", {\n\t\t\tduration: message.length * 115,\n\t\t\thorizontalPosition: \"right\",\n\t\t});\n\t}\n\n\tcopyItems(items: CopiedItem[]){\n\t\tif(items.length == 0)\n\t\t\treturn;\n\t\tthis.copiedItems = items;\n\t}\n\n\tpasteItem(x: number = -1, y: number = -1){\n\t\tlet components = [];\n\t\tlet connectionsList = [];\n\t\tfor(let item of this.copiedItems){\n\t\t\tconnectionsList = connectionsList.concat(item.outputConnectionsList);\n\t\t}\n\n\t\tlet minX = Number.MAX_VALUE;\n\t\tlet minY = Number.MAX_VALUE;\n\t\tlet maxX = -1;\n\t\tlet maxY = -1;\n\n\t\tthis.copiedItems.forEach(item => {\n\t\t\tminX = Math.min(item.options.X, minX);\n\t\t\tminY = Math.min(item.options.Y, minY);\n\t\t\tmaxX = Math.max(item.options.X + 80, maxX);\n\t\t\tmaxY = Math.max(item.options.Y + 80, maxY);\n\t\t})\n\n\t\tlet width = maxX - minX;\n\t\tlet height = maxY - minY;\n\n\t\tlet pasteOriginX = Math.min(x < 0 ? maxX + 40 : x + width, this.boardWidth);\n\t\tlet pasteOriginY = Math.min(y < 0 ? maxY + 40 : y + height, this.boardHeight);\n\n\t\tfor(let item of this.copiedItems){\n\t\t\tlet options = item.options;\n\n\t\t\tlet pasteX = pasteOriginX - width + (options.X - minX)\n\t\t\tlet pasteY = pasteOriginY - height + (options.Y - minY)\n\t\n\t\t\tlet component = this.createComponent(item.component, pasteX, pasteY, options);\n\t\t\tconnectionsList = connectionsList.map(conn => {\n\t\t\t\tif(conn.from === item.logicComponent.originID){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: component.getLogicComponent().originID,\n\t\t\t\t\t\tto: conn.to,\n\t\t\t\t\t\tlineBreaks: conn.lineBreaks,\n\t\t\t\t\t\ttitle: conn.title\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(conn.to === item.logicComponent.originID){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: conn.from,\n\t\t\t\t\t\tto: component.getLogicComponent().originID,\n\t\t\t\t\t\tlineBreaks: conn.lineBreaks,\n\t\t\t\t\t\ttitle: conn.title\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn conn;\n\t\t\t})\n\t\t\tcomponents.push(component);\n\t\t}\n\t\tfor(let connection of connectionsList){\n\n\t\t\tlet comp1 = components.find(comp => comp.getLogicComponent().originID == connection.from);\n\t\t\tlet comp2 = components.find(comp => comp.getLogicComponent().originID == connection.to);\n\n\t\t\tif(comp1 && comp2){\n\t\t\t\tlet comp1Initiated = false;\n\t\t\t\tlet comp2Initiated = false;\n\t\t\t\tcomp1.onViewInit.push(()=> {\n\t\t\t\t\tcomp1Initiated = true;\n\t\t\t\t\tif(comp2Initiated){\n\t\t\t\t\t\tthis.connectPorts(comp1.getPortComponent(true), comp2.getPortComponent(false), \n\t\t\t\t\t\tfalse, connection.lineBreaks.map(br => {return {x: pasteOriginX - width + (br.x - minX),y: pasteOriginY - height + (br.y - minY) }}), connection.title);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tcomp2.onViewInit.push(()=> {\n\t\t\t\t\tcomp2Initiated = true;\n\t\t\t\t\tif(comp1Initiated){\n\t\t\t\t\t\tthis.connectPorts(comp1.getPortComponent(true), comp2.getPortComponent(false), \n\t\t\t\t\t\tfalse, connection.lineBreaks.map(br => {return {x: pasteOriginX - width + (br.x - minX),y: pasteOriginY - height + (br.y - minY) }}), connection.title);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn components;\n\t}\n\n\tconnectPorts(portComponent1: PortComponent, portComponent2: PortComponent, isReadOnly: boolean = false, lineBreaks: LineBreak[] = [], title: string = \"\"){\n\t\tlet factory : ComponentFactory<ConnectionComponent> = this.resolver.resolveComponentFactory(ConnectionComponent);\n\t\tlet c : ComponentRef<ConnectionComponent>  = this.connectionRef.createComponent(factory);\n\n\t\tlet logicConn = portComponent1.LogicPort.parent.connectTo(portComponent2.LogicPort.parent, portComponent1.IsOutput);\n\t\tif(logicConn == null){\n\t\t\tc.destroy();\n\t\t\treturn false;\n\t\t}\n\t\tlogicConn.lineBreaks = lineBreaks;\n\t\tlogicConn.title = title;\n\t\tc.instance.LogicConnection = logicConn;\n\t\tc.instance.isReadOnly = isReadOnly;\n\n\t\tc.instance.destroyComponent = () => {\n\t\t\tc.destroy();\n\t\t}\n\n\t\tc.instance.portComponent1 = portComponent1;\n\t\tc.instance.portComponent2 = portComponent2;\n\n\t\treturn true\n\t}\n\n\tpublic createComponent<T>(component: Type<T>, left = 100, top = 100, options: any, isReadOnly: boolean = false) {\n\t\tif(component == null) \n\t\t\treturn;\n\t\tlet factory  = this.resolver.resolveComponentFactory(component);\n\t\tlet c : any = this.connectionRef.createComponent(factory);\n\t\tc.instance.isReadOnly = isReadOnly;\n\t\tlet comp = c.instance.getLogicComponent();\n\n\t\tc.instance.destroyComponent = () => {\n\t\t\tc.destroy();\n\t\t}\n\n\t\tif(options != null){\n\t\t\tfor(let key of Object.keys(options)){\n\t\t\t\tcomp.options[key] = options[key];\n\t\t\t}\n\t\t}\n\t\t\n\t\tc.instance.hasChanged.subscribe(()=>{\n\t\t\tthis.componentChanged.emit();\n\t\t})\n\t\tc.instance.showContextMenu.subscribe((e)=>{\n\t\t\tthis.showComponentContextMenu.emit({\n\t\t\t\tx: c.instance.getLogicComponent().options.X + e.offsetX,\n\t\t\t\ty: c.instance.getLogicComponent().options.Y + e.offsetY,\n\t\t\t});\n\t\t})\n\n\t\tcomp.options.X = left;\n\t\tcomp.options.Y = top;\n\n\t\treturn c.instance;\n\t}\n\n\tconstructor(private resolver: ComponentFactoryResolver) {\n\t}\n}\n","import { HTTPMethod } from \"src/models/enums/HTTPMethod\";\n\nexport function UUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n}\n\nexport function arrayEquals(a1,a2){\n  for(let a of a1){\n    if(a2.indexOf(a) == -1)return false;\n  }\n  for(let a of a2){\n    if(a1.indexOf(a) == -1)return false;\n  }\n  return true;\n}\n\nexport function sleep (time) {\n  return new Promise((resolve) => setTimeout(resolve, time));\n}\n\nlet formattedDbMethod ={\n  \"Inherit\": \"Inherit\",\n  \"GET\": \"SELECT\",\n  \"POST\": \"INSERT\",\n  \"PUT\": \"UPDATE\",\n  \"PATCH\": \"UPDATE\",\n  \"DELETE\": \"DELETE\"\n}\n\nexport function getFormattedMethod(method: HTTPMethod, isDatabase: boolean){\n  return isDatabase ? formattedDbMethod[method.toString()] : method.toString();\n}\n\nexport function download(filename, text) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    \n    element.style.display = 'none';\n    document.body.appendChild(element);\n    \n    element.click();\n    \n    document.body.removeChild(element);\n}\n\nexport function downloadPng(filename, image) {\n  var element = document.createElement('a');\n  element.setAttribute('href', image);\n  element.setAttribute('download', filename);\n  \n  element.style.display = 'none';\n  document.body.appendChild(element);\n  \n  element.click();\n  \n  document.body.removeChild(element);\n}\n\nexport function downloadSvg(filename, svg) {\n\n  var serializer = new XMLSerializer();\n  var source = serializer.serializeToString(svg);\n  \n  //add name spaces.\n  if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n      source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n  }\n  if(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n      source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n  }\n  \n  //add xml declaration\n  source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n  \n  //convert svg source to URI data scheme.\n  var url = \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(source);\n  \n  var element = document.createElement('a');\n  element.setAttribute('href', url);\n  element.setAttribute('download', filename);\n  \n  element.style.display = 'none';\n  document.body.appendChild(element);\n  \n  element.click();\n  \n  document.body.removeChild(element);\n}\n\nexport function clone(object: any): any {\n  var cloneObj = new (object.constructor as any);\n  for (var attribut in object) {\n    if (typeof object[attribut] === \"object\" && object[attribut] != null)\n      cloneObj[attribut] = clone(object[attribut]);\n    else\n      cloneObj[attribut] = object[attribut];\n  }\n  return cloneObj;\n}\n\nexport function createRoundedPath(coords, radius, close) {\n  let path = \"\"\n  const length = coords.length + (close ? 1 : -1)\n  for (let i = 0; i < length; i++) {\n    const a = coords[i % coords.length]\n    const b = coords[(i + 1) % coords.length]\n    const t = Math.min(radius / Math.hypot(b.x - a.x, b.y - a.y), 0.5)\n\n    if (i > 0) path += `Q${a.x},${a.y} ${a.x * (1 - t) + b.x * t},${a.y * (1 - t) + b.y * t}`\n\n    if (!close && i == 0) path += `M${a.x},${a.y}`\n    else if (i == 0) path += `M${a.x * (1 - t) + b.x * t},${a.y * (1 - t) + b.y * t}`\n\n    if (!close && i == length - 1) path += `L${b.x},${b.y}`\n    else if (i < length - 1) path += `L${a.x * t + b.x * (1 - t)},${a.y * t + b.y * (1 - t)}`\n  }\n  if (close) path += \"Z\"\n  return path\n}\n\nexport function createRoundedCanvasPath(ctx: CanvasRenderingContext2D, coords, radius) {\n  const length = coords.length -1\n  ctx.beginPath();\n  for (let i = 0; i < length; i++) {\n    const a = coords[i % coords.length]\n    const b = coords[(i + 1) % coords.length]\n    const t = Math.min(radius / Math.hypot(b.x - a.x, b.y - a.y), 0.5)\n    if (i > 0) {\n      ctx.quadraticCurveTo(a.x, a.y, a.x * (1 - t) + b.x * t, a.y * (1 - t) + b.y * t);\n    }\n    if (i == 0) {\n      ctx.moveTo(a.x, a.y);\n    }\n    if (i == length - 1) {\n      ctx.lineTo(b.x, b.y);\n      ctx.stroke()\n    }\n  }\n  ctx.closePath()\n}\n\n\n(function()\n{\n/* Usefull function */\nfunction dist2D(x1,y1,x2,y2)\n{\tvar dx = x2-x1;\n\tvar dy = y2-y1;\n\treturn Math.sqrt(dx*dx+dy*dy);\n};\n\n/* Add new properties on CanvasRenderingContext2D */\n(CanvasRenderingContext2D.prototype as any).textOverflow = \"\";\n(CanvasRenderingContext2D.prototype as any).textJustify = false;\n(CanvasRenderingContext2D.prototype as any).textStrokeMin = 0;\n\nvar state = [];\nvar save = CanvasRenderingContext2D.prototype.save;\nCanvasRenderingContext2D.prototype.save = function()\n{\tstate.push(\n\t\t{\ttextOverflow: this.textOverflow, \n\t\t\ttextJustify: this.textJustify, \n\t\t\ttextStrokeMin: this.textStrokeMin, \n\t\t});\n\tsave.call(this);\n};\n\nvar restore = CanvasRenderingContext2D.prototype.restore;\nCanvasRenderingContext2D.prototype.restore = function()\n{\trestore.call(this);\n\tvar s = state.pop();\n\tthis.textOverflow = s.textOverflow;\n\tthis.textJustify = s.textJustify;\n\tthis.textStrokeMin = s.textStrokeMin;\n};\n\n/* textPath function */\n\n(CanvasRenderingContext2D.prototype as any).textPath = function (text, path)\n{\t// Helper to get a point on the path, starting at dl \n\t// (return x, y and the angle on the path)\n\tvar di, dpos=0;\n\tvar pos=2;\n\tfunction pointAt(dl)\n\t{\tif (!di || dpos+di<dl)\n\t\t{ for (; pos<path.length; )\n\t\t\t{\tdi = dist2D(path[pos-2],path[pos-1], path[pos],path[pos+1]);\n\t\t\t\tif (dpos+di>dl) break;\n\t\t\t\tpos += 2;\n\t\t\t\tif (pos>=path.length) break;\n\t\t\t\tdpos += di;\n\t\t\t}\n\t\t}\n   \n\t\tvar x, y, dt = dl-dpos;\n\t\tif (pos>=path.length) \n\t\t{\tpos = path.length-2;\n\t\t}\n\n\t\tif (!dt) \n\t\t{\tx = path[pos-2];\n\t\t\ty = path[pos-1];\n\t\t}\n\t\telse\n\t\t{\tx = path[pos-2]+ (path[pos]-path[pos-2])*dt/di;\n\t\t\ty = path[pos-1]+ (path[pos+1]-path[pos-1])*dt/di;\n\t\t}\n\t\treturn [x, y, Math.atan2(path[pos+1]-path[pos-1], path[pos]-path[pos-2])];\n\t}\n\n\tvar letterPadding = this.measureText(\" \").width *0.25;\n  \n\t// Calculate length\n\tvar d = 0;\n\tfor (var i=2; i<path.length; i+=2)\n\t{\td += dist2D(path[i-2],path[i-1],path[i],path[i+1])\n\t}\n\tif (d < this.minWidth) return;\n\tvar nbspace = text.split(\" \").length -1;\n\n\t// Remove char for overflow\n\tif (this.textOverflow != \"visible\")\n\t{\tif (d < this.measureText(text).width + (text.length-1 + nbspace) * letterPadding)\n\t\t{\tvar overflow = (this.textOverflow==\"ellipsis\") ? '\\u2026' : this.textOverflow||\"\";\n\t\t\tvar dt = overflow.length-1;\n\t\t\tdo\n\t\t\t{\tif (text[text.length-1]===\" \") nbspace--;\n\t\t\t\ttext = text.slice(0,-1);\n\t\t\t} while (text && d < this.measureText(text+overflow).width + (text.length + dt + nbspace) * letterPadding)\n\t\t\ttext += overflow;\n\t\t}\n\t}\n\n\t// Calculate start point\n\tvar start = 0;\n\tswitch (this.textJustify || this.textAlign)\n\t{\tcase true: // justify\n\t\tcase \"center\":\n\t\tcase \"end\":\n\t\tcase \"right\":\n\t\t{\t// Justify\n\t\t\tif (this.textJustify) \n\t\t\t{\tstart = 0;\n\t\t\t\tletterPadding = (d - this.measureText(text).width) / (text.length-1 + nbspace);\n\t\t\t}\n\t\t\t// Text align\n\t\t\telse\n\t\t\t{\tstart = d - this.measureText(text).width - (text.length + nbspace) * letterPadding;\n\t\t\t\tif (this.textAlign == \"center\") start /= 2;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\t// left\n\t\tdefault: break;\n\t}\n  \n\t// Do rendering\n\tfor (var t=0; t<text.length; t++)\n\t{\tvar letter = text[t];\n\t\tvar wl = this.measureText(letter).width;\n    \n\t\tvar p = pointAt(start+wl/2);\n\n\t\tthis.save();\n\t\tthis.textAlign = \"center\";\n\t\tthis.translate(p[0], p[1]);\n\t\tthis.rotate(p[2]);\n\t\tif (this.lineWidth>0.1) this.strokeText(letter,0,0);\n\t\tthis.fillText(letter,0,0);\n\t\tthis.restore();\n\t\tstart += wl+letterPadding*(letter==\" \"?2:1);\n\t}\n  \n};\n\n})();\n\nexport function getRateFromOutputRate(outputRate){\n\tlet minRate = 0.75;\n\tlet maxRate = 2.5;\n\tlet maxOutputRate = 10;\n\tlet diff = maxRate - minRate;\n\treturn minRate + (outputRate / maxOutputRate) * diff;\n}\nexport function getRateFromPerformance(performance){\n\tlet minRate = 1.25;\n\tlet maxRate = 3.5;\n\tlet maxPerformance = 10;\n\tlet diff = maxRate - minRate;\n\treturn minRate + (performance / maxPerformance) * diff;\n}","import * as objectHash from 'object-hash';\nimport { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint } from \"./Endpoint\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class Proxy extends LogicComponent implements IDataOperator{\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    streamConnectionTable: { [id:string]:Connection } = {};\n    options: ProxyOptions;\n    fillColor = false;\n    color = \"#283c86\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new ProxyOptions();\n        this.options.title = \"Proxy\";\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId];\n            if(targetConnection == null)\n                throw new Error(\"Connection doesn't exist (response to unknown request)\");\n            if(data.header.stream != true) {\n                this.connectionTable[data.responseId] = null;  // reset request id\n                this.streamConnectionTable[data.responseId] = null;\n            }\n            this.fireReceiveData(data);\n            let result = await this.inputPort.sendData(data,targetConnection);\n            if(!result && data.header.stream){\n                data.header.stream = false;\n                data.requestId = data.responseId;\n                data.responseId = null;\n                let res = this.outputPort.sendData(data,data.origin);\n                if(res){\n                    this.connectionTable[data.responseId] = null;\n                    this.streamConnectionTable[data.responseId] = null;\n                }\n            }\n        }\n        else{\n            if(data.requestId == null )\n                throw new Error(\"requestId can not be null.\");\n\n            this.fireReceiveData(data);\n\n            if(this.streamConnectionTable[data.requestId] != null){\n                data.origin = this.streamConnectionTable[data.requestId];\n                data.originID = this.originID;\n                await this.outputPort.sendData(data,this.streamConnectionTable[data.requestId]);\n                return;\n            }\n\n            this.connectionTable[data.requestId] = data.origin;\n\n            // Find connection that has given endpoint\n            let targetEndpoint = null;\n            let targetConnection = null;\n            for(let connection of this.outputPort.connections){\n                targetEndpoint = connection.getOtherPort(this.outputPort).parent\n                    .getAvailableEndpoints().find(ep => ep.url === data.header.endpoint.endpoint.url);\n                if(targetEndpoint){\n                    targetConnection = connection;\n                    break;\n                }\n            }\n            if(targetEndpoint == null){\n                this.fireShowStatusCode(404);\n                return;\n            }\n            data.origin = targetConnection;\n            data.originID = this.originID;\n            this.streamConnectionTable[data.requestId] = data.origin;\n            await this.outputPort.sendData(data,data.origin);\n        }\n    }\n\n    /**\n     * \n     * Proxy can't send data on its own\n     */\n    sendData(request: RequestData): void {}\n\n    getAvailableEndpoints(): Endpoint[]{\n       let connectableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (connectableEndpoints.find(ep => ep.url === endpoint.url) != null)\n                if(!duplicate)\n                    connectableEndpoints.push(endpoint);\n            });        \n        }\n        return connectableEndpoints;\n    }\n}\n\nexport class ProxyOptions extends Options{\n}\n\n","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { APIType } from \"./enums/APIType\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\n\nexport class API extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    connectionTable: { [id:string]: Connection } = {};\n    options: APIOptions;\n    color: string = \"#4CA1AF\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);       \n        this.options = new APIOptions(); \n        this.options.title = \"API\";\n        let initialEndpoint = new Endpoint(\"api/posts\", [HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE,])\n        initialEndpoint.protocol = Protocol.HTTP;\n        this.options.endpoints = [\n            initialEndpoint\n        ];\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            // API received data from action \n            let targetConnection = this.connectionTable[data.responseId]\n            this.fireReceiveData(data);\n            if(targetConnection == null) \n                return;\n            this.connectionTable[data.responseId] = null; // reset request id\n        }\n        else{\n            // Null check\n            if(data.requestId == \"\" || data.requestId == null) \n                throw new Error(\"Request ID can not be null\");\n            if(data.header.endpoint == null) \n                throw new Error(\"Endpoint can not be null\")\n\n            let targetEndpoint = this.getTargetEndpoint(data);\n            if(targetEndpoint == null)\n                return;\n\n            this.fireReceiveData(data);\n            this.requestReceived();\n\n\n            if(this.connectionTable[data.requestId] != null){ // Check if the api is already streaming to this connection\n                // Client sent data to stream\n                if(data.header.stream == false && targetEndpoint.grpcMode != gRPCMode.Unary || targetEndpoint.protocol == Protocol.WebSockets) {// Client wants to end stream\n                    this.connectionTable[data.requestId] = null;\n                    this.requestProcessed();\n                    return;\n                }\n            }\n            else{\n                this.connectionTable[data.requestId] = data.origin; // Save connection to request package\n                if(data.header.stream){\n                    if(targetEndpoint.grpcMode != gRPCMode.Unary || targetEndpoint.protocol == Protocol.WebSockets){\n                        // Client wants to start stream\n                        /*\n                        This streaming process feels kinda clunky, it will be commented for now\n                        this.stream(this.getResponse(data), targetEndpoint);\n                        */\n                        this.requestProcessed();\n                        return;\n                    }\n                }\n            }\n          \n            if(!await this.throttleThroughput(5000)){\n                this.requestProcessed();\n                return;\n            }\n\n            // Send data to every action\n            for(let action of targetEndpoint.actions){\n                // Get connection to given action endpoint\n                let targetConnection: Connection;\n\n                for(let connection of this.outputPort.connections){\n                    let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                    if(action.endpoint != null && endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                        targetConnection = connection;\n                        break;\n                    }\n                }\n                if(targetConnection == null)\n                    continue;\n                // Create new data package\n                let request = new RequestData();\n                let endpointRef = new EndpointRef();\n                endpointRef.endpoint = action.endpoint;\n                endpointRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n                request.header = new RequestDataHeader(endpointRef,action.endpoint.protocol);\n\n                request.origin = targetConnection;\n                request.originID = this.originID;\n                request.requestId = UUID();\n\n                if(action.asynchronous){\n                    this.outputPort.sendData(request, targetConnection);\n                }\n                else{\n                    await this.outputPort.sendData(request, targetConnection);\n                    this.connectionTable[request.requestId] = request.origin;\n                }\n            }\n\n            // Send response back to client\n            this.requestProcessed();\n            if(data.sendResponse)\n                await this.sendData(this.getResponse(data));\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId] || response.origin;\n        if(targetConnection == null)\n            throw new Error(\"target connection is null\");\n        if(response.header.stream != true) // reset request id\n            this.connectionTable[response.responseId] = null; \n        let res = await this.inputPort.sendData(response, targetConnection);\n        if(!res && response.header.stream) // End the stream if sending data didn't success\n            this.connectionTable[response.responseId] = null;\n    }\n\n    async stream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        if(this.connectionTable[data.responseId] == null ||(\n            streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"] &&\n            streamingEndpoint.grpcMode != gRPCMode[\"Bidirectional Streaming\"] && \n            streamingEndpoint.protocol != Protocol.WebSockets) ||\n            this.options.endpoints.indexOf(streamingEndpoint) == -1) return;\n        await this.sendData(data);\n        await this.stream(data, streamingEndpoint);\n    }\n}\n\nexport class APIOptions extends EndpointOptions{\n    type: APIType = APIType.REST;\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { UUID } from \"src/shared/ExtensionMethods\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { HTTPStatus } from \"./enums/HTTPStatus\";\nimport { ReplacementPolicy } from \"./enums/ReplacementPolicy\";\nimport { WritePolicy } from \"./enums/WritePolicy\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Database } from \"./Database\";\n\nexport class Cache extends LogicComponent implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port\n    options: CacheOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    color = \"#b21f1f\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.outputPort = new Port(this,true,false);      \n        this.options = new CacheOptions();  \n        this.options.title = \"Cache\";\n    }\n\n    async receiveData(request: RequestData, fromOutput = false) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[request.responseId]\n            if(targetConnection == null) return; \n            await this.sendData(request);\n        }\n        else{\n            this.fireReceiveData(request);\n            if(request.header.endpoint == null) return;\n            this.connectionTable[request.requestId] = request.origin;\n            if(request.header.endpoint.method == HTTPMethod.GET && request.sendResponse){ // Client wants to write\n                let cacheHit = Math.random() > 0.43 ? true : false; // Random chance of cache hit\n                if(cacheHit){\n                    let response = new RequestData();\n                    response.responseId = request.requestId;\n                    response.requestId = UUID();\n                    response.origin = request.origin;\n                    response.originID = this.originID;\n                    response.header = new RequestDataHeader(request.header.endpoint, request.header.protocol);\n                    this.fireShowStatusCode(HTTPStatus[\"Cache Hit\"])\n                    await this.sendData(response);\n                    return;\n                }\n                this.fireShowStatusCode(HTTPStatus[\"Cache Miss\"])\n            }\n\n            if(this.outputPort.connections.length == 0) \n                return;\n\n            switch(this.options.writePolicy){\n                case WritePolicy[\"Write-Through\"]:\n                    await this.writeThrough(request);\n                    break;\n                case WritePolicy[\"Write-Back (Behind)\"]:\n                    await this.writeBack(request);\n                    break;\n                default:\n                    await this.writeThrough(request);\n                    break;            \n            }\n        }\n    }\n\n    async writeThrough(data: RequestData){\n        // write to cache, then database, if both succeeded, return success\n        data.origin = this.outputPort.connections[0];\n        data.originID = this.originID;\n        // Write to cache\n\n        // Send to DB\n        await this.outputPort.sendData(data);\n    }\n\n\n    async writeBack(data: RequestData){\n        // write to cache, send success, write asynchronously to database\n        data.origin = this.outputPort.connections[0];\n        data.originID = this.originID;\n        // Write to cache\n\n        // Send to DB\n        if(data.header.endpoint.method == HTTPMethod.GET)\n            await this.outputPort.sendData(data);\n        else{\n            this.outputPort.sendData(data);\n            data.responseId = data.requestId;\n            data.requestId = UUID();\n            if(data.sendResponse)\n                await this.sendData(data);\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n\n    canConnectTo(port: Port, connectingWithOutput: boolean){\n        if(!super.canConnectTo(port, connectingWithOutput))\n            return false;\n        // Output of cache can connect only to database\n        if(!connectingWithOutput)\n            return true;\n        if(port.parent instanceof Database)\n            return true;\n        this.fireFailedConnect({message: \"Output of Cache can only be connected to Database.\"});\n        return false;\n    }\n\n    getAvailableEndpoints(): Endpoint[]\n    {\n        if(this.outputPort.connections.length > 0)\n            return this.outputPort.connections[0].getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n        return [];\n    }\n}\n\nexport class CacheOptions extends Options {\n    replacementPolicy: ReplacementPolicy = ReplacementPolicy[\"Least Frequently Used\"];\n    writePolicy: WritePolicy = WritePolicy[\"Write-Through\"];\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\n\n@Component({\n\tselector: 'slider-described',\n\ttemplateUrl: './slider-described.component.html',\n\tstyleUrls: ['./slider-described.component.scss']\n})\nexport class SliderDescribedComponent implements OnInit {\n\n\tconstructor() { }\n\n\t@Input() Model: IDataOperator;\n\t@Input() Title: string = \"Performance: \";\n\t@Input() Property: string = \"performance\";\n\t@Input() AfterChange;\n\t@Input() Tooltip: string = \"Changes the throughput of the component.\"\n\n\tngOnInit(): void {\n\t}\n}\n","<div>\n    <span class=\"property-name endpoint-title\">{{Title}} <info-tooltip [Message]=\"Tooltip\"></info-tooltip></span>\n    <div>\n        <mat-slider\n            thumbLabel\n            [(ngModel)]=\"Model.options[Property]\"\n            tickInterval=\"1\"\n            step=\"1\"\n            min=\"1\"\n            max=\"10\"\n            (change)=\"AfterChange()\"\n            aria-label=\"units\"></mat-slider>\n        <div class=\"mat-slider-description\" \n        [class.low]=\"Model.options[Property] < 4\" \n        [class.medium]=\"Model.options[Property] < 8 && Model.options[Property] >= 4\" \n        [class.high]=\"Model.options[Property] >= 8\">\n            <span>Low</span>\n            <span>Medium</span>\n            <span>High</span>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ClientCluster } from 'src/models/ClientCluster';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'clientcluster',\n\ttemplateUrl: './clientcluster.component.html',\n\tstyleUrls: ['./clientcluster.component.scss']\n})\nexport class ClientclusterComponent extends OperatorComponent implements OnInit {\n\n\tLogicClientCluster: ClientCluster = new ClientCluster();\n\n\tngAfterViewInit(): void {\n\t\tthis.Init(true);\n  \t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicClientCluster;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new ClientCluster();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[class.side-menu]=\"isReadOnly\"\n[style.left.px]=\"LogicClientCluster.options.X \"\n[style.top.px]=\"LogicClientCluster.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/clientcluster.svg\">\n    </div>    \n</div>\n<div *ngIf=\"isReadOnly\" \n[style.left.px]=\"LogicClientCluster.options.X \"\n[style.top.px]=\"LogicClientCluster.options.Y\" class=\"read-only-controls\">\n    <button *ngIf=\"!LogicClientCluster.isSendingData\" (click)=\"LogicClientCluster.startSendingData(); cdRef.detectChanges()\">\n        <img src=\"./assets/send.svg\">\n    </button>\n    <button *ngIf=\"LogicClientCluster.isSendingData\" (click)=\"LogicClientCluster.stopSendingData(); cdRef.detectChanges()\">\n        <img src=\"./assets/send.svg\" style=\"transform: rotateY(180deg);\">\n    </button>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <slider-described class=\"mt\"\n        [Model]=\"LogicClientCluster\"\n        [Title]=\"'Output rate'\"\n        [Property]=\"'outputRate'\"\n        [AfterChange]=\"afterChange\"\n        [Tooltip]=\"'Change the speed at which data is sent.'\"\n        ></slider-described>\n    </div>\n    <div #actions>\n        <div class=\"options-actions\">\n            <div class=\"actions-container\">\n                <button *ngIf=\"!LogicClientCluster.isSendingData\"\n                 (click)=\"LogicClientCluster.startSendingData()\">Start sending data</button>\n                <button *ngIf=\"LogicClientCluster.isSendingData\"\n                 (click)=\"LogicClientCluster.stopSendingData()\">Stop sending data</button>\n            </div>\n        </div>\n    </div>\n</div>","import * as objectHash from 'object-hash';\nimport { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint } from \"./Endpoint\";\nimport { BalancingAlgorithm } from \"./enums/BalancingAlgorithm\";\nimport { LoadBalancerType } from \"./enums/LoadBalancerType\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class LoadBalancer extends LogicComponent implements IDataOperator{\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    streamConnectionTable: { [id:string]:Connection } = {};\n    options: LoadBalancerOptions;\n    color = \"#021B79\";\n\n    roundRobinIndex = -1;\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new LoadBalancerOptions();\n        this.options.title = \"Load Balancer\";\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId];\n            if(targetConnection == null)\n                throw new Error(\"Connection doesn't exist (response to unknown request)\");\n            if(data.header.stream != true) {\n                this.connectionTable[data.responseId] = null;  // reset request id\n                this.streamConnectionTable[data.responseId] = null;\n            }\n            this.fireReceiveData(data);\n            let result = await this.inputPort.sendData(data,targetConnection);\n            if(!result && data.header.stream){\n                data.header.stream = false;\n                data.requestId = data.responseId;\n                data.responseId = null;\n                let res = this.outputPort.sendData(data,data.origin);\n                if(res){\n                    this.connectionTable[data.responseId] = null;\n                    this.streamConnectionTable[data.responseId] = null;\n                }\n            }\n        }\n        else{\n            if(data.requestId == null )\n                throw new Error(\"requestId can not be null. Please specify property requestId of RequestData\");\n\n            this.fireReceiveData(data);\n\n            if(this.streamConnectionTable[data.requestId] != null){\n                data.origin = this.streamConnectionTable[data.requestId];\n                data.originID = this.originID;\n                await this.outputPort.sendData(data,this.streamConnectionTable[data.requestId]);\n                return;\n            }\n\n            this.connectionTable[data.requestId] = data.origin;\n\n            switch(this.options.algorithm){\n                case BalancingAlgorithm[\"Round Robin\"]:\n                    await this.roundRobin(data);\n                    break;\n                case BalancingAlgorithm[\"IP Hash\"]:\n                    await this.ipHash(data);\n                    break;\n                case BalancingAlgorithm[\"Least Connections\"]:\n                    await this.leastConnections(data);\n                    break;\n                case BalancingAlgorithm[\"URL Hash\"]:\n                    await this.urlHash(data);\n                    break;   \n                default:\n                    await this.roundRobin(data);\n                    break;            \n            }\n        }\n    }\n\n    async roundRobin(data: RequestData){\n        let nodesLength = this.outputPort.connections.length;\n        this.roundRobinIndex++;\n        if(this.roundRobinIndex >= nodesLength){\n            this.roundRobinIndex = 0;\n        }\n        data.origin = this.outputPort.connections[this.roundRobinIndex];\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data,data.origin);\n    }\n\n    async ipHash(data: RequestData){\n        let hash = objectHash({id:data.originID}).substr(0,2);\n        let hashInt = parseInt(hash,16);\n        let length = this.outputPort.connections.length;\n        let connectionIndex = hashInt % length;\n        data.origin = this.outputPort.connections[connectionIndex];\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data, this.outputPort.connections[connectionIndex]);\n    }\n\n    async leastConnections(data: RequestData){\n        let allConnections: Connection[] = [];\n        let keys = Object.keys(this.streamConnectionTable);\n        for(let i = keys.length-1; i >= 0; i--){\n            let conn = keys[i];\n            if(this.streamConnectionTable[conn] == null) \n                break;\n            allConnections.push(this.streamConnectionTable[conn]);\n        }\n        let least = this.outputPort.connections[0];\n        let leastNum = Number.MAX_VALUE;\n        for(let conn of this.outputPort.connections){\n            let length = allConnections.filter(x => x==conn).length;\n            if(length < leastNum){\n                least = conn;\n                leastNum = length;\n            }\n        }\n        data.origin = least;\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data, least);\n    }\n\n    async urlHash(data: RequestData){\n        let url: string;\n        if(data.header.endpoint.endpoint == null) \n            url = \"/\";\n        else \n            url = data.header.endpoint.endpoint.url;\n        let hash = objectHash({id:url}).substr(0,2);\n        let hashInt = parseInt(hash,16);\n        let length = this.outputPort.connections.length;\n        let connectionIndex = hashInt % length;\n        data.origin = this.outputPort.connections[connectionIndex];\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data, this.outputPort.connections[connectionIndex]);\n    }\n\n    /**\n     * \n     * This method currently does nothing for LoadBalancer\n     */\n    sendData(request: RequestData): void {}\n\n    getAvailableEndpoints(): Endpoint[]{\n       let connectableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (connectableEndpoints.find(ep => ep.url === endpoint.url) != null)\n                if(!duplicate)\n                    connectableEndpoints.push(endpoint);\n            });        \n        }\n        return connectableEndpoints;\n    }\n}\n\nexport class LoadBalancerOptions extends Options{\n    type: LoadBalancerType = LoadBalancerType[\"Layer 7\"];\n    algorithm: BalancingAlgorithm = BalancingAlgorithm[\"Round Robin\"];\n}\n\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { LineBreak } from 'src/models/Connection';\nimport { EventDispatcher, Handler } from 'src/models/Shared/EventDispatcher';\nimport { ConnectionComponent } from './board/components/connection/connection.component';\nimport { OperatorComponent } from './board/components/Shared/OperatorComponent';\n\nclass StopSelectingEvent {\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n}\n\ninterface ChangeSelectionEvent {}\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class SelectionService {\n\t@Output() onStopSelecting = new EventEmitter<StopSelectingEvent>();\n\n\tprevX: number;\n\tprevY: number;\n\n\tcurrentConnectionSelection: ConnectionComponent;\n\tcurrentLineBreakSelection: LineBreak;\n\tcurrentLineBreakList: LineBreak[];\n\tcurrentConnectionSelections: ConnectionComponent[] = [];\n\tcurrentSelections: OperatorComponent[] = [];\n\n\tselectionRect: HTMLDivElement;\n\n\tselectionStartX: number;\n\tselectionStartY: number;\n\n\tselectionClientX: number;\n\tselectionClientY: number;\n\n\tselectionPrevX: number;\n\tselectionPrevY: number;\n\n\tselectionWidth = 0;\n\tselectionHeight = 0;\n\n\tselectionScale: number = 1;\n\n\taddSelection(selection: OperatorComponent, multiple: boolean = false){\n\t\tif(this.currentSelections.indexOf(selection) == -1){ // Add to current selections\n\t\t\tif(multiple){ // Add to current multiple selections\n\t\t\t\tselection.anchorRef.nativeElement.classList.add(\"is-current-selection\")\n\t\t\t\tselection.cdRef.reattach();\n\t\t\t\tthis.currentSelections.push(selection);\n\t\t\t\t// Look if the component is connected to already selected component\n\t\t\t\tlet selectionOutputPort = selection.getLogicComponent().getPort(true);\n\t\t\t\tlet selectionInputPort = selection.getLogicComponent().getPort(false);\n\t\t\t\tfor(let component of this.currentSelections){\n\t\t\t\t\tlet logicComponent = component.getLogicComponent();\n\t\t\t\t\tlet outputPort = logicComponent.getPort(true);\n\t\t\t\t\tlet inputPort = logicComponent.getPort(false);\n\t\t\t\t\tif(outputPort){\n\t\t\t\t\t\tif(selectionInputPort){\n\t\t\t\t\t\t\tlet logicConnection = outputPort.connections.find(connection =>\n\t\t\t\t\t\t\t\tconnection.getOtherPort(outputPort) === selectionInputPort\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tif(logicConnection != null){\n\t\t\t\t\t\t\t\tlet comp = selection.getPortComponent(false).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\t\t\t\tcomp = selection.getPortComponent(false).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(inputPort){\n\t\t\t\t\t\tif(selectionOutputPort){\n\t\t\t\t\t\t\tlet logicConnection = inputPort.connections.find(connection =>\n\t\t\t\t\t\t\t\tconnection.getOtherPort(inputPort) === selectionOutputPort\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tif(logicConnection != null){\n\t\t\t\t\t\t\t\tlet comp = selection.getPortComponent(true).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\t\t\t\tcomp = selection.getPortComponent(true).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse{ // Set as currently selected\n\t\t\t\tfor(let oldSelection of this.currentSelections){\n\t\t\t\t\toldSelection.anchorRef.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\t\t\toldSelection.cdRef.detach();\n\t\t\t\t}\n\t\t\t\tselection.cdRef.reattach();\n\t\t\t\tselection.anchorRef.nativeElement.classList.add(\"is-current-selection\")\n\t\t\t\tthis.currentSelections = [selection];\n\t\t\t\tthis.clearCurrentConnectionSelections();\n\t\t\t}\n\t\t}\n\t\tthis.clearConnectionSelection();\n\t\tthis.clearLineBreakSelection();\n\t\t\n\t\tthis.fireChangeSelection({});\n\t}\n\n\tclearSelection(){\n\t\tfor(let selection of this.currentSelections){\n\t\t\tselection.anchorRef.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\tselection.cdRef.detach();\n\t\t}  \n\t\tthis.currentSelections = [];\n\t\tthis.fireChangeSelection({});\n\t}\n\n\t// Connection\n\tsetConnectionSelection(selection: ConnectionComponent){\n\t\tif(selection != this.currentConnectionSelection){\n\t\t\tif(this.currentConnectionSelection != null){\n\t\t\t\tthis.currentConnectionSelection.mainPath.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\t}\n\t\t\tselection.mainPath.nativeElement.classList.add(\"is-current-selection\")\n\t\t\tthis.currentConnectionSelection = selection;\n\t\t\tthis.clearSelection();\n\t\t\tthis.clearLineBreakSelection();\n\t\t\tthis.clearCurrentConnectionSelections();\n\t\t\tthis.fireChangeSelection({});\n\t\t}\n\t}\n\n\tclearConnectionSelection(){\n\t\tif(this.currentConnectionSelection != null){\n\t\t\tthis.currentConnectionSelection.mainPath.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\tthis.currentConnectionSelection = null;\n\t\t\tthis.fireChangeSelection({});\n\t\t}  \n\t}\n\n\t// LineBreak\n\tsetLineBreakSelection(selection: LineBreak, list: LineBreak[]){\n\t\tif(selection != this.currentLineBreakSelection){\n\t\t\tthis.currentLineBreakSelection = selection;\n\t\t\tthis.currentLineBreakList = list;\n\t\t\tthis.clearSelection();\n\t\t\tthis.clearConnectionSelection();\n\t\t\tthis.fireChangeSelection({});\n\t\t}\n\t}\n\n\tclearLineBreakSelection(){\n\t\tif(this.currentLineBreakSelection != null){\n\t\t\tthis.currentLineBreakList = [];\n\t\t\tthis.currentLineBreakSelection = null;\n\t\t\tthis.fireChangeSelection({});\n\t\t}  \n\t}\n\n\tclearCurrentConnectionSelections(){\n\t\tthis.currentConnectionSelections = [];\n\t}\n\n\t/**\n\t * Returns true if something was deleted, false otherwise\n\t */\n\tdeleteSelection(): boolean{\n\t\tif(this.currentConnectionSelection == null && this.currentSelections.length == 0 && this.currentLineBreakSelection == null)\n\t\t\treturn false;\n\t\tif(this.currentConnectionSelection){\n\t\t\tthis.currentConnectionSelection.destroySelf();\n\t\t\treturn true;\n\t\t}\n\t\telse if(this.currentLineBreakSelection){\n\t\t\tlet index = this.currentLineBreakList.findIndex(b => b.x === this.currentLineBreakSelection.x && b.y === this.currentLineBreakSelection.y);\n\t\t\tif(index === -1)\n\t\t\t\treturn false;\n\t\t\tthis.currentLineBreakList.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\tfor(let selection of this.currentSelections){\n\t\t\tselection.destroySelf();    \n\t\t}\n\t\tthis.clearSelection();\n\t\tthis.clearLineBreakSelection();\n\t\tthis.clearCurrentConnectionSelections();\n\t\tthis.clearConnectionSelection();\n\t\treturn true;\n\t}\n\n\tstartSelecting(e: MouseEvent, scale: number){\n\t\tthis.clearConnectionSelection();\n\t\tthis.clearLineBreakSelection();\n\t\tthis.clearCurrentConnectionSelections();\n\t\tthis.clearSelection();\n\t\tlet board = document.getElementById(\"board\");\n\t\tlet rect = document.createElement(\"div\");\n\t\trect.style.left = `${e.clientX}px`;\n\t\trect.style.top = `${e.clientY}px`;\n\t\trect.style.width = \"0px\";\n\t\trect.style.height = \"0px\";\n\t\trect.className = \"selection-rect\"\n\t\trect.style.display = \"none\";\n\t\tboard.appendChild(rect);\n\n\t\tthis.selectionRect = rect;\n\t\tthis.selectionStartX = e.offsetX;\n\t\tthis.selectionStartY = e.offsetY;\n\n\t\tthis.selectionClientX = e.clientX;\n\t\tthis.selectionClientY = e.clientY;\n\n\t\tthis.selectionPrevX = e.clientX;\n\t\tthis.selectionPrevY = e.clientY;\n\n\t\tthis.selectionWidth = 0;\n\t\tthis.selectionHeight = 0;\n\n\t\tthis.selectionScale = scale;\n\n\t\twindow.addEventListener(\"mousemove\", this.moveSelectionRect);\n\t\twindow.addEventListener(\"mouseup\", this.stopSelecting);\n\t}\n\n\tstopSelecting = () => {\n\t\tthis.onStopSelecting.emit({ \n\t\t\ttop: parseInt(this.selectionRect.style.top), \n\t\t\tleft: parseInt(this.selectionRect.style.left),\n\t\t\twidth: Math.abs(this.selectionWidth),\n\t\t\theight: Math.abs(this.selectionHeight)\n\t\t});\n\t\twindow.removeEventListener(\"mousemove\", this.moveSelectionRect);\n\t\twindow.removeEventListener(\"mouseup\", this.stopSelecting);\n\t\tdocument.getElementById(\"board\").removeChild(this.selectionRect);\n\t\tthis.selectionRect = null;\n\t}\n\n\tmoveSelectionRect = (e: MouseEvent) =>{\n\t\tthis.selectionRect.style.display = \"block\";\n\t\tlet diffX = (this.selectionPrevX - e.clientX) / this.selectionScale;\n\t\tlet diffY = (this.selectionPrevY - e.clientY) / this.selectionScale;\n\n\t\tthis.selectionWidth -= diffX;\n\t\tthis.selectionHeight -= diffY;\n\n\n\t\tthis.selectionRect.style.width = Math.abs(this.selectionWidth).toString() + \"px\";\n\t\tthis.selectionRect.style.left = e.clientX < this.selectionClientX ? (this.selectionStartX + this.selectionWidth).toString() + \"px\" : this.selectionStartX.toString() + \"px\";\n\n\t\tthis.selectionRect.style.height = Math.abs(this.selectionHeight).toString() + \"px\";\n\t\tthis.selectionRect.style.top = e.clientY < this.selectionClientY ? (this.selectionStartY + this.selectionHeight).toString() + \"px\" : this.selectionStartY.toString() + \"px\";\n\n\t\tthis.selectionPrevX = e.clientX;\n\t\tthis.selectionPrevY = e.clientY;\n\t}\n\n\tpublic moveComponents = (event: Event, scale: number): void => {\n\t\tlet cX = 0;\n\t\tlet cY = 0;\n\t\tif(event instanceof MouseEvent){\n\t\t\tcX = event.clientX;\n\t\t\tcY = event.clientY;\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\t\t\tcX = event.touches[0].clientX;\n\t\t\tcY = event.touches[0].clientY;\n\t\t}\n\t\tfor(let selection of this.currentSelections){\n\t\t\tselection.setPosition(\n\t\t\t\tselection.getLogicComponent().options.X - (this.prevX - cX) / scale, \n\t\t\t\tselection.getLogicComponent().options.Y - (this.prevY - cY) / scale\n\t\t\t);\n\t\t\t\n\t\t}\n\t\tfor(let connection of this.currentConnectionSelections){\n\t\t\tif(connection.LogicConnection.lineBreaks.length > 2){\n\t\t\t\tconnection.LogicConnection.lineBreaks.filter((c ,i) => {\n\t\t\t\t\treturn i!==0 && i < connection.LogicConnection.lineBreaks.length-1;\n\t\t\t\t}).forEach(br => {\n\t\t\t\t\tlet lineBreak = this.convertLineBreak(\n\t\t\t\t\t\t{x: br.x - (this.prevX - cX) / scale,\n\t\t\t\t\t\ty: br.y - (this.prevY - cY) / scale})\n\t\t\t\t\tbr.x = lineBreak.x;\n\t\t\t\t\tbr.y = lineBreak.y;\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.prevX = this.convertScaledPosition(cX, scale);\n\t\tthis.prevY = this.convertScaledPosition(cY, scale);\n\t}\n\n\tprivate convertLineBreak(lineBreak: LineBreak){\n\t\treturn {x: Math.round(lineBreak.x / 10) * 10, y: Math.round(lineBreak.y / 10) * 10};\n\t}\n\n\tprivate convertScaledPosition(number, scale: number){\n\t\treturn Math.round(number / (10 * scale)) * (10 * scale);\n\t}\n\n\tconstructor() { }\n\n\tprivate changeSelectionDispatcher = new EventDispatcher<ChangeSelectionEvent>();\n\tpublic onChangeSelection(handler: Handler<ChangeSelectionEvent>) {\n\t\tthis.changeSelectionDispatcher.register(handler);\n\t}\n\tprivate fireChangeSelection(event: ChangeSelectionEvent) { \n\t\tthis.changeSelectionDispatcher.fire(event);\n\t}\n}","import { IDataOperator, ShowStatusCodeEvent } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint } from \"./Endpoint\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { RequestData } from \"./RequestData\";\nimport { Handler } from \"./Shared/EventDispatcher\";\n\nexport class TextField extends LogicComponent implements IDataOperator{\n    \n    options: TextFieldOptions;\n\n    constructor() {\n        super();\n        this.options = new TextFieldOptions();\n        this.options.title = \"Text Field\";\n    }\n    \n    receiveData(data: RequestData, fromOutput: boolean): void { \n        return;\n    }\n    sendData(data: RequestData): void { \n        return;\n    }\n    getAvailableEndpoints(): Endpoint[] {\n        return [];\n    }\n\n    destroy = () => {}\n}\n\nexport class TextFieldOptions extends Options{\n    width: number = 140;\n    height: number = 60;\n    fontSize: number = 12;\n    isBold: boolean = false;\n    isItalic: boolean = false;\n    backgroundColor: string = \"rgba(0, 0, 0, 0.5)\";\n    color: string = \"#fff\";\n}","import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ViewingService {\n\n\tpublic ViewUpdated = new EventEmitter();\n\n\tprivate HELPERS_KEY = \"helpers\";\n\tprivate helpersDisabled: boolean;\n\n\tprivate TITLES_KEY = \"titles\";\n\tprivate titlesHidden: boolean;\n\n\tprivate TECHNOLOGIES_KEY = \"technologies\";\n\tprivate technologiesHidden: boolean;\n\n\tprivate DARKMODE_KEY = \"darkmode\"\n\tprivate darkModeEnabled: boolean;\n\n\tprivate PERFORMANCEMODE_KEY = \"performancemode\"\n\tprivate performanceModeEnabled: boolean;\n\n\tprivate RESPONSES_KEY = \"responses\"\n\tprivate responsesHidden: boolean;\n\n\tconstructor() { \n\t\tthis.helpersDisabled = localStorage.getItem(this.HELPERS_KEY) == \"true\" ? true : false;\n\t\tthis.titlesHidden = localStorage.getItem(this.TITLES_KEY) == \"true\" ? true : false;\n\t\tthis.technologiesHidden = localStorage.getItem(this.TECHNOLOGIES_KEY) == \"true\" ? true : false;\n\t\tthis.darkModeEnabled = localStorage.getItem(this.DARKMODE_KEY) == \"true\" ? true : false;\n\t\tthis.performanceModeEnabled = localStorage.getItem(this.PERFORMANCEMODE_KEY) == \"true\" ? true : false;\n\t\tthis.responsesHidden = localStorage.getItem(this.RESPONSES_KEY) == \"true\" ? true : false;\n\t}\n\n\tisHelpersDisabled(){\n\t\treturn this.helpersDisabled;\n\t}\n\n\tsetHelpersDisabled(disabled: boolean = true){\n\t\tlocalStorage.setItem(this.HELPERS_KEY, disabled.toString());\n\t\tthis.helpersDisabled = disabled;\n\t\tthis.ViewUpdated.emit();\n\t}\n\n\tisTitlesHidden(){\n\t\treturn this.titlesHidden;\n\t}\n\n\tsetTitlesHidden(hidden: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.TITLES_KEY, hidden.toString());\n\t\tthis.titlesHidden = hidden;\n\t\tthis.ViewUpdated.emit();\n\t}\n\n\tisTechnologiesHidden(){\n\t\treturn this.technologiesHidden;\n\t}\n\n\tsetTechnologiesHidden(hidden: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.TECHNOLOGIES_KEY, hidden.toString());\n\t\tthis.technologiesHidden = hidden;\n\t\tthis.ViewUpdated.emit();\n\t}\n\n\tisDarkMode(){\n\t\treturn this.darkModeEnabled;\n\t}\n\n\tsetDarkMode(enabled: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.DARKMODE_KEY, enabled.toString());\n\t\tif(enabled)\n\t\t\tdocument.documentElement.classList.add(\"dark-mode\");\n\t\telse \n\t\t\tdocument.documentElement.classList.remove(\"dark-mode\");\n\t\tthis.darkModeEnabled = enabled;\n\t\tthis.ViewUpdated.emit();\n\t}\n\n\tisPerformanceMode(){\n\t\treturn this.performanceModeEnabled;\n\t}\n\n\tsetPerformanceMode(enabled: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.PERFORMANCEMODE_KEY, enabled.toString());\n\t\tthis.performanceModeEnabled = enabled;\n\t}\n\n\tisResponsesHidden(){\n\t\treturn this.responsesHidden;\n\t}\n\n\tsetResponsesHidden(hidden: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.RESPONSES_KEY, hidden.toString());\n\t\tthis.responsesHidden = hidden;\n\t}\n}","import { Component, OnInit } from '@angular/core';\nimport { CloudStorage } from 'src/models/CloudStorage';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'cloudstorage',\n\ttemplateUrl: './cloudstorage.component.html',\n\tstyleUrls: ['./cloudstorage.component.scss']\n})\nexport class CloudStorageComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicCloudStorage : CloudStorage = new CloudStorage();\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicCloudStorage;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new CloudStorage();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicCloudStorage.options.X\"\n[style.top.px]=\"LogicCloudStorage.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <span class=\"img bg-cloudstorage\"></span>\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <endpoint-select\n        [Model]=\"LogicCloudStorage\"\n        [Type]=\"APIType.REST\"\n        [Multiple]=\"false\"\n        [HasActions]=\"false\"\n        [ModifiableMethods]=\"false\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n    <div #simulations>\n        <slider-described\n        [Model]=\"LogicCloudStorage\"\n        [AfterChange]=\"afterChange\"\n        ></slider-described>\n    </div>\n</div>","<span *ngIf=\"!viewingService.isHelpersDisabled()\" matTooltip=\"{{ Message }}\" class=\"property-info-button\"><i class=\"far fa-question-circle\"></i></span>","import { Component, Input, OnInit } from '@angular/core';\nimport { ViewingService } from '../viewing.service';\n\n@Component({\n\tselector: 'info-tooltip',\n\ttemplateUrl: './info-tooltip.component.html',\n\tstyleUrls: ['./info-tooltip.component.scss']\n})\nexport class InfoTooltipComponent implements OnInit {\n\n\t@Input() Message : string;\n\n  \tconstructor(public viewingService: ViewingService) { }\n\n\tngOnInit(): void { }\n}\n","export enum Protocol{\n    HTTP,\n    WebSockets,\n    Database\n}","import { RequestData } from \"./RequestData\";\nimport { Port } from \"./Port\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\ninterface SendDataEvent {}\n\nexport class LineBreak{\n    x: number;\n    y: number;\n    constructor(x: number,y: number){\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport class Connection{\n    port1: Port;\n    port2: Port;\n    lineBreaks: LineBreak[];\n    title: string = \"\";\n\n    constructor(port1: Port, port2: Port) {\n        this.port1 = port1;\n        this.port2 = port2;\n    }\n\n    getOtherPort(port: Port): Port{\n        return port === this.port1 ? this.port2 : this.port1;\n    }\n\n    /**\n     * sendData: sends data to connection\n     */\n    public async sendData(data: RequestData, origin: Port) {\n        if(origin === this.port1){\n            this.fireSendData(origin);\n            let delay = this.getSendDataDelay();\n            await this.port2.receiveData(data, delay);\n        }\n        else if(origin === this.port2){\n            this.fireSendData(origin);\n            let delay = this.getSendDataDelay();\n            await this.port1.receiveData(data, delay);\n        }\n        else\n            throw new Error(\"Invalid origin in Connection.sendData\");\n    }\n\n    destroy(){\n        this.port1.removeConnection(this,true);\n    }\n\n    \n    private sendDataDispatcher = new EventDispatcher<SendDataEvent>();\n    public onSendData(handler: Handler<SendDataEvent>) {\n        this.sendDataDispatcher.register(handler);\n    }\n    private fireSendData(event: SendDataEvent) { \n        this.sendDataDispatcher.fire(event);\n    }\n\n    public getSendDataDelay: () => number = () => {return 180};\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class CloudStorage extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    options: CloudStorageOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    fillColor = false;\n    color = \"#dd1818\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.options = new CloudStorageOptions();  \n        this.options.title = \"Cloud Storage\";\n        \n        this.options.endpoints = [\n            new Endpoint(\"/cloud\",[HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.DELETE])    \n        ]\n    }\n\n    async receiveData(data: RequestData) {\n        let targetEndpoint = this.getTargetEndpoint(data);\n        if(targetEndpoint == null)\n            return;\n\n        this.fireReceiveData(data);\n        this.requestReceived();\n\n        this.connectionTable[data.requestId] = data.origin;\n\n        if(!await this.throttleThroughput(5000)){\n            this.requestProcessed();\n            return;\n        }\n\n        // Send response back\n        this.requestProcessed();\n        if(data.sendResponse)\n            await this.sendData(this.getResponse(data));\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n}\n\nexport class CloudStorageOptions extends EndpointOptions{\n}    \n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateComponent } from './create/create.component';\nimport { GettingStartedComponent } from './pages/getting-started/getting-started.component';\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\nimport { PagesComponent } from './pages/pages.component';\n\nconst routes: Routes = [\n  \n  {\n    path: \"create\",\n    component: CreateComponent,\n  },\n  {\n    path: \"\",\n    component: PagesComponent,\n    children: [\n      {\n        path: \"getting-started\",\n        component: GettingStartedComponent\n\n      },\n      {\n        path: \"**\",\n        component: LandingPageComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class CDN extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    options: CDNOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    color = \"#EB5757\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.options = new CDNOptions();  \n        this.options.title = \"CDN\";\n        \n        this.options.endpoints = [\n            new Endpoint(\"/cdn\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE,HTTPMethod.PATCH])    \n        ]\n    }\n\n    async receiveData(data: RequestData) {\n        let targetEndpoint = this.getTargetEndpoint(data);\n        if(targetEndpoint == null)\n            return;\n\n        this.fireReceiveData(data);\n        this.requestReceived();\n\n        this.connectionTable[data.requestId] = data.origin;\n\n        // Send response back\n        this.requestProcessed();\n        if(data.sendResponse)\n            await this.sendData(this.getResponse(data));\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n}\n\nexport class CDNOptions extends EndpointOptions{\n}","import { Component, OnInit } from '@angular/core';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { MessageQueue } from 'src/models/MessageQueue';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'messagequeue',\n\ttemplateUrl: './messagequeue.component.html',\n\tstyleUrls: ['./messagequeue.component.scss']\n})\nexport class MessagequeueComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicMessageQueue : MessageQueue = new MessageQueue();\n\n\thandleEndpointUrlChange(endpoint: Endpoint){\n\t\tif(endpoint.url == null || endpoint.url.replace(/\\s/g,\"\") == \"\")\n\t\t\tendpoint.url = \"Message Queue\";\n\t}\n\n\tngAfterViewInit(): void {\n\t\tsuper.Init();\n\t\tthis.LogicMessageQueue.onReceiveData((data) => {\n\t\t\tthis.setReceiveDataAnimation();\n\t\t\tthis.cdRef.detectChanges();\n\t\t});\n\t\tthis.LogicMessageQueue.onSendData((data) => {\n\t\t\tthis.cdRef.detectChanges();\n\t\t})\n  \t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicMessageQueue;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new MessageQueue();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicMessageQueue.options.X\"\n[style.top.px]=\"LogicMessageQueue.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container messages\">\n        <div class=\"message empty\" *ngFor=\"let num of [].constructor(10)\"></div>\n    </div>  \n    <div class=\"img-container messages\" (mousedown)=\"handleMousedown( $event )\"\n    (click)=\"handleClick($event)\" (touchstart)=\"handleMousedown($event)\">\n        <div class=\"message img\" [style.backgroundColor]=\"LogicMessageQueue.color\" *ngFor=\"let message of LogicMessageQueue.messages | slice:0:10;\"></div>\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-endpoints-container\">\n            <div class=\"options-endpoints-top\">\n                <span class=\"property-name\">Endpoints: <info-tooltip [Message]=\"'A message queue endpoint. Any consumers must have an endpoint with the same url.'\"></info-tooltip></span>\n            </div>\n            <div class=\"options-endpoints\">\n                <div class=\"options-endpoint\" *ngFor=\"let endpoint of this.LogicMessageQueue.options.endpoints\">\n                    <input (change)=\"afterChange()\" (blur)=\"handleEndpointUrlChange(endpoint)\" class=\"endpoint-url\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"endpoint.url\" placeholder=\"url\">\n                </div>\n            </div>\n        </div>\n    </div>\n    <div #simulations>\n        <slider-described\n        [Model]=\"LogicMessageQueue\"\n        [AfterChange]=\"afterChange\"\n        ></slider-described>\n    </div>\n</div>","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { arrayEquals, getRateFromPerformance, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { APIType } from \"./enums/APIType\";\n\nexport class WebServer extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    options: WebServerOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    fillColor = false;\n    color = \"#009FFF\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);     \n        this.outputPort = new Port(this, true, true);       \n        this.options = new WebServerOptions();  \n        this.options.title = \"Web Server\";\n        \n        this.options.endpoints = [\n            new Endpoint(\"/\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE,])    \n        ]\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId]\n            if(targetConnection == null) // connection could be ended before last data was sent\n                return; \n            // Checking if endpoint wasn't removed before stream end\n            this.fireReceiveData(data);\n            if(data.header.stream){\n                let hasAction = false;\n\n                this.getEndpoints().forEach(endpoint => {\n                    endpoint.actions.forEach(action => {\n                        if(action.endpoint.url === data.header.endpoint.endpoint.url &&\n                        arrayEquals(action.endpoint.supportedMethods, data.header.endpoint.endpoint.supportedMethods)){\n                            hasAction = true;\n                        }\n                    })\n                })\n                if(!hasAction){ // send end of stream to out if the action no longer exists\n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let result = this.outputPort.sendData(data,data.origin)\n                    if(result)\n                        this.connectionTable[data.responseId] = null;\n                    return;\n                }\n                let result = await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n                if(!result && data.header.stream){ // send end stream to out if the client doesn't exist \n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let res = this.outputPort.sendData(data,data.origin)\n                    if(res)\n                        this.connectionTable[data.responseId] = null;\n                }\n            }\n            else{\n                if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"])\n                    await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n            }\n        }\n        else{\n            if(data.requestId == \"\" || data.requestId == null) throw new Error(\"Request ID can not be null\");\n            if(data.header.endpoint == null) throw new Error(\"Endpoint can not be null\")\n\n            let targetEndpoint = this.getTargetEndpoint(data);\n\n            if(targetEndpoint == null)\n                return;\n\n            this.fireReceiveData(data);\n            this.requestReceived();\n\n            let sendResponse = false;\n            let isFirstStreamRequest = this.connectionTable[data.requestId] == null && data.header.stream;\n            let isLastStreamRequest = this.connectionTable[data.requestId] != null && !data.header.stream;\n            let dontSendRequestResponse = (isFirstStreamRequest || isLastStreamRequest);\n\n            this.connectionTable[data.requestId] = data.origin;\n\n            if(!await this.throttleThroughput(5000)){\n                this.requestProcessed();\n                return;\n            }\n\n            // Send data to every action \n            for(let action of targetEndpoint.actions){\n                // Get connection to given action endpoint\n                if(action.endpoint == null || action.endpoint.url == null)\n                    continue;\n                let targetConnection: Connection;\n                for(let connection of this.outputPort.connections){\n                    let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                    if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                        targetConnection = connection;\n                        break;\n                    }\n                }\n                if(targetConnection == null)\n                    continue;\n\n                let isStream = action.endpoint.protocol == Protocol.WebSockets || action.endpoint.grpcMode != gRPCMode.Unary;\n                if(data.header.stream && isStream && action.endpoint.grpcMode == gRPCMode[\"Server Streaming\"] \n                && !dontSendRequestResponse || dontSendRequestResponse && !isStream) {\n                    continue;\n                }\n                let requestId = (isStream && !data.header.stream && !isLastStreamRequest) ? UUID() : data.requestId;\n                let request = new RequestData();\n                let epRef = new EndpointRef();\n                epRef.endpoint = action.endpoint;\n                epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n                \n                request.header = new RequestDataHeader(epRef, action.endpoint.protocol, data.header.stream);\n\n                request.origin = targetConnection;\n                request.originID = this.originID;\n                request.requestId = requestId;\n\n                if(isStream)\n                    this.outputPort.sendData(request, targetConnection);\n                else{\n                    if(!data.header.stream) \n                        sendResponse = true;\n                    if(action.asynchronous){\n                        this.outputPort.sendData(request, targetConnection);\n                    }\n                    else{\n                        await this.outputPort.sendData(request, targetConnection);\n                        if(data.sendResponse)\n                            this.connectionTable[requestId] = data.origin;\n                    }\n                }\n            }\n\n           // if(isFirstStreamRequest)\n           //     this.connectionTable[data.requestId] = data.origin;\n           this.requestProcessed();\n           if(targetEndpoint.grpcMode == gRPCMode[\"Server Streaming\"]) {\n                if(isFirstStreamRequest){\n                    // Initiate server stream \n                    this.serverStream(this.getResponse(data), targetEndpoint);\n                }\n                if(isLastStreamRequest)\n                    this.connectionTable[data.requestId] = null;\n            }\n            if((sendResponse || targetEndpoint.actions.length == 0 && !data.header.stream) && data.sendResponse){\n                //Send response back\n                //this.connectionTable[data.requestId] = data.origin;\n                console.log(\"send response\");\n                await this.sendData(this.getResponse(data));\n            }\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            return;\n        let result = await this.inputPort.sendData(response, targetConnection);\n        if(!result && response.header.stream){\n            response.header.stream = false;\n            response.requestId = response.responseId;\n            response.responseId = null;\n            let res = this.outputPort.sendData(response,response.origin)\n            if(res){\n                this.connectionTable[response.responseId] = null;\n            }\n        }\n        else{\n            this.connectionTable[response.responseId] = null;\n        }\n    }\n\n    async stream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        if(this.connectionTable[data.responseId] == null ||(\n            streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"] &&\n            streamingEndpoint.grpcMode != gRPCMode[\"Bidirectional Streaming\"] && \n            streamingEndpoint.protocol != Protocol.WebSockets) ||\n            this.options.endpoints.indexOf(streamingEndpoint) == -1) return;\n        await this.sendData(data);\n        await this.stream(data, streamingEndpoint);\n    }\n\n    async serverStream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        if(streamingEndpoint.actions.filter(action => action.endpoint.grpcMode != gRPCMode[\"Server Streaming\"]).length == 0 || this.connectionTable[data.responseId] == null || (\n            streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"]) ||\n            this.getEndpoints().indexOf(streamingEndpoint) == -1) return;\n\n        for(let action of streamingEndpoint.actions){\n            // Get connection to given action endpoint\n            if(action.endpoint == null || action.endpoint.url == null || action.endpoint.grpcMode != gRPCMode.Unary || action.endpoint.protocol == Protocol.WebSockets)\n                continue;\n\n            let targetConnection: Connection;\n            for(let connection of this.outputPort.connections){\n                let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                    targetConnection = connection;\n                    break;\n                }\n            }\n            if(targetConnection == null)\n                continue;\n\n            let newReqId = UUID();\n            this.connectionTable[newReqId] = data.origin\n            let request = new RequestData();\n            let epRef = new EndpointRef();\n            epRef.endpoint = action.endpoint;\n            epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n\n            request.header = new RequestDataHeader(epRef, action.endpoint.protocol);\n            request.origin = targetConnection;\n            request.originID = this.originID;\n            request.requestId = newReqId;\n            await this.outputPort.sendData(request, targetConnection);\n        }\n\n        await this.sendData(data);\n        await this.serverStream(data, streamingEndpoint);\n    }\n}\n\nexport class WebServerOptions extends EndpointOptions{\n    type: APIType = APIType.REST;\n}","import { Component, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { DatabaseType } from 'src/models/enums/DatabaseType';\nimport { LoadBalancerType } from 'src/models/enums/LoadBalancerType';\nimport { WritePolicy } from 'src/models/enums/WritePolicy';\nimport { PlacingService } from '../../placing.service';\nimport { ApiComponent } from '../components/api/api.component';\nimport { ApiGatewayComponent } from '../components/apigateway/apigateway.component';\nimport { CacheComponent } from '../components/cache/cache.component';\nimport { ClientComponent } from '../components/client/client.component';\nimport { ClientclusterComponent } from '../components/clientcluster/clientcluster.component';\nimport { CloudStorageComponent } from '../components/cloudstorage/cloudstorage.component';\nimport { DatabaseComponent } from '../components/database/database.component';\nimport { LoadbalancerComponent } from '../components/loadbalancer/loadbalancer.component';\nimport { MessagequeueComponent } from '../components/messagequeue/messagequeue.component';\nimport { ProxyComponent } from '../components/proxy/proxy.component';\nimport { PubsubComponent } from '../components/pubsub/pubsub.component';\nimport { TextfieldComponent } from '../components/textfield/textfield.component';\nimport { WebserverComponent } from '../components/webserver/webserver.component';\nimport { CDNComponent } from '../components/cdn/cdn.component';\n\nclass MenuItem<T>{\n\tcomponent: T;\n\tcaption: string;\n\tmark: string;\n\timageUrl: string;\n\tpresetOptions: Object;\n\tinfo: string;\n\tcolor: string;\n\n\tconstructor(component: T, caption: string, mark: string, imageUrl: string,info: string, presetOptions: Object = null) {\n\t\tthis.component = component;\n\t\tthis.caption = caption;\n\t\tthis.mark = mark;\n\t\tthis.imageUrl = imageUrl;\n\t\tthis.presetOptions = presetOptions;\n\t\tthis.info = info;\n\t\tthis.color = (component as any).getColor() || \"#6059DF\";\n\t}\n}\n\nclass Category{\n\ttitle: string;\n\titems: MenuItem<any>[];\n\tisOpen: boolean;\n\n\tconstructor(title: string, items: MenuItem<any>[] = []) {\n\t\tthis.title = title;\n\t\tthis.items = items;\n\t}\n}\n\n@Component({\n\tselector: 'app-componentmenu',\n\ttemplateUrl: './componentmenu.component.html',\n\tstyleUrls: ['./componentmenu.component.scss'],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ComponentmenuComponent implements OnInit {\n\n\tallCategories: Category[] = [];\n\tcategories: Category[] = [];\n\tisOpen: boolean = true;\n\tcurrentInfoComponent: MenuItem<any>;\n\tisInfoOpen: boolean = false;\n\n\tcurrentItem: MenuItem<any>;\n\tplacingItem: MenuItem<any>;\n\n\t@ViewChild(\"board\", { read: ViewContainerRef }) connectionRef;\n\t@ViewChild(\"placingItemRef\") placingItemRef;\n\n\tconstructor(private placingService: PlacingService, public viewingService: ViewingService) \n\t{\n\t\t// Create Categories\n\t\tthis.allCategories.push(new Category(\"Client-side\",[\n\t\t\tnew MenuItem(ClientComponent, \"Basic Client\", \"\",\"./assets/client.svg\", '<p>Client is the component, that simulates either a real client, or client side application on any device.</p><p>Use the output port to connect to other compoenents via their input port. Select endpoint you want to connect to and the HTTP method used.</p><p>Once connected to an endpoint, you can use the <span class=\"highlight\">Send data</span> button. To send data automatically, use the loop icon next to <span class=\"highlight\">Send data</span> button.</p>'),\n\t\t\tnew MenuItem(ClientclusterComponent, \"Client Cluster\", \"\",\"./assets/clientcluster.svg\", '<p>Client cluster represents multiple clients. It sends data to any endpoint available at given speed.<p>To start sending data, click the <span class=\"highlight\">Start sending data</span> button.</p>')\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Server-side\",[\n\t\t\tnew MenuItem(WebserverComponent, \"HTTP Web Server\", \"HTTP\",\"./assets/webserver.svg\", '<p>Web server component simulates an HTTP web server that can accept requests and send them to an API.</p><p>Use the input port to connect a client and the output port to connect other services and APIs.</p>'),\n\t\t\tnew MenuItem(ApiGatewayComponent, \"Web API Gateway\", \"GW\",\"./assets/apigateway.svg\", '<p>API gateway is used to reduce number of requests, the client needs to send.</p><p>Use the input port to connect a client and the output port to connect other services and APIs.</p><p>There are 5 types of endpoints available, every type has some unique properties. Each endpoint can have actions that will be triggered on each request. For more info about each endpoint type, use the <span class=\"highlight\">?</span> icon.</p>'),\n\t\t\tnew MenuItem(ApiComponent, \"Web API Service\", \"API\",\"./assets/api.svg\", '<p>API is general component to simulate any API or microservice.</p> <p>Use the input port to connect a client and the output port to connect other services and APIs. </p> <p>API can be of 5 available types, each used for different purposes. You can add any number of endpoints that can have different actions like sending new requests to other APIs or storing data to database.</p>'),\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Storage\",[\n\t\t\tnew MenuItem(DatabaseComponent, \"SQL Database\", \"SQL\",\"./assets/database.svg\", '<p>Database component simulates a database server with one default endpoint.</p> <p>Use the input port to connect services to database and receive data through.</p> <p>You can use the <span class=\"highlight\">Shard Database</span> action to shard the database and create 3 default shards. </p>',{ type: DatabaseType.SQL }),\n\t\t\tnew MenuItem(DatabaseComponent, \"NoSQL Database\", \"NoSQL\",\"./assets/database.svg\",'<p>Database component simulates a database server with one default endpoint.</p> <p>Use the input port to connect services to database and receive data through.</p> <p>You can use the <span class=\"highlight\">Shard Database</span> action to shard the database and create 3 default shards. </p>', { type: DatabaseType.NoSQL }),\n\t\t\tnew MenuItem(CloudStorageComponent, \"Cloud Storage\", \"CLOUD\",\"./assets/cloudstorage.svg\",'<p>Cloud storage component simulates any cloud storage with one default endpoint.</p> <p>Use the input port to connect services to cloud and receive data through.</p>'),\n\t\t\tnew MenuItem(CDNComponent, \"Content Delivery Network\", \"CDN\",\"./assets/cdn.svg\",'<p>CDN component simulates a Content Delivery Network with one default endpoint.</p> <p>Use the input port to connect services to CDN and receive data through.</p>'),\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Caches\",[\n\t\t\tnew MenuItem(CacheComponent, \"Write-Through Cache\", \"WT\",\"./assets/cache.svg\", '<p>Cache component simulates a distributed cache with a <span class=\"underline\">random</span> hit/miss chance.</p> <p>Receive data through input port. The output port is connected to <span class=\"highlight\">Database</span>.</p> <p>You can change Write and Replacement policies to better specify the behaviour of your cache.</p>', { writePolicy: WritePolicy['Write-Through'] }),\n\t\t\tnew MenuItem(CacheComponent, \"Write-Back Cache\", \"WB\",\"./assets/cache.svg\", '<p>Cache component simulates a distributed cache with a <span class=\"underline\">random</span> hit/miss chance.</p> <p>Receive data through input port. The output port is connected to <span class=\"highlight\">Database</span>.</p> <p>You can change Write and Replacement policies to better specify the behaviour of your cache.</p>', { writePolicy: WritePolicy['Write-Back (Behind)'] })\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Load Balancers & Proxies\",[\n\t\t\tnew MenuItem(LoadbalancerComponent, \"Layer 7 Load Balancer\", \"L7\",\"./assets/loadbalancer.svg\", '<p>Load Balancer component is used to balance load between multiple services. </p> <p>Use the input port to receive data and balance it between connections on output port.</p> <p>Load balancer can work in <span class=\"highlight\">Layer 7</span> or <span class=\"highlight\">Layer 4</span> mode. You can change the balance algorithm to any of 4 available types. </p> '),\n\t\t\tnew MenuItem(LoadbalancerComponent, \"Layer 4 Load Balancer\", \"L4\",\"./assets/loadbalancer.svg\", '<p>Load Balancer component is used to balance load between multiple services. </p> <p>Use the input port to receive data and balance it between connections on output port.</p> <p>Load balancer can work in <span class=\"highlight\">Layer 7</span> or <span class=\"highlight\">Layer 4</span> mode. You can change the balance algorithm to any of 4 available types. </p> ', { type: LoadBalancerType['Layer 4'] }),\n\t\t\tnew MenuItem(ProxyComponent, \"Proxy\", \"PROXY\",\"./assets/proxy.svg\", '<p>Proxy component acts like a man in the middle between client and server. </p> <p>Use the input port to receive data and route it to server through output port.</p>')\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Async Communication\",[\n\t\t\tnew MenuItem(MessagequeueComponent, \"Message Queue\", \"MQ\",\"./assets/messagequeue.svg\", '<p>Message Queue component is used to simulate a single message queue, <span class=\"underline\">not a full fledged message broker</span>.</p> <p>To publish message to queue, use the input port and send data to an endpoint. Consumers can be connected to output port of message queue. These <span class=\"underline\">consumers need to have an endpoint with the same URL</span>.</p> <p>Message can be only send to one consumer. In case of more consumers, the messages will be sent in round robin manner. Consumers can perform actions on data receive. </p> '),\n\t\t\tnew MenuItem(PubsubComponent, \"Publisher/Subscriber Model\", \"PUBSUB\",\"./assets/pubsub.svg\", '<p>Pub/Sub is used for publishers sending data to a specified topic, to which can be connected any number of subscribers.</p> <p>To publish a message, connect to input port and select a topic as an endpoint. You can create any number of topics. Subcribers connect to output port and select any number of topics they want to subscribe. <span class=\"underline\">Subcribers must have an endpoint with the same url as the topic they subscribe</span>.</p>'),\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Other\",[\n\t\t\tnew MenuItem(TextfieldComponent, \"Text Field\", \"TEXT\",\"./assets/text.svg\", '<p>General text field with customizable font size and style.</p>'),\n\t\t]));\n\t\tthis.categories = this.allCategories;\n\t}\n\n\ttoggleWindow(){\n\t\tthis.isOpen = !this.isOpen;\n\t\tthis.categories = this.allCategories;\n\t}\n\n\tsearch(value: string){\n\t\tthis.categories = [];\n\t\tfor(let category of this.allCategories){\n\t\t\tlet relevantItems = category.items.filter(i => this.isSearchRelevant(i, value));\n\t\t\tif(relevantItems.length > 0)\n\t\t\t\tthis.categories.push(new Category(category.title ,relevantItems));\n\t\t}\n\t}\n\n\thoverItem(item: MenuItem<any>){\n\t\tthis.currentItem = item;\n\t}\n\n\tleaveItem(){\n\t\tthis.currentItem = null;\n\t}\n\n\tisSearchRelevant(item: MenuItem<any>, searchValue: string){\n\t\tlet isRelevant = item.caption.toLowerCase().indexOf(searchValue.toLowerCase()) != -1;\n\t\tisRelevant = isRelevant ||  item.mark.toLowerCase().indexOf(searchValue.toLowerCase()) != -1;\n\t\treturn isRelevant;\n\t}\n\t\n\tdragItem(item: MenuItem<any>){\n\t\tthis.placingService.startCreating(item.component, item.presetOptions);\n\t\tthis.placingItem = item;\n\n\t\twindow.addEventListener(\"mousemove\", this.mouseMove);\n\t\twindow.addEventListener(\"mouseup\", this.mouseUp);\n\n\t\twindow.addEventListener(\"touchmove\", this.mouseMove);\n\t\twindow.addEventListener(\"touchend\", this.mouseUp);\n\t\treturn false;\n\t}\n\n\tmouseUp = () =>{\n\t\tthis.placingItem = null;\n\t\twindow.removeEventListener(\"mouseup\",this.mouseUp);\n\t\twindow.removeEventListener(\"mousemove\",this.mouseMove);\n\n\t\twindow.removeEventListener(\"touchend\",this.mouseUp);\n\t\twindow.removeEventListener(\"touchmove\",this.mouseMove);\n\t\t\n\t\tthis.placingService.creatingItem = null;\n\t\tthis.placingService.stopCreating();\n\t\treturn true;\n\t}\n\n\tmouseMove = (e: Event) =>{\n\t\tif(e instanceof MouseEvent){\n\t\t\tthis.placingItemRef.nativeElement.style.width = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.height = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.left = `${e.clientX-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.top = `${e.clientY-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\tthis.placingItemRef.nativeElement.style.width = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.height = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.left = `${e.touches[0].clientX-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.top = `${e.touches[0].clientY-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t}\n\t}\n\n\tshowInfo(item: MenuItem<any>){\n\t\tthis.currentInfoComponent = item;\n\t\tthis.isInfoOpen = true;\n\t}\n\n\tcloseInfo(){\n\t\tthis.isInfoOpen = false;\n\t\tthis.currentInfoComponent = null;\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tngAfterViewInit(){\n\t}\n}\n","<div class=\"component-menu-window\" *ngIf=\"isOpen; else closedWindow\">\n    <div class=\"top\">\n        <input #searchBar (input)=\"search(searchBar.value)\" type=\"text\" autocomplete=\"off\" spellcheck=\"false\" class=\"search\" placeholder=\"search\"/>\n        <span (click)=\"toggleWindow()\" class=\"window-close\">\n            <i class=\"fas fa-minus\"></i>\n        </span>\n    </div>\n    <div class=\"main\">\n        <div class=\"section\" *ngFor=\"let category of categories\" [class.active]=\"category.isOpen\">\n            <div class=\"header\" (click)=\"category.isOpen = !category.isOpen\">\n                <span class=\"title\">{{ category.title }}</span>\n                <span class=\"icon\" *ngIf=\"category.isOpen; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\">\n                <div [style.backgroundColor]=\"item.color\" class=\"section-item\" *ngFor=\"let item of category.items\"\n                (mousedown)=\"dragItem(item)\" (delayed-hover)=\"hoverItem(item)\" delay=\"300\" (mouseout)=\"leaveItem()\"\n                (touchstart)=\"dragItem(item)\">\n                    <span class=\"caption\">{{ item.mark }}</span>\n                    <img src=\"{{ item.imageUrl }}\">\n                    <button *ngIf=\"!viewingService.isHelpersDisabled()\" class=\"info\" (click)=\"showInfo(item)\"><i class=\"far fa-question-circle\"></i></button>\n                </div>\n                <div class=\"section-item fill\">\n                </div>\n                <div class=\"section-item fill\">\n                </div>\n                <div class=\"section-item fill\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"item-description\" *ngIf=\"currentItem != null\" [style.backgroundColor]=\"currentItem.color\">\n    <span>{{ currentItem.caption }}</span>\n    <hr>\n    <img src=\"{{ currentItem.imageUrl }}\">\n</div>\n<div #placingItemRef class=\"section-item placing-item\" *ngIf=\"placingItem != null\" [style.backgroundColor]=\"placingItem.color\">\n    <img src=\"{{ placingItem.imageUrl }}\">\n</div>\n<ng-template #closedWindow>\n    <div class=\"arrow-open\" (click)=\"toggleWindow()\">\n        <i class=\"fas fa-chevron-right\"></i>\n    </div>\n</ng-template>\n<div class=\"component-info-window\" *ngIf=\"isInfoOpen\">\n    <span class=\"component-info-title\">{{currentInfoComponent.caption}}</span>\n    <div class=\"component-info-icon\">\n        <img src=\"{{currentInfoComponent.imageUrl}}\">\n    </div>\n    <div [innerHtml]=\"currentInfoComponent.info\"></div>\n    <button class=\"close\" (click)=\"closeInfo()\"><i class=\"fas fa-times\"></i></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { APIType } from 'src/models/enums/APIType';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { WebServer } from 'src/models/WebServer';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'webserver',\n\ttemplateUrl: './webserver.component.html',\n\tstyleUrls: ['./webserver.component.scss']\n})\nexport class WebserverComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicWebServer : WebServer = new WebServer();\n\n\tconnectableEndpoints: Endpoint[] = [];\n\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tupdateSelection(){\n\t\tthis.connectableEndpoints = this.LogicWebServer.getConnectableEndpoints();\n\t\tfor(let j = 0; j < this.LogicWebServer.options.endpoints.length; j++){\n\t\t\tlet endpoint = this.LogicWebServer.options.endpoints[j];\n\t\t\tfor(let i = 0; i < endpoint.actions.length; i++){\n\t\t\t\tlet action = endpoint.actions[i];\n\t\t\t\tlet currEdp = action.endpoint;\n\t\t\t\tlet currMth = action.method;\n\t\t\t\tthis.LogicWebServer.options.endpoints[j].actions[i].endpoint = null;\n\t\t\t\tif(this.connectableEndpoints.length == 0){\n\t\t\t\t\tthis.connectableEndpoints = [];\n\t\t\t\t\tendpoint.actions = [];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(currEdp != null && currMth != null){\n\t\t\t\t\tfor(let e of this.connectableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\t\t\tif(e.url == currEdp.url)\n\t\t\t\t\t\t\tthis.LogicWebServer.options.endpoints[j].actions[i].endpoint = e;\n\t\t\t\t\t}\n\t\t\t\t\tendpoint.actions[i].method = currMth;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tendpoint.actions.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTypeChange(){\n\t\tlet type = this.LogicWebServer.options.type;\n\t\tlet endpoint: Endpoint;\n\t\tif(type == APIType.REST){\n\t\t\tendpoint = new Endpoint(\"api/posts\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE]);\n\t\t}\n\t\telse if(type == APIType.GraphQL){\n\t\t\tendpoint = new Endpoint(\"/graphql\",[HTTPMethod.GET,HTTPMethod.POST]);\n\t\t}\n\t\telse if(type == APIType.RPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t}\n\t\telse if(type == APIType.gRPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t\tendpoint.grpcMode = gRPCMode.Unary;\n\t\t}\n    \telse if(type == APIType.WebSockets){\n\t\t\tendpoint = new Endpoint(\"api/sendMessage\", [HTTPMethod.GET]);\n\t\t\tendpoint.protocol = Protocol.WebSockets;\n\t\t}\n\t\tthis.LogicWebServer.options.endpoints = [endpoint];\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicWebServer;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new WebServer();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicWebServer.options.X\"\n[style.top.px]=\"LogicWebServer.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <span class=\"img bg-webserver\"></span>\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of endpoints the Web Server has. This can change the behaviour of endpoints.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"handleTypeChange(); afterChange()\" [(ngModel)]=\"LogicWebServer.options.type\">\n                        <mat-option *ngFor=\"let type of APITypeKeys\" [value]=\"type\">{{APIType[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <endpoint-select\n        [Model]=\"LogicWebServer\"\n        [Type]=\"LogicWebServer.options.type\"\n        [HasStreamActions]=\"true\"\n        [ConnectableEndpoints]=\"connectableEndpoints\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n    <div #simulations>\n        <slider-described\n        [Model]=\"LogicWebServer\"\n        [AfterChange]=\"afterChange\"\n        ></slider-described>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}